
first_example.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000408  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000590  08000598  00010598  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000590  08000590  00010598  2**0
                  CONTENTS
  4 .ARM          00000000  08000590  08000590  00010598  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000590  08000598  00010598  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000590  08000590  00010590  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000594  08000594  00010594  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010598  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00010598  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00010598  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000087c  00000000  00000000  000105c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000207  00000000  00000000  00010e3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a8  00000000  00000000  00011048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000080  00000000  00000000  000110f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000014a5  00000000  00000000  00011170  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000b8e  00000000  00000000  00012615  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00004c57  00000000  00000000  000131a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  00017dfa  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001d4  00000000  00000000  00017e50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000578 	.word	0x08000578

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000578 	.word	0x08000578

080001c8 <delay>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void delay(){
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for (uint32_t i=0; i<250000;i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	; (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	0003d08f 	.word	0x0003d08f

080001f4 <main>:
int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
    GPIO_Handle_t GPIOLed_Handle;
    GPIOLed_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_5;
 80001fa:	2305      	movs	r3, #5
 80001fc:	723b      	strb	r3, [r7, #8]
    GPIOLed_Handle.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_GEN_OUTPUT;
 80001fe:	2301      	movs	r3, #1
 8000200:	727b      	strb	r3, [r7, #9]
    GPIOLed_Handle.GPIO_PinConfig.GPIO_OPType=GPIO_OPTYPE_PP;
 8000202:	2300      	movs	r3, #0
 8000204:	733b      	strb	r3, [r7, #12]
    GPIOLed_Handle.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 8000206:	2302      	movs	r3, #2
 8000208:	72bb      	strb	r3, [r7, #10]
    GPIOLed_Handle.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PIN_NOPU_NOPD;
 800020a:	2300      	movs	r3, #0
 800020c:	72fb      	strb	r3, [r7, #11]

    GPIOLed_Handle.pGPIOx=GPIOA;
 800020e:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000212:	607b      	str	r3, [r7, #4]

    GPIO_PeriCloclControl(GPIOA, ENABLE);
 8000214:	2101      	movs	r1, #1
 8000216:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800021a:	f000 f837 	bl	800028c <GPIO_PeriCloclControl>

    GPIO_Init(&GPIOLed_Handle);
 800021e:	1d3b      	adds	r3, r7, #4
 8000220:	4618      	mov	r0, r3
 8000222:	f000 f8a9 	bl	8000378 <GPIO_Init>

    while(1){
    	GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_5);
 8000226:	2105      	movs	r1, #5
 8000228:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800022c:	f000 f96b 	bl	8000506 <GPIO_ToggleOutputPin>
    	delay();
 8000230:	f7ff ffca 	bl	80001c8 <delay>
    	GPIO_ToggleOutputPin(GPIOA,GPIO_PIN_5);
 8000234:	e7f7      	b.n	8000226 <main+0x32>
	...

08000238 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000238:	480d      	ldr	r0, [pc, #52]	; (8000270 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800023c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000240:	480c      	ldr	r0, [pc, #48]	; (8000274 <LoopForever+0x6>)
  ldr r1, =_edata
 8000242:	490d      	ldr	r1, [pc, #52]	; (8000278 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000244:	4a0d      	ldr	r2, [pc, #52]	; (800027c <LoopForever+0xe>)
  movs r3, #0
 8000246:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000248:	e002      	b.n	8000250 <LoopCopyDataInit>

0800024a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800024c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024e:	3304      	adds	r3, #4

08000250 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000250:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000252:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000254:	d3f9      	bcc.n	800024a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000256:	4a0a      	ldr	r2, [pc, #40]	; (8000280 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000258:	4c0a      	ldr	r4, [pc, #40]	; (8000284 <LoopForever+0x16>)
  movs r3, #0
 800025a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800025c:	e001      	b.n	8000262 <LoopFillZerobss>

0800025e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800025e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000260:	3204      	adds	r2, #4

08000262 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000262:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000264:	d3fb      	bcc.n	800025e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000266:	f000 f963 	bl	8000530 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026a:	f7ff ffc3 	bl	80001f4 <main>

0800026e <LoopForever>:

LoopForever:
    b LoopForever
 800026e:	e7fe      	b.n	800026e <LoopForever>
  ldr   r0, =_estack
 8000270:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000274:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000278:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800027c:	08000598 	.word	0x08000598
  ldr r2, =_sbss
 8000280:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000284:	2000001c 	.word	0x2000001c

08000288 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000288:	e7fe      	b.n	8000288 <ADC1_2_IRQHandler>
	...

0800028c <GPIO_PeriCloclControl>:
* @Note 		- none
*
*/

void GPIO_PeriCloclControl(GPIO_RegDef_t* pGPIOx,uint8_t EnorDi)
{
 800028c:	b480      	push	{r7}
 800028e:	b083      	sub	sp, #12
 8000290:	af00      	add	r7, sp, #0
 8000292:	6078      	str	r0, [r7, #4]
 8000294:	460b      	mov	r3, r1
 8000296:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE){
 8000298:	78fb      	ldrb	r3, [r7, #3]
 800029a:	2b01      	cmp	r3, #1
 800029c:	d156      	bne.n	800034c <GPIO_PeriCloclControl+0xc0>
		if(pGPIOx==GPIOA){
 800029e:	687b      	ldr	r3, [r7, #4]
 80002a0:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80002a4:	d106      	bne.n	80002b4 <GPIO_PeriCloclControl+0x28>
			GPIOA_PCLK_EN();
 80002a6:	4b2c      	ldr	r3, [pc, #176]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002aa:	4a2b      	ldr	r2, [pc, #172]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002ac:	f043 0301 	orr.w	r3, r3, #1
 80002b0:	64d3      	str	r3, [r2, #76]	; 0x4c
		}
		else{
		//Not a port
		}
	}
}
 80002b2:	e04b      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOB){
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	4a29      	ldr	r2, [pc, #164]	; (800035c <GPIO_PeriCloclControl+0xd0>)
 80002b8:	4293      	cmp	r3, r2
 80002ba:	d106      	bne.n	80002ca <GPIO_PeriCloclControl+0x3e>
			GPIOB_PCLK_EN();
 80002bc:	4b26      	ldr	r3, [pc, #152]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002c0:	4a25      	ldr	r2, [pc, #148]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002c2:	f043 0302 	orr.w	r3, r3, #2
 80002c6:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002c8:	e040      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOC){
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a24      	ldr	r2, [pc, #144]	; (8000360 <GPIO_PeriCloclControl+0xd4>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PeriCloclControl+0x54>
			GPIOC_PCLK_EN();
 80002d2:	4b21      	ldr	r3, [pc, #132]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002d6:	4a20      	ldr	r2, [pc, #128]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002d8:	f043 0304 	orr.w	r3, r3, #4
 80002dc:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002de:	e035      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOD){
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a20      	ldr	r2, [pc, #128]	; (8000364 <GPIO_PeriCloclControl+0xd8>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PeriCloclControl+0x6a>
			GPIOD_PCLK_EN();
 80002e8:	4b1b      	ldr	r3, [pc, #108]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002ec:	4a1a      	ldr	r2, [pc, #104]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 80002ee:	f043 0308 	orr.w	r3, r3, #8
 80002f2:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80002f4:	e02a      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOE){
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a1b      	ldr	r2, [pc, #108]	; (8000368 <GPIO_PeriCloclControl+0xdc>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PeriCloclControl+0x80>
			GPIOE_PCLK_EN();
 80002fe:	4b16      	ldr	r3, [pc, #88]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000300:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000302:	4a15      	ldr	r2, [pc, #84]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000304:	f043 0310 	orr.w	r3, r3, #16
 8000308:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800030a:	e01f      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOF){
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a17      	ldr	r2, [pc, #92]	; (800036c <GPIO_PeriCloclControl+0xe0>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d106      	bne.n	8000322 <GPIO_PeriCloclControl+0x96>
			GPIOF_PCLK_EN();
 8000314:	4b10      	ldr	r3, [pc, #64]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000316:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000318:	4a0f      	ldr	r2, [pc, #60]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 800031a:	f043 0320 	orr.w	r3, r3, #32
 800031e:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000320:	e014      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOG){
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	4a12      	ldr	r2, [pc, #72]	; (8000370 <GPIO_PeriCloclControl+0xe4>)
 8000326:	4293      	cmp	r3, r2
 8000328:	d106      	bne.n	8000338 <GPIO_PeriCloclControl+0xac>
			GPIOG_PCLK_EN();
 800032a:	4b0b      	ldr	r3, [pc, #44]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 800032c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800032e:	4a0a      	ldr	r2, [pc, #40]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000330:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000334:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000336:	e009      	b.n	800034c <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOH){
 8000338:	687b      	ldr	r3, [r7, #4]
 800033a:	4a0e      	ldr	r2, [pc, #56]	; (8000374 <GPIO_PeriCloclControl+0xe8>)
 800033c:	4293      	cmp	r3, r2
 800033e:	d105      	bne.n	800034c <GPIO_PeriCloclControl+0xc0>
			GPIOH_PCLK_EN();
 8000340:	4b05      	ldr	r3, [pc, #20]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000342:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000344:	4a04      	ldr	r2, [pc, #16]	; (8000358 <GPIO_PeriCloclControl+0xcc>)
 8000346:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800034a:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800034c:	bf00      	nop
 800034e:	370c      	adds	r7, #12
 8000350:	46bd      	mov	sp, r7
 8000352:	bc80      	pop	{r7}
 8000354:	4770      	bx	lr
 8000356:	bf00      	nop
 8000358:	40021000 	.word	0x40021000
 800035c:	48000400 	.word	0x48000400
 8000360:	48000800 	.word	0x48000800
 8000364:	48000c00 	.word	0x48000c00
 8000368:	48001000 	.word	0x48001000
 800036c:	48001400 	.word	0x48001400
 8000370:	48001800 	.word	0x48001800
 8000374:	48001c00 	.word	0x48001c00

08000378 <GPIO_Init>:
* @return 		- none
*
* @Note 		- none
*
*/
void GPIO_Init(GPIO_Handle_t * pGPIO_Handle){
 8000378:	b480      	push	{r7}
 800037a:	b085      	sub	sp, #20
 800037c:	af00      	add	r7, sp, #0
 800037e:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 8000380:	2300      	movs	r3, #0
 8000382:	60fb      	str	r3, [r7, #12]

	if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	795b      	ldrb	r3, [r3, #5]
 8000388:	2b03      	cmp	r3, #3
 800038a:	d821      	bhi.n	80003d0 <GPIO_Init+0x58>
		temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	795b      	ldrb	r3, [r3, #5]
 8000390:	461a      	mov	r2, r3
 8000392:	687b      	ldr	r3, [r7, #4]
 8000394:	791b      	ldrb	r3, [r3, #4]
 8000396:	005b      	lsls	r3, r3, #1
 8000398:	fa02 f303 	lsl.w	r3, r2, r3
 800039c:	60fb      	str	r3, [r7, #12]
		pGPIO_Handle->pGPIOx->MODER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	681a      	ldr	r2, [r3, #0]
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	791b      	ldrb	r3, [r3, #4]
 80003a8:	005b      	lsls	r3, r3, #1
 80003aa:	2103      	movs	r1, #3
 80003ac:	fa01 f303 	lsl.w	r3, r1, r3
 80003b0:	43db      	mvns	r3, r3
 80003b2:	4619      	mov	r1, r3
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	400a      	ands	r2, r1
 80003ba:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER|=temp;
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	6819      	ldr	r1, [r3, #0]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	68fa      	ldr	r2, [r7, #12]
 80003c8:	430a      	orrs	r2, r1
 80003ca:	601a      	str	r2, [r3, #0]
		temp=0;
 80003cc:	2300      	movs	r3, #0
 80003ce:	60fb      	str	r3, [r7, #12]
	}
	else{
		//IT
	}

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	799b      	ldrb	r3, [r3, #6]
 80003d4:	461a      	mov	r2, r3
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	005b      	lsls	r3, r3, #1
 80003dc:	fa02 f303 	lsl.w	r3, r2, r3
 80003e0:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->OSPEEDER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	689a      	ldr	r2, [r3, #8]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	005b      	lsls	r3, r3, #1
 80003ee:	2103      	movs	r1, #3
 80003f0:	fa01 f303 	lsl.w	r3, r1, r3
 80003f4:	43db      	mvns	r3, r3
 80003f6:	4619      	mov	r1, r3
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	400a      	ands	r2, r1
 80003fe:	609a      	str	r2, [r3, #8]
	pGPIO_Handle->pGPIOx->OSPEEDER|=temp;
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	6899      	ldr	r1, [r3, #8]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	68fa      	ldr	r2, [r7, #12]
 800040c:	430a      	orrs	r2, r1
 800040e:	609a      	str	r2, [r3, #8]
	temp=0;
 8000410:	2300      	movs	r3, #0
 8000412:	60fb      	str	r3, [r7, #12]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_OPType)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	7a1b      	ldrb	r3, [r3, #8]
 8000418:	461a      	mov	r2, r3
 800041a:	687b      	ldr	r3, [r7, #4]
 800041c:	791b      	ldrb	r3, [r3, #4]
 800041e:	fa02 f303 	lsl.w	r3, r2, r3
 8000422:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->OTYPER&=~((0x1)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	685a      	ldr	r2, [r3, #4]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	791b      	ldrb	r3, [r3, #4]
 800042e:	4619      	mov	r1, r3
 8000430:	2301      	movs	r3, #1
 8000432:	408b      	lsls	r3, r1
 8000434:	43db      	mvns	r3, r3
 8000436:	4619      	mov	r1, r3
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	400a      	ands	r2, r1
 800043e:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER|=temp;
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	681b      	ldr	r3, [r3, #0]
 8000444:	6859      	ldr	r1, [r3, #4]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	681b      	ldr	r3, [r3, #0]
 800044a:	68fa      	ldr	r2, [r7, #12]
 800044c:	430a      	orrs	r2, r1
 800044e:	605a      	str	r2, [r3, #4]
	temp=0;
 8000450:	2300      	movs	r3, #0
 8000452:	60fb      	str	r3, [r7, #12]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	79db      	ldrb	r3, [r3, #7]
 8000458:	461a      	mov	r2, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	791b      	ldrb	r3, [r3, #4]
 800045e:	005b      	lsls	r3, r3, #1
 8000460:	fa02 f303 	lsl.w	r3, r2, r3
 8000464:	60fb      	str	r3, [r7, #12]
	pGPIO_Handle->pGPIOx->OPUPDR&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	68da      	ldr	r2, [r3, #12]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	791b      	ldrb	r3, [r3, #4]
 8000470:	005b      	lsls	r3, r3, #1
 8000472:	2103      	movs	r1, #3
 8000474:	fa01 f303 	lsl.w	r3, r1, r3
 8000478:	43db      	mvns	r3, r3
 800047a:	4619      	mov	r1, r3
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	400a      	ands	r2, r1
 8000482:	60da      	str	r2, [r3, #12]
	pGPIO_Handle->pGPIOx->OPUPDR|=temp;
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	68d9      	ldr	r1, [r3, #12]
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	681b      	ldr	r3, [r3, #0]
 800048e:	68fa      	ldr	r2, [r7, #12]
 8000490:	430a      	orrs	r2, r1
 8000492:	60da      	str	r2, [r3, #12]
	temp=0;
 8000494:	2300      	movs	r3, #0
 8000496:	60fb      	str	r3, [r7, #12]

	uint8_t temp1=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	791b      	ldrb	r3, [r3, #4]
 800049c:	08db      	lsrs	r3, r3, #3
 800049e:	72fb      	strb	r3, [r7, #11]
	uint8_t temp2=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber%8;
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	791b      	ldrb	r3, [r3, #4]
 80004a4:	f003 0307 	and.w	r3, r3, #7
 80004a8:	72bb      	strb	r3, [r7, #10]

	pGPIO_Handle->pGPIOx->AFR[temp1]&=~((0xF)<<(4*temp2));
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	7afa      	ldrb	r2, [r7, #11]
 80004b0:	3208      	adds	r2, #8
 80004b2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004b6:	7abb      	ldrb	r3, [r7, #10]
 80004b8:	009b      	lsls	r3, r3, #2
 80004ba:	220f      	movs	r2, #15
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	43db      	mvns	r3, r3
 80004c2:	4618      	mov	r0, r3
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	7afa      	ldrb	r2, [r7, #11]
 80004ca:	4001      	ands	r1, r0
 80004cc:	3208      	adds	r2, #8
 80004ce:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	pGPIO_Handle->pGPIOx->AFR[temp1]|=((pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFuncMode)<<(4*temp2));
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	7afa      	ldrb	r2, [r7, #11]
 80004d8:	3208      	adds	r2, #8
 80004da:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	7a5b      	ldrb	r3, [r3, #9]
 80004e2:	461a      	mov	r2, r3
 80004e4:	7abb      	ldrb	r3, [r7, #10]
 80004e6:	009b      	lsls	r3, r3, #2
 80004e8:	fa02 f303 	lsl.w	r3, r2, r3
 80004ec:	4618      	mov	r0, r3
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	7afa      	ldrb	r2, [r7, #11]
 80004f4:	4301      	orrs	r1, r0
 80004f6:	3208      	adds	r2, #8
 80004f8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

}
 80004fc:	bf00      	nop
 80004fe:	3714      	adds	r7, #20
 8000500:	46bd      	mov	sp, r7
 8000502:	bc80      	pop	{r7}
 8000504:	4770      	bx	lr

08000506 <GPIO_ToggleOutputPin>:
* @param[in] 	- Pin Number
*
* @Note 		- none
*
*/
void GPIO_ToggleOutputPin(GPIO_RegDef_t* pGPIOx, uint8_t PinNumber){
 8000506:	b480      	push	{r7}
 8000508:	b083      	sub	sp, #12
 800050a:	af00      	add	r7, sp, #0
 800050c:	6078      	str	r0, [r7, #4]
 800050e:	460b      	mov	r3, r1
 8000510:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR^=(1<<PinNumber);
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	695b      	ldr	r3, [r3, #20]
 8000516:	78fa      	ldrb	r2, [r7, #3]
 8000518:	2101      	movs	r1, #1
 800051a:	fa01 f202 	lsl.w	r2, r1, r2
 800051e:	405a      	eors	r2, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	615a      	str	r2, [r3, #20]
}
 8000524:	bf00      	nop
 8000526:	370c      	adds	r7, #12
 8000528:	46bd      	mov	sp, r7
 800052a:	bc80      	pop	{r7}
 800052c:	4770      	bx	lr
	...

08000530 <__libc_init_array>:
 8000530:	b570      	push	{r4, r5, r6, lr}
 8000532:	4d0d      	ldr	r5, [pc, #52]	; (8000568 <__libc_init_array+0x38>)
 8000534:	4c0d      	ldr	r4, [pc, #52]	; (800056c <__libc_init_array+0x3c>)
 8000536:	1b64      	subs	r4, r4, r5
 8000538:	10a4      	asrs	r4, r4, #2
 800053a:	2600      	movs	r6, #0
 800053c:	42a6      	cmp	r6, r4
 800053e:	d109      	bne.n	8000554 <__libc_init_array+0x24>
 8000540:	4d0b      	ldr	r5, [pc, #44]	; (8000570 <__libc_init_array+0x40>)
 8000542:	4c0c      	ldr	r4, [pc, #48]	; (8000574 <__libc_init_array+0x44>)
 8000544:	f000 f818 	bl	8000578 <_init>
 8000548:	1b64      	subs	r4, r4, r5
 800054a:	10a4      	asrs	r4, r4, #2
 800054c:	2600      	movs	r6, #0
 800054e:	42a6      	cmp	r6, r4
 8000550:	d105      	bne.n	800055e <__libc_init_array+0x2e>
 8000552:	bd70      	pop	{r4, r5, r6, pc}
 8000554:	f855 3b04 	ldr.w	r3, [r5], #4
 8000558:	4798      	blx	r3
 800055a:	3601      	adds	r6, #1
 800055c:	e7ee      	b.n	800053c <__libc_init_array+0xc>
 800055e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000562:	4798      	blx	r3
 8000564:	3601      	adds	r6, #1
 8000566:	e7f2      	b.n	800054e <__libc_init_array+0x1e>
 8000568:	08000590 	.word	0x08000590
 800056c:	08000590 	.word	0x08000590
 8000570:	08000590 	.word	0x08000590
 8000574:	08000594 	.word	0x08000594

08000578 <_init>:
 8000578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800057a:	bf00      	nop
 800057c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800057e:	bc08      	pop	{r3}
 8000580:	469e      	mov	lr, r3
 8000582:	4770      	bx	lr

08000584 <_fini>:
 8000584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000586:	bf00      	nop
 8000588:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800058a:	bc08      	pop	{r3}
 800058c:	469e      	mov	lr, r3
 800058e:	4770      	bx	lr
