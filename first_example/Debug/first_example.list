
first_example.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000818  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009a0  080009a8  000109a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009a0  080009a0  000109a8  2**0
                  CONTENTS
  4 .ARM          00000000  080009a0  080009a0  000109a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009a0  080009a8  000109a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009a0  080009a0  000109a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009a4  080009a4  000109a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000109a8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000109a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000011f9  00000000  00000000  000109d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000044a  00000000  00000000  00011bcb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00012018  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f0  00000000  00000000  00012140  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00001ad1  00000000  00000000  00012230  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001442  00000000  00000000  00013d01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000585b  00000000  00000000  00015143  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  0001a99e  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000003e0  00000000  00000000  0001a9f4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000988 	.word	0x08000988

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000988 	.word	0x08000988

080001c8 <SPI_GPIO_Inits>:

/* SPI1_ MOSI = PA7 */
/* SPI1_ MISO = PA6 */
/* SPI1_ CLK  = PA5 */
/* SPI1_ NSS */
void SPI_GPIO_Inits(void){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b084      	sub	sp, #16
 80001cc:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPI_GPIO_Handle;
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_ALT;
 80001ce:	2302      	movs	r3, #2
 80001d0:	727b      	strb	r3, [r7, #9]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinAltFuncMode=5;
 80001d2:	2305      	movs	r3, #5
 80001d4:	737b      	strb	r3, [r7, #13]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_OPType=GPIO_OPTYPE_PP;
 80001d6:	2300      	movs	r3, #0
 80001d8:	733b      	strb	r3, [r7, #12]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PIN_NOPU_NOPD;
 80001da:	2300      	movs	r3, #0
 80001dc:	72fb      	strb	r3, [r7, #11]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 80001de:	2302      	movs	r3, #2
 80001e0:	72bb      	strb	r3, [r7, #10]
	SPI_GPIO_Handle.pGPIOx=GPIOA;
 80001e2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80001e6:	607b      	str	r3, [r7, #4]
	GPIO_PeriCloclControl(GPIOA, ENABLE);
 80001e8:	2101      	movs	r1, #1
 80001ea:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80001ee:	f000 f877 	bl	80002e0 <GPIO_PeriCloclControl>
	//SCK
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_5;
 80001f2:	2305      	movs	r3, #5
 80001f4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 80001f6:	1d3b      	adds	r3, r7, #4
 80001f8:	4618      	mov	r0, r3
 80001fa:	f000 f8e7 	bl	80003cc <GPIO_Init>
	//MISO
	//SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_6;
	//GPIO_Init(&SPI_GPIO_Handle);
	//MOSI
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_7;
 80001fe:	2307      	movs	r3, #7
 8000200:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 8000202:	1d3b      	adds	r3, r7, #4
 8000204:	4618      	mov	r0, r3
 8000206:	f000 f8e1 	bl	80003cc <GPIO_Init>

}
 800020a:	bf00      	nop
 800020c:	3710      	adds	r7, #16
 800020e:	46bd      	mov	sp, r7
 8000210:	bd80      	pop	{r7, pc}
	...

08000214 <SPI1_Inits>:
void SPI1_Inits(void){
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0

	SPI_PeriCloclControl(SPI1, ENABLE);
 800021a:	2101      	movs	r1, #1
 800021c:	480d      	ldr	r0, [pc, #52]	; (8000254 <SPI1_Inits+0x40>)
 800021e:	f000 fa77 	bl	8000710 <SPI_PeriCloclControl>
	SPI_Handle_t SPI_Handle;
	SPI_Handle.pSPIx=SPI1;
 8000222:	4b0c      	ldr	r3, [pc, #48]	; (8000254 <SPI1_Inits+0x40>)
 8000224:	607b      	str	r3, [r7, #4]
	SPI_Handle.SPI_Config.SPI_DeviceMode=SPI_MASTER;
 8000226:	2301      	movs	r3, #1
 8000228:	723b      	strb	r3, [r7, #8]
	SPI_Handle.SPI_Config.SPI_BusConfig=SPI_BCONFIG_FD;
 800022a:	2301      	movs	r3, #1
 800022c:	727b      	strb	r3, [r7, #9]
	SPI_Handle.SPI_Config.SPI_Speed=SR_BR_PCLK_DIV_32;
 800022e:	2304      	movs	r3, #4
 8000230:	73bb      	strb	r3, [r7, #14]
	SPI_Handle.SPI_Config.SPI_DFF=SPI_DFF_8BIT;
 8000232:	2300      	movs	r3, #0
 8000234:	72bb      	strb	r3, [r7, #10]
	SPI_Handle.SPI_Config.SPI_CPHA=SPI_CPHA_0;
 8000236:	2300      	movs	r3, #0
 8000238:	72fb      	strb	r3, [r7, #11]
	SPI_Handle.SPI_Config.SPI_CPOL=SPI_CPOL_0;
 800023a:	2300      	movs	r3, #0
 800023c:	733b      	strb	r3, [r7, #12]
	SPI_Handle.SPI_Config.SPI_SSM=SPI_SSM_EN;
 800023e:	2301      	movs	r3, #1
 8000240:	737b      	strb	r3, [r7, #13]

	SPI_Init(&SPI_Handle);
 8000242:	1d3b      	adds	r3, r7, #4
 8000244:	4618      	mov	r0, r3
 8000246:	f000 fa99 	bl	800077c <SPI_Init>

}
 800024a:	bf00      	nop
 800024c:	3710      	adds	r7, #16
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}
 8000252:	bf00      	nop
 8000254:	40013000 	.word	0x40013000

08000258 <main>:


int main(void)
{
 8000258:	b580      	push	{r7, lr}
 800025a:	b082      	sub	sp, #8
 800025c:	af00      	add	r7, sp, #0
	char u_data[]="A";
 800025e:	2341      	movs	r3, #65	; 0x41
 8000260:	80bb      	strh	r3, [r7, #4]
	SPI_GPIO_Inits();
 8000262:	f7ff ffb1 	bl	80001c8 <SPI_GPIO_Inits>
	SPI1_Inits();
 8000266:	f7ff ffd5 	bl	8000214 <SPI1_Inits>
	SPI_SSI_Control(SPI1,ENABLE);
 800026a:	2101      	movs	r1, #1
 800026c:	4806      	ldr	r0, [pc, #24]	; (8000288 <main+0x30>)
 800026e:	f000 fb00 	bl	8000872 <SPI_SSI_Control>
	SPI_Control(SPI1,ENABLE);
 8000272:	2101      	movs	r1, #1
 8000274:	4804      	ldr	r0, [pc, #16]	; (8000288 <main+0x30>)
 8000276:	f000 fae1 	bl	800083c <SPI_Control>

	while(1){
		SPI_SendData(SPI1,(uint8_t*)u_data, 1);
 800027a:	1d3b      	adds	r3, r7, #4
 800027c:	2201      	movs	r2, #1
 800027e:	4619      	mov	r1, r3
 8000280:	4801      	ldr	r0, [pc, #4]	; (8000288 <main+0x30>)
 8000282:	f000 fb27 	bl	80008d4 <SPI_SendData>
 8000286:	e7f8      	b.n	800027a <main+0x22>
 8000288:	40013000 	.word	0x40013000

0800028c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800028c:	480d      	ldr	r0, [pc, #52]	; (80002c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800028e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000290:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000294:	480c      	ldr	r0, [pc, #48]	; (80002c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8000296:	490d      	ldr	r1, [pc, #52]	; (80002cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8000298:	4a0d      	ldr	r2, [pc, #52]	; (80002d0 <LoopForever+0xe>)
  movs r3, #0
 800029a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800029c:	e002      	b.n	80002a4 <LoopCopyDataInit>

0800029e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800029e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002a0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002a2:	3304      	adds	r3, #4

080002a4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002a4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002a6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002a8:	d3f9      	bcc.n	800029e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002aa:	4a0a      	ldr	r2, [pc, #40]	; (80002d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ac:	4c0a      	ldr	r4, [pc, #40]	; (80002d8 <LoopForever+0x16>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002b0:	e001      	b.n	80002b6 <LoopFillZerobss>

080002b2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002b2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002b4:	3204      	adds	r2, #4

080002b6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002b6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002b8:	d3fb      	bcc.n	80002b2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ba:	f000 fb41 	bl	8000940 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002be:	f7ff ffcb 	bl	8000258 <main>

080002c2 <LoopForever>:

LoopForever:
    b LoopForever
 80002c2:	e7fe      	b.n	80002c2 <LoopForever>
  ldr   r0, =_estack
 80002c4:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002cc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002d0:	080009a8 	.word	0x080009a8
  ldr r2, =_sbss
 80002d4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002d8:	2000001c 	.word	0x2000001c

080002dc <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002dc:	e7fe      	b.n	80002dc <ADC1_2_IRQHandler>
	...

080002e0 <GPIO_PeriCloclControl>:
* @Note 		- none
*
*/

void GPIO_PeriCloclControl(GPIO_RegDef_t* pGPIOx,uint8_t EnorDi)
{
 80002e0:	b480      	push	{r7}
 80002e2:	b083      	sub	sp, #12
 80002e4:	af00      	add	r7, sp, #0
 80002e6:	6078      	str	r0, [r7, #4]
 80002e8:	460b      	mov	r3, r1
 80002ea:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE){
 80002ec:	78fb      	ldrb	r3, [r7, #3]
 80002ee:	2b01      	cmp	r3, #1
 80002f0:	d156      	bne.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		if(pGPIOx==GPIOA){
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriCloclControl+0x28>
			GPIOA_PCLK_EN();
 80002fa:	4b2c      	ldr	r3, [pc, #176]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 80002fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80002fe:	4a2b      	ldr	r2, [pc, #172]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000300:	f043 0301 	orr.w	r3, r3, #1
 8000304:	64d3      	str	r3, [r2, #76]	; 0x4c
		}
		else{
		//Not a port
		}
	}
}
 8000306:	e04b      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOB){
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a29      	ldr	r2, [pc, #164]	; (80003b0 <GPIO_PeriCloclControl+0xd0>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriCloclControl+0x3e>
			GPIOB_PCLK_EN();
 8000310:	4b26      	ldr	r3, [pc, #152]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000312:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000314:	4a25      	ldr	r2, [pc, #148]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000316:	f043 0302 	orr.w	r3, r3, #2
 800031a:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800031c:	e040      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOC){
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a24      	ldr	r2, [pc, #144]	; (80003b4 <GPIO_PeriCloclControl+0xd4>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriCloclControl+0x54>
			GPIOC_PCLK_EN();
 8000326:	4b21      	ldr	r3, [pc, #132]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000328:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800032a:	4a20      	ldr	r2, [pc, #128]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 800032c:	f043 0304 	orr.w	r3, r3, #4
 8000330:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000332:	e035      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOD){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a20      	ldr	r2, [pc, #128]	; (80003b8 <GPIO_PeriCloclControl+0xd8>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriCloclControl+0x6a>
			GPIOD_PCLK_EN();
 800033c:	4b1b      	ldr	r3, [pc, #108]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 800033e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000340:	4a1a      	ldr	r2, [pc, #104]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000342:	f043 0308 	orr.w	r3, r3, #8
 8000346:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000348:	e02a      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOE){
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a1b      	ldr	r2, [pc, #108]	; (80003bc <GPIO_PeriCloclControl+0xdc>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PeriCloclControl+0x80>
			GPIOE_PCLK_EN();
 8000352:	4b16      	ldr	r3, [pc, #88]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000354:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000356:	4a15      	ldr	r2, [pc, #84]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000358:	f043 0310 	orr.w	r3, r3, #16
 800035c:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800035e:	e01f      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOF){
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a17      	ldr	r2, [pc, #92]	; (80003c0 <GPIO_PeriCloclControl+0xe0>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriCloclControl+0x96>
			GPIOF_PCLK_EN();
 8000368:	4b10      	ldr	r3, [pc, #64]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 800036a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800036c:	4a0f      	ldr	r2, [pc, #60]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 800036e:	f043 0320 	orr.w	r3, r3, #32
 8000372:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000374:	e014      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOG){
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a12      	ldr	r2, [pc, #72]	; (80003c4 <GPIO_PeriCloclControl+0xe4>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriCloclControl+0xac>
			GPIOG_PCLK_EN();
 800037e:	4b0b      	ldr	r3, [pc, #44]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000380:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000382:	4a0a      	ldr	r2, [pc, #40]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000384:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000388:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800038a:	e009      	b.n	80003a0 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOH){
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a0e      	ldr	r2, [pc, #56]	; (80003c8 <GPIO_PeriCloclControl+0xe8>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d105      	bne.n	80003a0 <GPIO_PeriCloclControl+0xc0>
			GPIOH_PCLK_EN();
 8000394:	4b05      	ldr	r3, [pc, #20]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 8000396:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000398:	4a04      	ldr	r2, [pc, #16]	; (80003ac <GPIO_PeriCloclControl+0xcc>)
 800039a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800039e:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80003a0:	bf00      	nop
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	bc80      	pop	{r7}
 80003a8:	4770      	bx	lr
 80003aa:	bf00      	nop
 80003ac:	40021000 	.word	0x40021000
 80003b0:	48000400 	.word	0x48000400
 80003b4:	48000800 	.word	0x48000800
 80003b8:	48000c00 	.word	0x48000c00
 80003bc:	48001000 	.word	0x48001000
 80003c0:	48001400 	.word	0x48001400
 80003c4:	48001800 	.word	0x48001800
 80003c8:	48001c00 	.word	0x48001c00

080003cc <GPIO_Init>:
* @return 		- none
*
* @Note 		- none
*
*/
void GPIO_Init(GPIO_Handle_t * pGPIO_Handle){
 80003cc:	b480      	push	{r7}
 80003ce:	b087      	sub	sp, #28
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 80003d4:	2300      	movs	r3, #0
 80003d6:	617b      	str	r3, [r7, #20]

	if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	795b      	ldrb	r3, [r3, #5]
 80003dc:	2b03      	cmp	r3, #3
 80003de:	d822      	bhi.n	8000426 <GPIO_Init+0x5a>
		temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	795b      	ldrb	r3, [r3, #5]
 80003e4:	461a      	mov	r2, r3
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	791b      	ldrb	r3, [r3, #4]
 80003ea:	005b      	lsls	r3, r3, #1
 80003ec:	fa02 f303 	lsl.w	r3, r2, r3
 80003f0:	617b      	str	r3, [r7, #20]
		pGPIO_Handle->pGPIOx->MODER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	681a      	ldr	r2, [r3, #0]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	791b      	ldrb	r3, [r3, #4]
 80003fc:	005b      	lsls	r3, r3, #1
 80003fe:	2103      	movs	r1, #3
 8000400:	fa01 f303 	lsl.w	r3, r1, r3
 8000404:	43db      	mvns	r3, r3
 8000406:	4619      	mov	r1, r3
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	681b      	ldr	r3, [r3, #0]
 800040c:	400a      	ands	r2, r1
 800040e:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER|=temp;
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	6819      	ldr	r1, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	697a      	ldr	r2, [r7, #20]
 800041c:	430a      	orrs	r2, r1
 800041e:	601a      	str	r2, [r3, #0]
		temp=0;
 8000420:	2300      	movs	r3, #0
 8000422:	617b      	str	r3, [r7, #20]
 8000424:	e0d2      	b.n	80005cc <GPIO_Init+0x200>

	}
	else{

		if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT){
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	795b      	ldrb	r3, [r3, #5]
 800042a:	2b04      	cmp	r3, #4
 800042c:	d117      	bne.n	800045e <GPIO_Init+0x92>
			EXTI->FTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 800042e:	4b4d      	ldr	r3, [pc, #308]	; (8000564 <GPIO_Init+0x198>)
 8000430:	68db      	ldr	r3, [r3, #12]
 8000432:	687a      	ldr	r2, [r7, #4]
 8000434:	7912      	ldrb	r2, [r2, #4]
 8000436:	4611      	mov	r1, r2
 8000438:	2201      	movs	r2, #1
 800043a:	408a      	lsls	r2, r1
 800043c:	4611      	mov	r1, r2
 800043e:	4a49      	ldr	r2, [pc, #292]	; (8000564 <GPIO_Init+0x198>)
 8000440:	430b      	orrs	r3, r1
 8000442:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1 &= ~(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000444:	4b47      	ldr	r3, [pc, #284]	; (8000564 <GPIO_Init+0x198>)
 8000446:	689b      	ldr	r3, [r3, #8]
 8000448:	687a      	ldr	r2, [r7, #4]
 800044a:	7912      	ldrb	r2, [r2, #4]
 800044c:	4611      	mov	r1, r2
 800044e:	2201      	movs	r2, #1
 8000450:	408a      	lsls	r2, r1
 8000452:	43d2      	mvns	r2, r2
 8000454:	4611      	mov	r1, r2
 8000456:	4a43      	ldr	r2, [pc, #268]	; (8000564 <GPIO_Init+0x198>)
 8000458:	400b      	ands	r3, r1
 800045a:	6093      	str	r3, [r2, #8]
 800045c:	e035      	b.n	80004ca <GPIO_Init+0xfe>


		}
		else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT){
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	795b      	ldrb	r3, [r3, #5]
 8000462:	2b05      	cmp	r3, #5
 8000464:	d117      	bne.n	8000496 <GPIO_Init+0xca>
			EXTI->RTSR1 |= 1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 8000466:	4b3f      	ldr	r3, [pc, #252]	; (8000564 <GPIO_Init+0x198>)
 8000468:	689b      	ldr	r3, [r3, #8]
 800046a:	687a      	ldr	r2, [r7, #4]
 800046c:	7912      	ldrb	r2, [r2, #4]
 800046e:	4611      	mov	r1, r2
 8000470:	2201      	movs	r2, #1
 8000472:	408a      	lsls	r2, r1
 8000474:	4611      	mov	r1, r2
 8000476:	4a3b      	ldr	r2, [pc, #236]	; (8000564 <GPIO_Init+0x198>)
 8000478:	430b      	orrs	r3, r1
 800047a:	6093      	str	r3, [r2, #8]
			EXTI->FTSR1 &= ~(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 800047c:	4b39      	ldr	r3, [pc, #228]	; (8000564 <GPIO_Init+0x198>)
 800047e:	68db      	ldr	r3, [r3, #12]
 8000480:	687a      	ldr	r2, [r7, #4]
 8000482:	7912      	ldrb	r2, [r2, #4]
 8000484:	4611      	mov	r1, r2
 8000486:	2201      	movs	r2, #1
 8000488:	408a      	lsls	r2, r1
 800048a:	43d2      	mvns	r2, r2
 800048c:	4611      	mov	r1, r2
 800048e:	4a35      	ldr	r2, [pc, #212]	; (8000564 <GPIO_Init+0x198>)
 8000490:	400b      	ands	r3, r1
 8000492:	60d3      	str	r3, [r2, #12]
 8000494:	e019      	b.n	80004ca <GPIO_Init+0xfe>

		}
		else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT){
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	795b      	ldrb	r3, [r3, #5]
 800049a:	2b06      	cmp	r3, #6
 800049c:	d115      	bne.n	80004ca <GPIO_Init+0xfe>
			EXTI->FTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 800049e:	4b31      	ldr	r3, [pc, #196]	; (8000564 <GPIO_Init+0x198>)
 80004a0:	68db      	ldr	r3, [r3, #12]
 80004a2:	687a      	ldr	r2, [r7, #4]
 80004a4:	7912      	ldrb	r2, [r2, #4]
 80004a6:	4611      	mov	r1, r2
 80004a8:	2201      	movs	r2, #1
 80004aa:	408a      	lsls	r2, r1
 80004ac:	4611      	mov	r1, r2
 80004ae:	4a2d      	ldr	r2, [pc, #180]	; (8000564 <GPIO_Init+0x198>)
 80004b0:	430b      	orrs	r3, r1
 80004b2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 80004b4:	4b2b      	ldr	r3, [pc, #172]	; (8000564 <GPIO_Init+0x198>)
 80004b6:	689b      	ldr	r3, [r3, #8]
 80004b8:	687a      	ldr	r2, [r7, #4]
 80004ba:	7912      	ldrb	r2, [r2, #4]
 80004bc:	4611      	mov	r1, r2
 80004be:	2201      	movs	r2, #1
 80004c0:	408a      	lsls	r2, r1
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a27      	ldr	r2, [pc, #156]	; (8000564 <GPIO_Init+0x198>)
 80004c6:	430b      	orrs	r3, r1
 80004c8:	6093      	str	r3, [r2, #8]
		}
		else{

		}

		temp=(GPIO_MODE_INPUT)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80004ca:	2300      	movs	r3, #0
 80004cc:	617b      	str	r3, [r7, #20]
		pGPIO_Handle->pGPIOx->MODER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	681a      	ldr	r2, [r3, #0]
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	005b      	lsls	r3, r3, #1
 80004da:	2103      	movs	r1, #3
 80004dc:	fa01 f303 	lsl.w	r3, r1, r3
 80004e0:	43db      	mvns	r3, r3
 80004e2:	4619      	mov	r1, r3
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	400a      	ands	r2, r1
 80004ea:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER|=temp;
 80004ec:	687b      	ldr	r3, [r7, #4]
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	6819      	ldr	r1, [r3, #0]
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	697a      	ldr	r2, [r7, #20]
 80004f8:	430a      	orrs	r2, r1
 80004fa:	601a      	str	r2, [r3, #0]
		temp=0;
 80004fc:	2300      	movs	r3, #0
 80004fe:	617b      	str	r3, [r7, #20]

		uint8_t portcode= GPIOBD_TO_PORT(pGPIO_Handle->pGPIOx);
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000508:	d03a      	beq.n	8000580 <GPIO_Init+0x1b4>
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4a16      	ldr	r2, [pc, #88]	; (8000568 <GPIO_Init+0x19c>)
 8000510:	4293      	cmp	r3, r2
 8000512:	d024      	beq.n	800055e <GPIO_Init+0x192>
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a14      	ldr	r2, [pc, #80]	; (800056c <GPIO_Init+0x1a0>)
 800051a:	4293      	cmp	r3, r2
 800051c:	d01d      	beq.n	800055a <GPIO_Init+0x18e>
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	4a13      	ldr	r2, [pc, #76]	; (8000570 <GPIO_Init+0x1a4>)
 8000524:	4293      	cmp	r3, r2
 8000526:	d016      	beq.n	8000556 <GPIO_Init+0x18a>
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a11      	ldr	r2, [pc, #68]	; (8000574 <GPIO_Init+0x1a8>)
 800052e:	4293      	cmp	r3, r2
 8000530:	d00f      	beq.n	8000552 <GPIO_Init+0x186>
 8000532:	687b      	ldr	r3, [r7, #4]
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	4a10      	ldr	r2, [pc, #64]	; (8000578 <GPIO_Init+0x1ac>)
 8000538:	4293      	cmp	r3, r2
 800053a:	d008      	beq.n	800054e <GPIO_Init+0x182>
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	4a0e      	ldr	r2, [pc, #56]	; (800057c <GPIO_Init+0x1b0>)
 8000542:	4293      	cmp	r3, r2
 8000544:	d101      	bne.n	800054a <GPIO_Init+0x17e>
 8000546:	2306      	movs	r3, #6
 8000548:	e01b      	b.n	8000582 <GPIO_Init+0x1b6>
 800054a:	2307      	movs	r3, #7
 800054c:	e019      	b.n	8000582 <GPIO_Init+0x1b6>
 800054e:	2305      	movs	r3, #5
 8000550:	e017      	b.n	8000582 <GPIO_Init+0x1b6>
 8000552:	2304      	movs	r3, #4
 8000554:	e015      	b.n	8000582 <GPIO_Init+0x1b6>
 8000556:	2303      	movs	r3, #3
 8000558:	e013      	b.n	8000582 <GPIO_Init+0x1b6>
 800055a:	2302      	movs	r3, #2
 800055c:	e011      	b.n	8000582 <GPIO_Init+0x1b6>
 800055e:	2301      	movs	r3, #1
 8000560:	e00f      	b.n	8000582 <GPIO_Init+0x1b6>
 8000562:	bf00      	nop
 8000564:	40010400 	.word	0x40010400
 8000568:	48000400 	.word	0x48000400
 800056c:	48000800 	.word	0x48000800
 8000570:	48000c00 	.word	0x48000c00
 8000574:	48001000 	.word	0x48001000
 8000578:	48001400 	.word	0x48001400
 800057c:	48001800 	.word	0x48001800
 8000580:	2300      	movs	r3, #0
 8000582:	74fb      	strb	r3, [r7, #19]
		uint8_t index=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	089b      	lsrs	r3, r3, #2
 800058a:	74bb      	strb	r3, [r7, #18]
		uint8_t temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)%4;
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	791b      	ldrb	r3, [r3, #4]
 8000590:	f003 0303 	and.w	r3, r3, #3
 8000594:	747b      	strb	r3, [r7, #17]

		SYSCFG->EXTICR_1_4[index]=portcode<<(temp*4);
 8000596:	7cfa      	ldrb	r2, [r7, #19]
 8000598:	7c7b      	ldrb	r3, [r7, #17]
 800059a:	009b      	lsls	r3, r3, #2
 800059c:	fa02 f103 	lsl.w	r1, r2, r3
 80005a0:	4a58      	ldr	r2, [pc, #352]	; (8000704 <GPIO_Init+0x338>)
 80005a2:	7cbb      	ldrb	r3, [r7, #18]
 80005a4:	3302      	adds	r3, #2
 80005a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		SYSCFG_PCLK_EN();
 80005aa:	4b57      	ldr	r3, [pc, #348]	; (8000708 <GPIO_Init+0x33c>)
 80005ac:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80005ae:	4a56      	ldr	r2, [pc, #344]	; (8000708 <GPIO_Init+0x33c>)
 80005b0:	f043 0301 	orr.w	r3, r3, #1
 80005b4:	6613      	str	r3, [r2, #96]	; 0x60

		EXTI->IMR1|=(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80005b6:	4b55      	ldr	r3, [pc, #340]	; (800070c <GPIO_Init+0x340>)
 80005b8:	681b      	ldr	r3, [r3, #0]
 80005ba:	687a      	ldr	r2, [r7, #4]
 80005bc:	7912      	ldrb	r2, [r2, #4]
 80005be:	4611      	mov	r1, r2
 80005c0:	2201      	movs	r2, #1
 80005c2:	408a      	lsls	r2, r1
 80005c4:	4611      	mov	r1, r2
 80005c6:	4a51      	ldr	r2, [pc, #324]	; (800070c <GPIO_Init+0x340>)
 80005c8:	430b      	orrs	r3, r1
 80005ca:	6013      	str	r3, [r2, #0]



	}

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	799b      	ldrb	r3, [r3, #6]
 80005d0:	461a      	mov	r2, r3
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	005b      	lsls	r3, r3, #1
 80005d8:	fa02 f303 	lsl.w	r3, r2, r3
 80005dc:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OSPEEDER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	689a      	ldr	r2, [r3, #8]
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	791b      	ldrb	r3, [r3, #4]
 80005e8:	005b      	lsls	r3, r3, #1
 80005ea:	2103      	movs	r1, #3
 80005ec:	fa01 f303 	lsl.w	r3, r1, r3
 80005f0:	43db      	mvns	r3, r3
 80005f2:	4619      	mov	r1, r3
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	681b      	ldr	r3, [r3, #0]
 80005f8:	400a      	ands	r2, r1
 80005fa:	609a      	str	r2, [r3, #8]
	pGPIO_Handle->pGPIOx->OSPEEDER|=temp;
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	6899      	ldr	r1, [r3, #8]
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	697a      	ldr	r2, [r7, #20]
 8000608:	430a      	orrs	r2, r1
 800060a:	609a      	str	r2, [r3, #8]
	temp=0;
 800060c:	2300      	movs	r3, #0
 800060e:	617b      	str	r3, [r7, #20]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_OPType)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	7a1b      	ldrb	r3, [r3, #8]
 8000614:	461a      	mov	r2, r3
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	791b      	ldrb	r3, [r3, #4]
 800061a:	fa02 f303 	lsl.w	r3, r2, r3
 800061e:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OTYPER&=~((0x1)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	685a      	ldr	r2, [r3, #4]
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	791b      	ldrb	r3, [r3, #4]
 800062a:	4619      	mov	r1, r3
 800062c:	2301      	movs	r3, #1
 800062e:	408b      	lsls	r3, r1
 8000630:	43db      	mvns	r3, r3
 8000632:	4619      	mov	r1, r3
 8000634:	687b      	ldr	r3, [r7, #4]
 8000636:	681b      	ldr	r3, [r3, #0]
 8000638:	400a      	ands	r2, r1
 800063a:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER|=temp;
 800063c:	687b      	ldr	r3, [r7, #4]
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	6859      	ldr	r1, [r3, #4]
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	697a      	ldr	r2, [r7, #20]
 8000648:	430a      	orrs	r2, r1
 800064a:	605a      	str	r2, [r3, #4]
	temp=0;
 800064c:	2300      	movs	r3, #0
 800064e:	617b      	str	r3, [r7, #20]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	79db      	ldrb	r3, [r3, #7]
 8000654:	461a      	mov	r2, r3
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	791b      	ldrb	r3, [r3, #4]
 800065a:	005b      	lsls	r3, r3, #1
 800065c:	fa02 f303 	lsl.w	r3, r2, r3
 8000660:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OPUPDR&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000662:	687b      	ldr	r3, [r7, #4]
 8000664:	681b      	ldr	r3, [r3, #0]
 8000666:	68da      	ldr	r2, [r3, #12]
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	005b      	lsls	r3, r3, #1
 800066e:	2103      	movs	r1, #3
 8000670:	fa01 f303 	lsl.w	r3, r1, r3
 8000674:	43db      	mvns	r3, r3
 8000676:	4619      	mov	r1, r3
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	681b      	ldr	r3, [r3, #0]
 800067c:	400a      	ands	r2, r1
 800067e:	60da      	str	r2, [r3, #12]
	pGPIO_Handle->pGPIOx->OPUPDR|=temp;
 8000680:	687b      	ldr	r3, [r7, #4]
 8000682:	681b      	ldr	r3, [r3, #0]
 8000684:	68d9      	ldr	r1, [r3, #12]
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	681b      	ldr	r3, [r3, #0]
 800068a:	697a      	ldr	r2, [r7, #20]
 800068c:	430a      	orrs	r2, r1
 800068e:	60da      	str	r2, [r3, #12]
	temp=0;
 8000690:	2300      	movs	r3, #0
 8000692:	617b      	str	r3, [r7, #20]

	uint8_t temp1=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000694:	687b      	ldr	r3, [r7, #4]
 8000696:	791b      	ldrb	r3, [r3, #4]
 8000698:	08db      	lsrs	r3, r3, #3
 800069a:	743b      	strb	r3, [r7, #16]
	uint8_t temp2=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber%8;
 800069c:	687b      	ldr	r3, [r7, #4]
 800069e:	791b      	ldrb	r3, [r3, #4]
 80006a0:	f003 0307 	and.w	r3, r3, #7
 80006a4:	73fb      	strb	r3, [r7, #15]

	pGPIO_Handle->pGPIOx->AFR[temp1]&=~((0xF)<<(4*temp2));
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	681b      	ldr	r3, [r3, #0]
 80006aa:	7c3a      	ldrb	r2, [r7, #16]
 80006ac:	3208      	adds	r2, #8
 80006ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006b2:	7bfb      	ldrb	r3, [r7, #15]
 80006b4:	009b      	lsls	r3, r3, #2
 80006b6:	220f      	movs	r2, #15
 80006b8:	fa02 f303 	lsl.w	r3, r2, r3
 80006bc:	43db      	mvns	r3, r3
 80006be:	4618      	mov	r0, r3
 80006c0:	687b      	ldr	r3, [r7, #4]
 80006c2:	681b      	ldr	r3, [r3, #0]
 80006c4:	7c3a      	ldrb	r2, [r7, #16]
 80006c6:	4001      	ands	r1, r0
 80006c8:	3208      	adds	r2, #8
 80006ca:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	pGPIO_Handle->pGPIOx->AFR[temp1]|=((pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFuncMode)<<(4*temp2));
 80006ce:	687b      	ldr	r3, [r7, #4]
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	7c3a      	ldrb	r2, [r7, #16]
 80006d4:	3208      	adds	r2, #8
 80006d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	7a5b      	ldrb	r3, [r3, #9]
 80006de:	461a      	mov	r2, r3
 80006e0:	7bfb      	ldrb	r3, [r7, #15]
 80006e2:	009b      	lsls	r3, r3, #2
 80006e4:	fa02 f303 	lsl.w	r3, r2, r3
 80006e8:	4618      	mov	r0, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	681b      	ldr	r3, [r3, #0]
 80006ee:	7c3a      	ldrb	r2, [r7, #16]
 80006f0:	4301      	orrs	r1, r0
 80006f2:	3208      	adds	r2, #8
 80006f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

}
 80006f8:	bf00      	nop
 80006fa:	371c      	adds	r7, #28
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bc80      	pop	{r7}
 8000700:	4770      	bx	lr
 8000702:	bf00      	nop
 8000704:	40010000 	.word	0x40010000
 8000708:	40021000 	.word	0x40021000
 800070c:	40010400 	.word	0x40010400

08000710 <SPI_PeriCloclControl>:
 *      Author: franc
 */

#include "stm32l476xx_spi_driver.h"

void SPI_PeriCloclControl(SPI_RegDef_t* pSPIx,uint8_t EnorDi){
 8000710:	b480      	push	{r7}
 8000712:	b083      	sub	sp, #12
 8000714:	af00      	add	r7, sp, #0
 8000716:	6078      	str	r0, [r7, #4]
 8000718:	460b      	mov	r3, r1
 800071a:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE){
 800071c:	78fb      	ldrb	r3, [r7, #3]
 800071e:	2b01      	cmp	r3, #1
 8000720:	d11f      	bne.n	8000762 <SPI_PeriCloclControl+0x52>
			if(pSPIx==SPI1){
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	4a11      	ldr	r2, [pc, #68]	; (800076c <SPI_PeriCloclControl+0x5c>)
 8000726:	4293      	cmp	r3, r2
 8000728:	d106      	bne.n	8000738 <SPI_PeriCloclControl+0x28>
				SPI1_PLCK_EN();
 800072a:	4b11      	ldr	r3, [pc, #68]	; (8000770 <SPI_PeriCloclControl+0x60>)
 800072c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800072e:	4a10      	ldr	r2, [pc, #64]	; (8000770 <SPI_PeriCloclControl+0x60>)
 8000730:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000734:	6613      	str	r3, [r2, #96]	; 0x60
			}
			else{
			//Not a port
			}
		}
}
 8000736:	e014      	b.n	8000762 <SPI_PeriCloclControl+0x52>
			else if(pSPIx==SPI2){
 8000738:	687b      	ldr	r3, [r7, #4]
 800073a:	4a0e      	ldr	r2, [pc, #56]	; (8000774 <SPI_PeriCloclControl+0x64>)
 800073c:	4293      	cmp	r3, r2
 800073e:	d106      	bne.n	800074e <SPI_PeriCloclControl+0x3e>
				SPI2_PCLK_EN();
 8000740:	4b0b      	ldr	r3, [pc, #44]	; (8000770 <SPI_PeriCloclControl+0x60>)
 8000742:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000744:	4a0a      	ldr	r2, [pc, #40]	; (8000770 <SPI_PeriCloclControl+0x60>)
 8000746:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800074a:	6593      	str	r3, [r2, #88]	; 0x58
}
 800074c:	e009      	b.n	8000762 <SPI_PeriCloclControl+0x52>
			else if(pSPIx==SPI3){
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	4a09      	ldr	r2, [pc, #36]	; (8000778 <SPI_PeriCloclControl+0x68>)
 8000752:	4293      	cmp	r3, r2
 8000754:	d105      	bne.n	8000762 <SPI_PeriCloclControl+0x52>
				SPI3_PCLK_EN();
 8000756:	4b06      	ldr	r3, [pc, #24]	; (8000770 <SPI_PeriCloclControl+0x60>)
 8000758:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800075a:	4a05      	ldr	r2, [pc, #20]	; (8000770 <SPI_PeriCloclControl+0x60>)
 800075c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000760:	6593      	str	r3, [r2, #88]	; 0x58
}
 8000762:	bf00      	nop
 8000764:	370c      	adds	r7, #12
 8000766:	46bd      	mov	sp, r7
 8000768:	bc80      	pop	{r7}
 800076a:	4770      	bx	lr
 800076c:	40013000 	.word	0x40013000
 8000770:	40021000 	.word	0x40021000
 8000774:	40003800 	.word	0x40003800
 8000778:	40003c00 	.word	0x40003c00

0800077c <SPI_Init>:
/*Init De-Init*/
void SPI_Init(SPI_Handle_t * pSPI_Handle){
 800077c:	b480      	push	{r7}
 800077e:	b085      	sub	sp, #20
 8000780:	af00      	add	r7, sp, #0
 8000782:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000784:	2300      	movs	r3, #0
 8000786:	60fb      	str	r3, [r7, #12]

	temp|=((pSPI_Handle->SPI_Config.SPI_DeviceMode) << 2);
 8000788:	687b      	ldr	r3, [r7, #4]
 800078a:	791b      	ldrb	r3, [r3, #4]
 800078c:	009b      	lsls	r3, r3, #2
 800078e:	461a      	mov	r2, r3
 8000790:	68fb      	ldr	r3, [r7, #12]
 8000792:	4313      	orrs	r3, r2
 8000794:	60fb      	str	r3, [r7, #12]

	if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_FD){
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	795b      	ldrb	r3, [r3, #5]
 800079a:	2b01      	cmp	r3, #1
 800079c:	d104      	bne.n	80007a8 <SPI_Init+0x2c>
		temp&=~(1<<15);
 800079e:	68fb      	ldr	r3, [r7, #12]
 80007a0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80007a4:	60fb      	str	r3, [r7, #12]
 80007a6:	e014      	b.n	80007d2 <SPI_Init+0x56>
	}else if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_HD){
 80007a8:	687b      	ldr	r3, [r7, #4]
 80007aa:	795b      	ldrb	r3, [r3, #5]
 80007ac:	2b02      	cmp	r3, #2
 80007ae:	d104      	bne.n	80007ba <SPI_Init+0x3e>
		temp|=(1<<15);
 80007b0:	68fb      	ldr	r3, [r7, #12]
 80007b2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80007b6:	60fb      	str	r3, [r7, #12]
 80007b8:	e00b      	b.n	80007d2 <SPI_Init+0x56>

	}else if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_S_RX){
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	795b      	ldrb	r3, [r3, #5]
 80007be:	2b03      	cmp	r3, #3
 80007c0:	d107      	bne.n	80007d2 <SPI_Init+0x56>
		temp&=~(1<<15);
 80007c2:	68fb      	ldr	r3, [r7, #12]
 80007c4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80007c8:	60fb      	str	r3, [r7, #12]
		temp|=(1<<10);
 80007ca:	68fb      	ldr	r3, [r7, #12]
 80007cc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80007d0:	60fb      	str	r3, [r7, #12]
	}
	else{

	}
	temp|=((pSPI_Handle->SPI_Config.SPI_CPHA) << 0);
 80007d2:	687b      	ldr	r3, [r7, #4]
 80007d4:	79db      	ldrb	r3, [r3, #7]
 80007d6:	461a      	mov	r2, r3
 80007d8:	68fb      	ldr	r3, [r7, #12]
 80007da:	4313      	orrs	r3, r2
 80007dc:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_CPOL) << 1);
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	7a1b      	ldrb	r3, [r3, #8]
 80007e2:	005b      	lsls	r3, r3, #1
 80007e4:	461a      	mov	r2, r3
 80007e6:	68fb      	ldr	r3, [r7, #12]
 80007e8:	4313      	orrs	r3, r2
 80007ea:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_DFF) << 11);
 80007ec:	687b      	ldr	r3, [r7, #4]
 80007ee:	799b      	ldrb	r3, [r3, #6]
 80007f0:	02db      	lsls	r3, r3, #11
 80007f2:	461a      	mov	r2, r3
 80007f4:	68fb      	ldr	r3, [r7, #12]
 80007f6:	4313      	orrs	r3, r2
 80007f8:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_Speed) << 3);
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	7a9b      	ldrb	r3, [r3, #10]
 80007fe:	00db      	lsls	r3, r3, #3
 8000800:	461a      	mov	r2, r3
 8000802:	68fb      	ldr	r3, [r7, #12]
 8000804:	4313      	orrs	r3, r2
 8000806:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_SSM) << 9);
 8000808:	687b      	ldr	r3, [r7, #4]
 800080a:	7a5b      	ldrb	r3, [r3, #9]
 800080c:	025b      	lsls	r3, r3, #9
 800080e:	461a      	mov	r2, r3
 8000810:	68fb      	ldr	r3, [r7, #12]
 8000812:	4313      	orrs	r3, r2
 8000814:	60fb      	str	r3, [r7, #12]
	pSPI_Handle->pSPIx->CR1&=~(0x7FFF);
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	681b      	ldr	r3, [r3, #0]
 800081a:	681b      	ldr	r3, [r3, #0]
 800081c:	687a      	ldr	r2, [r7, #4]
 800081e:	6812      	ldr	r2, [r2, #0]
 8000820:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8000824:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8000828:	6013      	str	r3, [r2, #0]
	pSPI_Handle->pSPIx->CR1=temp;
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	681b      	ldr	r3, [r3, #0]
 800082e:	68fa      	ldr	r2, [r7, #12]
 8000830:	601a      	str	r2, [r3, #0]
}
 8000832:	bf00      	nop
 8000834:	3714      	adds	r7, #20
 8000836:	46bd      	mov	sp, r7
 8000838:	bc80      	pop	{r7}
 800083a:	4770      	bx	lr

0800083c <SPI_Control>:

}

/*Enable SPI*/

void SPI_Control(SPI_RegDef_t* pSPIx, uint8_t EnorDi){
 800083c:	b480      	push	{r7}
 800083e:	b083      	sub	sp, #12
 8000840:	af00      	add	r7, sp, #0
 8000842:	6078      	str	r0, [r7, #4]
 8000844:	460b      	mov	r3, r1
 8000846:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE ){
 8000848:	78fb      	ldrb	r3, [r7, #3]
 800084a:	2b01      	cmp	r3, #1
 800084c:	d106      	bne.n	800085c <SPI_Control+0x20>
		pSPIx->CR1|=(1<<SPI_BP_SPE);
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	681b      	ldr	r3, [r3, #0]
 8000852:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000856:	687b      	ldr	r3, [r7, #4]
 8000858:	601a      	str	r2, [r3, #0]
	}
	else{
		pSPIx->CR1&=~(1<<SPI_BP_SPE);
	}

}
 800085a:	e005      	b.n	8000868 <SPI_Control+0x2c>
		pSPIx->CR1&=~(1<<SPI_BP_SPE);
 800085c:	687b      	ldr	r3, [r7, #4]
 800085e:	681b      	ldr	r3, [r3, #0]
 8000860:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	601a      	str	r2, [r3, #0]
}
 8000868:	bf00      	nop
 800086a:	370c      	adds	r7, #12
 800086c:	46bd      	mov	sp, r7
 800086e:	bc80      	pop	{r7}
 8000870:	4770      	bx	lr

08000872 <SPI_SSI_Control>:
void SPI_SSI_Control(SPI_RegDef_t* pSPIx, uint8_t EnorDi){
 8000872:	b480      	push	{r7}
 8000874:	b083      	sub	sp, #12
 8000876:	af00      	add	r7, sp, #0
 8000878:	6078      	str	r0, [r7, #4]
 800087a:	460b      	mov	r3, r1
 800087c:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE ){
 800087e:	78fb      	ldrb	r3, [r7, #3]
 8000880:	2b01      	cmp	r3, #1
 8000882:	d106      	bne.n	8000892 <SPI_SSI_Control+0x20>
		pSPIx->CR1|=(1<<SPI_BP_SSI);
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	681b      	ldr	r3, [r3, #0]
 8000888:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800088c:	687b      	ldr	r3, [r7, #4]
 800088e:	601a      	str	r2, [r3, #0]
	}
	else{
		pSPIx->CR1&=~(1<<SPI_BP_SSI);
	}

}
 8000890:	e005      	b.n	800089e <SPI_SSI_Control+0x2c>
		pSPIx->CR1&=~(1<<SPI_BP_SSI);
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	681b      	ldr	r3, [r3, #0]
 8000896:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	601a      	str	r2, [r3, #0]
}
 800089e:	bf00      	nop
 80008a0:	370c      	adds	r7, #12
 80008a2:	46bd      	mov	sp, r7
 80008a4:	bc80      	pop	{r7}
 80008a6:	4770      	bx	lr

080008a8 <GetFlagStatus>:

}

/*Data send and Receive*/

uint8_t GetFlagStatus(SPI_RegDef_t* pSPIx, uint32_t FLAGNAME){
 80008a8:	b480      	push	{r7}
 80008aa:	b083      	sub	sp, #12
 80008ac:	af00      	add	r7, sp, #0
 80008ae:	6078      	str	r0, [r7, #4]
 80008b0:	6039      	str	r1, [r7, #0]
	if((pSPIx->SR & (1<<FLAGNAME))>0){
 80008b2:	687b      	ldr	r3, [r7, #4]
 80008b4:	689b      	ldr	r3, [r3, #8]
 80008b6:	2101      	movs	r1, #1
 80008b8:	683a      	ldr	r2, [r7, #0]
 80008ba:	fa01 f202 	lsl.w	r2, r1, r2
 80008be:	4013      	ands	r3, r2
 80008c0:	2b00      	cmp	r3, #0
 80008c2:	d001      	beq.n	80008c8 <GetFlagStatus+0x20>
		return FLAG_SET;
 80008c4:	2301      	movs	r3, #1
 80008c6:	e000      	b.n	80008ca <GetFlagStatus+0x22>
	}
	else{
		return FLAG_RESET;
 80008c8:	2300      	movs	r3, #0
	}
}
 80008ca:	4618      	mov	r0, r3
 80008cc:	370c      	adds	r7, #12
 80008ce:	46bd      	mov	sp, r7
 80008d0:	bc80      	pop	{r7}
 80008d2:	4770      	bx	lr

080008d4 <SPI_SendData>:

void SPI_SendData(SPI_RegDef_t* pSPIx, uint8_t* pTXBuffer, uint32_t len){
 80008d4:	b580      	push	{r7, lr}
 80008d6:	b084      	sub	sp, #16
 80008d8:	af00      	add	r7, sp, #0
 80008da:	60f8      	str	r0, [r7, #12]
 80008dc:	60b9      	str	r1, [r7, #8]
 80008de:	607a      	str	r2, [r7, #4]
	while(len>0){
 80008e0:	e026      	b.n	8000930 <SPI_SendData+0x5c>
		while(GetFlagStatus(pSPIx,SPI_BP_TXE) == FLAG_RESET){
 80008e2:	bf00      	nop
 80008e4:	2101      	movs	r1, #1
 80008e6:	68f8      	ldr	r0, [r7, #12]
 80008e8:	f7ff ffde 	bl	80008a8 <GetFlagStatus>
 80008ec:	4603      	mov	r3, r0
 80008ee:	2b00      	cmp	r3, #0
 80008f0:	d0f8      	beq.n	80008e4 <SPI_SendData+0x10>

		}
		if((pSPIx->CR1 & (1<<11))!= 0){
 80008f2:	68fb      	ldr	r3, [r7, #12]
 80008f4:	681b      	ldr	r3, [r3, #0]
 80008f6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 80008fa:	2b00      	cmp	r3, #0
 80008fc:	d00d      	beq.n	800091a <SPI_SendData+0x46>
			pSPIx->DR=*((uint16_t *)pTXBuffer);
 80008fe:	68bb      	ldr	r3, [r7, #8]
 8000900:	881b      	ldrh	r3, [r3, #0]
 8000902:	461a      	mov	r2, r3
 8000904:	68fb      	ldr	r3, [r7, #12]
 8000906:	60da      	str	r2, [r3, #12]
			len--;
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	3b01      	subs	r3, #1
 800090c:	607b      	str	r3, [r7, #4]
			len--;
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	3b01      	subs	r3, #1
 8000912:	607b      	str	r3, [r7, #4]
			(uint16_t *)pTXBuffer++;
 8000914:	68bb      	ldr	r3, [r7, #8]
 8000916:	3301      	adds	r3, #1
 8000918:	60bb      	str	r3, [r7, #8]
		}
		pSPIx->DR=*pTXBuffer;
 800091a:	68bb      	ldr	r3, [r7, #8]
 800091c:	781b      	ldrb	r3, [r3, #0]
 800091e:	461a      	mov	r2, r3
 8000920:	68fb      	ldr	r3, [r7, #12]
 8000922:	60da      	str	r2, [r3, #12]
		len--;
 8000924:	687b      	ldr	r3, [r7, #4]
 8000926:	3b01      	subs	r3, #1
 8000928:	607b      	str	r3, [r7, #4]
		(uint8_t *)pTXBuffer++;
 800092a:	68bb      	ldr	r3, [r7, #8]
 800092c:	3301      	adds	r3, #1
 800092e:	60bb      	str	r3, [r7, #8]
	while(len>0){
 8000930:	687b      	ldr	r3, [r7, #4]
 8000932:	2b00      	cmp	r3, #0
 8000934:	d1d5      	bne.n	80008e2 <SPI_SendData+0xe>
	}

}
 8000936:	bf00      	nop
 8000938:	bf00      	nop
 800093a:	3710      	adds	r7, #16
 800093c:	46bd      	mov	sp, r7
 800093e:	bd80      	pop	{r7, pc}

08000940 <__libc_init_array>:
 8000940:	b570      	push	{r4, r5, r6, lr}
 8000942:	4d0d      	ldr	r5, [pc, #52]	; (8000978 <__libc_init_array+0x38>)
 8000944:	4c0d      	ldr	r4, [pc, #52]	; (800097c <__libc_init_array+0x3c>)
 8000946:	1b64      	subs	r4, r4, r5
 8000948:	10a4      	asrs	r4, r4, #2
 800094a:	2600      	movs	r6, #0
 800094c:	42a6      	cmp	r6, r4
 800094e:	d109      	bne.n	8000964 <__libc_init_array+0x24>
 8000950:	4d0b      	ldr	r5, [pc, #44]	; (8000980 <__libc_init_array+0x40>)
 8000952:	4c0c      	ldr	r4, [pc, #48]	; (8000984 <__libc_init_array+0x44>)
 8000954:	f000 f818 	bl	8000988 <_init>
 8000958:	1b64      	subs	r4, r4, r5
 800095a:	10a4      	asrs	r4, r4, #2
 800095c:	2600      	movs	r6, #0
 800095e:	42a6      	cmp	r6, r4
 8000960:	d105      	bne.n	800096e <__libc_init_array+0x2e>
 8000962:	bd70      	pop	{r4, r5, r6, pc}
 8000964:	f855 3b04 	ldr.w	r3, [r5], #4
 8000968:	4798      	blx	r3
 800096a:	3601      	adds	r6, #1
 800096c:	e7ee      	b.n	800094c <__libc_init_array+0xc>
 800096e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000972:	4798      	blx	r3
 8000974:	3601      	adds	r6, #1
 8000976:	e7f2      	b.n	800095e <__libc_init_array+0x1e>
 8000978:	080009a0 	.word	0x080009a0
 800097c:	080009a0 	.word	0x080009a0
 8000980:	080009a0 	.word	0x080009a0
 8000984:	080009a4 	.word	0x080009a4

08000988 <_init>:
 8000988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800098a:	bf00      	nop
 800098c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800098e:	bc08      	pop	{r3}
 8000990:	469e      	mov	lr, r3
 8000992:	4770      	bx	lr

08000994 <_fini>:
 8000994:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000996:	bf00      	nop
 8000998:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800099a:	bc08      	pop	{r3}
 800099c:	469e      	mov	lr, r3
 800099e:	4770      	bx	lr
