
first_example.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002370  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000012c  08002500  08002500  00012500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800262c  0800262c  0002006c  2**0
                  CONTENTS
  4 .ARM          00000000  0800262c  0800262c  0002006c  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800262c  0800262c  0002006c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800262c  0800262c  0001262c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08002630  08002630  00012630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000006c  20000000  08002634  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  0002006c  2**0
                  CONTENTS
 10 .bss          000000e4  2000006c  2000006c  0002006c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000150  20000150  0002006c  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0002006c  2**0
                  CONTENTS, READONLY
 13 .debug_info   00002690  00000000  00000000  00020096  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000734  00000000  00000000  00022726  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000170  00000000  00000000  00022e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000128  00000000  00000000  00022fd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002917  00000000  00000000  000230f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001cea  00000000  00000000  00025a0f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000932a  00000000  00000000  000276f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000053  00000000  00000000  00030a23  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001094  00000000  00000000  00030a78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000006c 	.word	0x2000006c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	080024e8 	.word	0x080024e8

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000070 	.word	0x20000070
 80001cc:	080024e8 	.word	0x080024e8

080001d0 <strlen>:
 80001d0:	4603      	mov	r3, r0
 80001d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001d6:	2a00      	cmp	r2, #0
 80001d8:	d1fb      	bne.n	80001d2 <strlen+0x2>
 80001da:	1a18      	subs	r0, r3, r0
 80001dc:	3801      	subs	r0, #1
 80001de:	4770      	bx	lr

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <delay>:
#define ANALOG_PIN4   4


#define LED_PIN_9	9

void delay(){
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
	for (uint32_t i=0; i<50000;i++);
 8000286:	2300      	movs	r3, #0
 8000288:	607b      	str	r3, [r7, #4]
 800028a:	e002      	b.n	8000292 <delay+0x12>
 800028c:	687b      	ldr	r3, [r7, #4]
 800028e:	3301      	adds	r3, #1
 8000290:	607b      	str	r3, [r7, #4]
 8000292:	687b      	ldr	r3, [r7, #4]
 8000294:	f24c 324f 	movw	r2, #49999	; 0xc34f
 8000298:	4293      	cmp	r3, r2
 800029a:	d9f7      	bls.n	800028c <delay+0xc>
}
 800029c:	bf00      	nop
 800029e:	bf00      	nop
 80002a0:	370c      	adds	r7, #12
 80002a2:	46bd      	mov	sp, r7
 80002a4:	bc80      	pop	{r7}
 80002a6:	4770      	bx	lr

080002a8 <SPI_GPIO_Inits>:
/* SPI1_ NSS =  PA4 A2  */
/* SPI1_ CLK  = PA5 D13 */
/* SPI1_ MISO = PA6 D12 */
/* SPI1_ MOSI = PA7 D11 */

void SPI_GPIO_Inits(void){
 80002a8:	b580      	push	{r7, lr}
 80002aa:	b084      	sub	sp, #16
 80002ac:	af00      	add	r7, sp, #0
	GPIO_Handle_t SPI_GPIO_Handle;
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_ALT;
 80002ae:	2302      	movs	r3, #2
 80002b0:	727b      	strb	r3, [r7, #9]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinAltFuncMode=5;
 80002b2:	2305      	movs	r3, #5
 80002b4:	737b      	strb	r3, [r7, #13]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_OPType=GPIO_OPTYPE_PP;
 80002b6:	2300      	movs	r3, #0
 80002b8:	733b      	strb	r3, [r7, #12]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PIN_NOPU_NOPD;
 80002ba:	2300      	movs	r3, #0
 80002bc:	72fb      	strb	r3, [r7, #11]
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 80002be:	2302      	movs	r3, #2
 80002c0:	72bb      	strb	r3, [r7, #10]
	SPI_GPIO_Handle.pGPIOx=GPIOA;
 80002c2:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 80002c6:	607b      	str	r3, [r7, #4]
	GPIO_PeriCloclControl(GPIOA, ENABLE);
 80002c8:	2101      	movs	r1, #1
 80002ca:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80002ce:	f000 fac7 	bl	8000860 <GPIO_PeriCloclControl>

	//NSS
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_4;
 80002d2:	2304      	movs	r3, #4
 80002d4:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 80002d6:	1d3b      	adds	r3, r7, #4
 80002d8:	4618      	mov	r0, r3
 80002da:	f000 fb37 	bl	800094c <GPIO_Init>

	//SCK
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_5;
 80002de:	2305      	movs	r3, #5
 80002e0:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 80002e2:	1d3b      	adds	r3, r7, #4
 80002e4:	4618      	mov	r0, r3
 80002e6:	f000 fb31 	bl	800094c <GPIO_Init>

	//MISO
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_6;
 80002ea:	2306      	movs	r3, #6
 80002ec:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 80002ee:	1d3b      	adds	r3, r7, #4
 80002f0:	4618      	mov	r0, r3
 80002f2:	f000 fb2b 	bl	800094c <GPIO_Init>

	//MOSI
	SPI_GPIO_Handle.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_7;
 80002f6:	2307      	movs	r3, #7
 80002f8:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&SPI_GPIO_Handle);
 80002fa:	1d3b      	adds	r3, r7, #4
 80002fc:	4618      	mov	r0, r3
 80002fe:	f000 fb25 	bl	800094c <GPIO_Init>




}
 8000302:	bf00      	nop
 8000304:	3710      	adds	r7, #16
 8000306:	46bd      	mov	sp, r7
 8000308:	bd80      	pop	{r7, pc}
	...

0800030c <SPI1_Inits>:
void SPI1_Inits(void){
 800030c:	b580      	push	{r7, lr}
 800030e:	b084      	sub	sp, #16
 8000310:	af00      	add	r7, sp, #0

	SPI_PeriCloclControl(SPI1, ENABLE);
 8000312:	2101      	movs	r1, #1
 8000314:	480d      	ldr	r0, [pc, #52]	; (800034c <SPI1_Inits+0x40>)
 8000316:	f000 fcd1 	bl	8000cbc <SPI_PeriCloclControl>
	SPI_Handle_t SPI_Handle;
	SPI_Handle.pSPIx=SPI1;
 800031a:	4b0c      	ldr	r3, [pc, #48]	; (800034c <SPI1_Inits+0x40>)
 800031c:	607b      	str	r3, [r7, #4]
	SPI_Handle.SPI_Config.SPI_DeviceMode=SPI_MASTER;
 800031e:	2301      	movs	r3, #1
 8000320:	723b      	strb	r3, [r7, #8]
	SPI_Handle.SPI_Config.SPI_BusConfig=SPI_BCONFIG_FD;
 8000322:	2301      	movs	r3, #1
 8000324:	727b      	strb	r3, [r7, #9]
	SPI_Handle.SPI_Config.SPI_Speed=SR_BR_PCLK_DIV_2;
 8000326:	2300      	movs	r3, #0
 8000328:	73bb      	strb	r3, [r7, #14]
	SPI_Handle.SPI_Config.SPI_DFF=SPI_DFF_8BIT;
 800032a:	2300      	movs	r3, #0
 800032c:	72bb      	strb	r3, [r7, #10]
	SPI_Handle.SPI_Config.SPI_CPHA=SPI_CPHA_0;
 800032e:	2300      	movs	r3, #0
 8000330:	72fb      	strb	r3, [r7, #11]
	SPI_Handle.SPI_Config.SPI_CPOL=SPI_CPOL_0;
 8000332:	2300      	movs	r3, #0
 8000334:	733b      	strb	r3, [r7, #12]
	SPI_Handle.SPI_Config.SPI_SSM=SPI_SSM_DI;
 8000336:	2300      	movs	r3, #0
 8000338:	737b      	strb	r3, [r7, #13]

	SPI_Init(&SPI_Handle);
 800033a:	1d3b      	adds	r3, r7, #4
 800033c:	4618      	mov	r0, r3
 800033e:	f000 fcf3 	bl	8000d28 <SPI_Init>

}
 8000342:	bf00      	nop
 8000344:	3710      	adds	r7, #16
 8000346:	46bd      	mov	sp, r7
 8000348:	bd80      	pop	{r7, pc}
 800034a:	bf00      	nop
 800034c:	40013000 	.word	0x40013000

08000350 <Button_GPIO_Inits>:

void Button_GPIO_Inits(void){
 8000350:	b580      	push	{r7, lr}
 8000352:	b084      	sub	sp, #16
 8000354:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_Bttn ={0};
 8000356:	1d3b      	adds	r3, r7, #4
 8000358:	2200      	movs	r2, #0
 800035a:	601a      	str	r2, [r3, #0]
 800035c:	605a      	str	r2, [r3, #4]
 800035e:	609a      	str	r2, [r3, #8]
	GPIO_Bttn.GPIO_PinConfig.GPIO_PinMode=GPIO_MODE_INPUT;
 8000360:	2300      	movs	r3, #0
 8000362:	727b      	strb	r3, [r7, #9]
	GPIO_Bttn.GPIO_PinConfig.GPIO_PinPuPdControl=GPIO_PIN_NOPU_NOPD;
 8000364:	2300      	movs	r3, #0
 8000366:	72fb      	strb	r3, [r7, #11]
	GPIO_Bttn.GPIO_PinConfig.GPIO_PinSpeed=GPIO_SPEED_HIGH;
 8000368:	2302      	movs	r3, #2
 800036a:	72bb      	strb	r3, [r7, #10]
	GPIO_Bttn.pGPIOx=GPIOA;
 800036c:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8000370:	607b      	str	r3, [r7, #4]
	GPIO_Bttn.GPIO_PinConfig.GPIO_PinNumber=GPIO_PIN_12;
 8000372:	230c      	movs	r3, #12
 8000374:	723b      	strb	r3, [r7, #8]
	GPIO_PeriCloclControl(GPIOA, ENABLE);
 8000376:	2101      	movs	r1, #1
 8000378:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800037c:	f000 fa70 	bl	8000860 <GPIO_PeriCloclControl>
	GPIO_Init(&GPIO_Bttn);
 8000380:	1d3b      	adds	r3, r7, #4
 8000382:	4618      	mov	r0, r3
 8000384:	f000 fae2 	bl	800094c <GPIO_Init>

}
 8000388:	bf00      	nop
 800038a:	3710      	adds	r7, #16
 800038c:	46bd      	mov	sp, r7
 800038e:	bd80      	pop	{r7, pc}

08000390 <Check_ACK>:

uint8_t Check_ACK(uint8_t command) {
 8000390:	b480      	push	{r7}
 8000392:	b083      	sub	sp, #12
 8000394:	af00      	add	r7, sp, #0
 8000396:	4603      	mov	r3, r0
 8000398:	71fb      	strb	r3, [r7, #7]
	if(command==0xF5){
 800039a:	79fb      	ldrb	r3, [r7, #7]
 800039c:	2bf5      	cmp	r3, #245	; 0xf5
 800039e:	d101      	bne.n	80003a4 <Check_ACK+0x14>
		return 1;
 80003a0:	2301      	movs	r3, #1
 80003a2:	e000      	b.n	80003a6 <Check_ACK+0x16>
	}
	return 0;
 80003a4:	2300      	movs	r3, #0
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	370c      	adds	r7, #12
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bc80      	pop	{r7}
 80003ae:	4770      	bx	lr

080003b0 <main>:



int main(void)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b088      	sub	sp, #32
 80003b4:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 80003b6:	f001 f821 	bl	80013fc <initialise_monitor_handles>
	uint8_t cmd_w=0xff;
 80003ba:	23ff      	movs	r3, #255	; 0xff
 80003bc:	75fb      	strb	r3, [r7, #23]
	uint8_t cmd_param[2];
	uint8_t cmd_data;
	uint8_t cmd_r;
	uint8_t analog_read;
	uint8_t pin_state;
	char *message=" Hola mundo\n";
 80003be:	4bdb      	ldr	r3, [pc, #876]	; (800072c <main+0x37c>)
 80003c0:	61bb      	str	r3, [r7, #24]
	char m10[12];
	uint8_t len=0;
 80003c2:	2300      	movs	r3, #0
 80003c4:	70fb      	strb	r3, [r7, #3]

	Button_GPIO_Inits();
 80003c6:	f7ff ffc3 	bl	8000350 <Button_GPIO_Inits>
	SPI_GPIO_Inits();
 80003ca:	f7ff ff6d 	bl	80002a8 <SPI_GPIO_Inits>
	SPI1_Inits();
 80003ce:	f7ff ff9d 	bl	800030c <SPI1_Inits>

	SPI_SSOE_Control(SPI1, ENABLE); //Enable Output in master mode and SPI enabled.
 80003d2:	2101      	movs	r1, #1
 80003d4:	48d6      	ldr	r0, [pc, #856]	; (8000730 <main+0x380>)
 80003d6:	f000 fd2a 	bl	8000e2e <SPI_SSOE_Control>
	//SPI_SSI_Control(SPI1,ENABLE); Not required for DISABLED SSM
	while (1){
		printf("SPI initialize\n");
 80003da:	48d6      	ldr	r0, [pc, #856]	; (8000734 <main+0x384>)
 80003dc:	f001 fa94 	bl	8001908 <puts>
		while(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_12)){};
 80003e0:	bf00      	nop
 80003e2:	210c      	movs	r1, #12
 80003e4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80003e8:	f000 fc52 	bl	8000c90 <GPIO_ReadFromInputPin>
 80003ec:	4603      	mov	r3, r0
 80003ee:	2b00      	cmp	r3, #0
 80003f0:	d1f7      	bne.n	80003e2 <main+0x32>
		delay();
 80003f2:	f7ff ff45 	bl	8000280 <delay>
		SPI_Control(SPI1,ENABLE);
 80003f6:	2101      	movs	r1, #1
 80003f8:	48cd      	ldr	r0, [pc, #820]	; (8000730 <main+0x380>)
 80003fa:	f000 fcfd 	bl	8000df8 <SPI_Control>
		//<--------------------------------COMMAND LED CONTROL ---------------------------------->//
		cmd_data=COMMAND_LED_CTRL;
 80003fe:	2350      	movs	r3, #80	; 0x50
 8000400:	74fb      	strb	r3, [r7, #19]
		SPI_SendData(SPI1,&cmd_data, 1);
 8000402:	f107 0313 	add.w	r3, r7, #19
 8000406:	2201      	movs	r2, #1
 8000408:	4619      	mov	r1, r3
 800040a:	48c9      	ldr	r0, [pc, #804]	; (8000730 <main+0x380>)
 800040c:	f000 fd40 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read - we are not expecting anything
 8000410:	f107 0312 	add.w	r3, r7, #18
 8000414:	2201      	movs	r2, #1
 8000416:	4619      	mov	r1, r3
 8000418:	48c5      	ldr	r0, [pc, #788]	; (8000730 <main+0x380>)
 800041a:	f000 fd8a 	bl	8000f32 <SPI_ReceiveData>
		delay();
 800041e:	f7ff ff2f 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write to receive ack
 8000422:	f107 0317 	add.w	r3, r7, #23
 8000426:	2201      	movs	r2, #1
 8000428:	4619      	mov	r1, r3
 800042a:	48c1      	ldr	r0, [pc, #772]	; (8000730 <main+0x380>)
 800042c:	f000 fd30 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 8000430:	f107 0312 	add.w	r3, r7, #18
 8000434:	2201      	movs	r2, #1
 8000436:	4619      	mov	r1, r3
 8000438:	48bd      	ldr	r0, [pc, #756]	; (8000730 <main+0x380>)
 800043a:	f000 fd7a 	bl	8000f32 <SPI_ReceiveData>
		//Check if sent command is correct
		delay();
 800043e:	f7ff ff1f 	bl	8000280 <delay>
		delay();
 8000442:	f7ff ff1d 	bl	8000280 <delay>
		if(Check_ACK(cmd_r)){
 8000446:	7cbb      	ldrb	r3, [r7, #18]
 8000448:	4618      	mov	r0, r3
 800044a:	f7ff ffa1 	bl	8000390 <Check_ACK>
 800044e:	4603      	mov	r3, r0
 8000450:	2b00      	cmp	r3, #0
 8000452:	d00a      	beq.n	800046a <main+0xba>
				cmd_param[0]=LED_PIN_9;
 8000454:	2309      	movs	r3, #9
 8000456:	753b      	strb	r3, [r7, #20]
				cmd_param[1]=LED_ON;
 8000458:	2301      	movs	r3, #1
 800045a:	757b      	strb	r3, [r7, #21]
				SPI_SendData(SPI1,cmd_param, 2);
 800045c:	f107 0314 	add.w	r3, r7, #20
 8000460:	2202      	movs	r2, #2
 8000462:	4619      	mov	r1, r3
 8000464:	48b2      	ldr	r0, [pc, #712]	; (8000730 <main+0x380>)
 8000466:	f000 fd13 	bl	8000e90 <SPI_SendData>
		}
		SPI_ReceiveData(SPI1,  &cmd_r, 2);
 800046a:	f107 0312 	add.w	r3, r7, #18
 800046e:	2202      	movs	r2, #2
 8000470:	4619      	mov	r1, r3
 8000472:	48af      	ldr	r0, [pc, #700]	; (8000730 <main+0x380>)
 8000474:	f000 fd5d 	bl	8000f32 <SPI_ReceiveData>
		//wait for new command
		while(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_12)){};
 8000478:	bf00      	nop
 800047a:	210c      	movs	r1, #12
 800047c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000480:	f000 fc06 	bl	8000c90 <GPIO_ReadFromInputPin>
 8000484:	4603      	mov	r3, r0
 8000486:	2b00      	cmp	r3, #0
 8000488:	d1f7      	bne.n	800047a <main+0xca>
		delay();
 800048a:	f7ff fef9 	bl	8000280 <delay>

		//<--------------------------------COMMAND SENSOR READ ---------------------------------->//
		cmd_data=COMMAND_SENSOR_READ;
 800048e:	2351      	movs	r3, #81	; 0x51
 8000490:	74fb      	strb	r3, [r7, #19]
		SPI_SendData(SPI1,&cmd_data, 1);
 8000492:	f107 0313 	add.w	r3, r7, #19
 8000496:	2201      	movs	r2, #1
 8000498:	4619      	mov	r1, r3
 800049a:	48a5      	ldr	r0, [pc, #660]	; (8000730 <main+0x380>)
 800049c:	f000 fcf8 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read - we are not expecting anything
 80004a0:	f107 0312 	add.w	r3, r7, #18
 80004a4:	2201      	movs	r2, #1
 80004a6:	4619      	mov	r1, r3
 80004a8:	48a1      	ldr	r0, [pc, #644]	; (8000730 <main+0x380>)
 80004aa:	f000 fd42 	bl	8000f32 <SPI_ReceiveData>
		delay();
 80004ae:	f7ff fee7 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write to receive ack
 80004b2:	f107 0317 	add.w	r3, r7, #23
 80004b6:	2201      	movs	r2, #1
 80004b8:	4619      	mov	r1, r3
 80004ba:	489d      	ldr	r0, [pc, #628]	; (8000730 <main+0x380>)
 80004bc:	f000 fce8 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 80004c0:	f107 0312 	add.w	r3, r7, #18
 80004c4:	2201      	movs	r2, #1
 80004c6:	4619      	mov	r1, r3
 80004c8:	4899      	ldr	r0, [pc, #612]	; (8000730 <main+0x380>)
 80004ca:	f000 fd32 	bl	8000f32 <SPI_ReceiveData>
		delay();
 80004ce:	f7ff fed7 	bl	8000280 <delay>
		if(Check_ACK(cmd_r)){
 80004d2:	7cbb      	ldrb	r3, [r7, #18]
 80004d4:	4618      	mov	r0, r3
 80004d6:	f7ff ff5b 	bl	8000390 <Check_ACK>
 80004da:	4603      	mov	r3, r0
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d008      	beq.n	80004f2 <main+0x142>
			cmd_param[0]=ANALOG_PIN0;
 80004e0:	2300      	movs	r3, #0
 80004e2:	753b      	strb	r3, [r7, #20]
			SPI_SendData(SPI1,cmd_param, 1);
 80004e4:	f107 0314 	add.w	r3, r7, #20
 80004e8:	2201      	movs	r2, #1
 80004ea:	4619      	mov	r1, r3
 80004ec:	4890      	ldr	r0, [pc, #576]	; (8000730 <main+0x380>)
 80004ee:	f000 fccf 	bl	8000e90 <SPI_SendData>

		}
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read
 80004f2:	f107 0312 	add.w	r3, r7, #18
 80004f6:	2201      	movs	r2, #1
 80004f8:	4619      	mov	r1, r3
 80004fa:	488d      	ldr	r0, [pc, #564]	; (8000730 <main+0x380>)
 80004fc:	f000 fd19 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000500:	f7ff febe 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write
 8000504:	f107 0317 	add.w	r3, r7, #23
 8000508:	2201      	movs	r2, #1
 800050a:	4619      	mov	r1, r3
 800050c:	4888      	ldr	r0, [pc, #544]	; (8000730 <main+0x380>)
 800050e:	f000 fcbf 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &analog_read, 1);
 8000512:	f107 0311 	add.w	r3, r7, #17
 8000516:	2201      	movs	r2, #1
 8000518:	4619      	mov	r1, r3
 800051a:	4885      	ldr	r0, [pc, #532]	; (8000730 <main+0x380>)
 800051c:	f000 fd09 	bl	8000f32 <SPI_ReceiveData>
		printf("Analog read: %d\n",analog_read);
 8000520:	7c7b      	ldrb	r3, [r7, #17]
 8000522:	4619      	mov	r1, r3
 8000524:	4884      	ldr	r0, [pc, #528]	; (8000738 <main+0x388>)
 8000526:	f001 f969 	bl	80017fc <iprintf>
		//wait for new command
		while(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_12)){};
 800052a:	bf00      	nop
 800052c:	210c      	movs	r1, #12
 800052e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000532:	f000 fbad 	bl	8000c90 <GPIO_ReadFromInputPin>
 8000536:	4603      	mov	r3, r0
 8000538:	2b00      	cmp	r3, #0
 800053a:	d1f7      	bne.n	800052c <main+0x17c>
		delay();
 800053c:	f7ff fea0 	bl	8000280 <delay>
		//<--------------------------------COMMAND LED READ ---------------------------------->//
		cmd_data=COMMAND_LED_READ;
 8000540:	2352      	movs	r3, #82	; 0x52
 8000542:	74fb      	strb	r3, [r7, #19]
		SPI_SendData(SPI1,&cmd_data, 1);
 8000544:	f107 0313 	add.w	r3, r7, #19
 8000548:	2201      	movs	r2, #1
 800054a:	4619      	mov	r1, r3
 800054c:	4878      	ldr	r0, [pc, #480]	; (8000730 <main+0x380>)
 800054e:	f000 fc9f 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read - we are not expecting anything
 8000552:	f107 0312 	add.w	r3, r7, #18
 8000556:	2201      	movs	r2, #1
 8000558:	4619      	mov	r1, r3
 800055a:	4875      	ldr	r0, [pc, #468]	; (8000730 <main+0x380>)
 800055c:	f000 fce9 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000560:	f7ff fe8e 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write to receive ack
 8000564:	f107 0317 	add.w	r3, r7, #23
 8000568:	2201      	movs	r2, #1
 800056a:	4619      	mov	r1, r3
 800056c:	4870      	ldr	r0, [pc, #448]	; (8000730 <main+0x380>)
 800056e:	f000 fc8f 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 8000572:	f107 0312 	add.w	r3, r7, #18
 8000576:	2201      	movs	r2, #1
 8000578:	4619      	mov	r1, r3
 800057a:	486d      	ldr	r0, [pc, #436]	; (8000730 <main+0x380>)
 800057c:	f000 fcd9 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000580:	f7ff fe7e 	bl	8000280 <delay>
		if(Check_ACK(cmd_r)){
 8000584:	7cbb      	ldrb	r3, [r7, #18]
 8000586:	4618      	mov	r0, r3
 8000588:	f7ff ff02 	bl	8000390 <Check_ACK>
 800058c:	4603      	mov	r3, r0
 800058e:	2b00      	cmp	r3, #0
 8000590:	d008      	beq.n	80005a4 <main+0x1f4>
			cmd_param[0]=LED_PIN_9;
 8000592:	2309      	movs	r3, #9
 8000594:	753b      	strb	r3, [r7, #20]
			SPI_SendData(SPI1,cmd_param, 1);
 8000596:	f107 0314 	add.w	r3, r7, #20
 800059a:	2201      	movs	r2, #1
 800059c:	4619      	mov	r1, r3
 800059e:	4864      	ldr	r0, [pc, #400]	; (8000730 <main+0x380>)
 80005a0:	f000 fc76 	bl	8000e90 <SPI_SendData>
			}
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read
 80005a4:	f107 0312 	add.w	r3, r7, #18
 80005a8:	2201      	movs	r2, #1
 80005aa:	4619      	mov	r1, r3
 80005ac:	4860      	ldr	r0, [pc, #384]	; (8000730 <main+0x380>)
 80005ae:	f000 fcc0 	bl	8000f32 <SPI_ReceiveData>
		delay();
 80005b2:	f7ff fe65 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write
 80005b6:	f107 0317 	add.w	r3, r7, #23
 80005ba:	2201      	movs	r2, #1
 80005bc:	4619      	mov	r1, r3
 80005be:	485c      	ldr	r0, [pc, #368]	; (8000730 <main+0x380>)
 80005c0:	f000 fc66 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &pin_state, 1);
 80005c4:	f107 0310 	add.w	r3, r7, #16
 80005c8:	2201      	movs	r2, #1
 80005ca:	4619      	mov	r1, r3
 80005cc:	4858      	ldr	r0, [pc, #352]	; (8000730 <main+0x380>)
 80005ce:	f000 fcb0 	bl	8000f32 <SPI_ReceiveData>
		printf("Pin 9 state: %d\n",pin_state);
 80005d2:	7c3b      	ldrb	r3, [r7, #16]
 80005d4:	4619      	mov	r1, r3
 80005d6:	4859      	ldr	r0, [pc, #356]	; (800073c <main+0x38c>)
 80005d8:	f001 f910 	bl	80017fc <iprintf>
		while(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_12)){};
 80005dc:	bf00      	nop
 80005de:	210c      	movs	r1, #12
 80005e0:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80005e4:	f000 fb54 	bl	8000c90 <GPIO_ReadFromInputPin>
 80005e8:	4603      	mov	r3, r0
 80005ea:	2b00      	cmp	r3, #0
 80005ec:	d1f7      	bne.n	80005de <main+0x22e>
		delay();
 80005ee:	f7ff fe47 	bl	8000280 <delay>
		//<--------------------------------COMMAND PRINT  ---------------------------------->//
		cmd_data=COMMAND_PRINT;
 80005f2:	2353      	movs	r3, #83	; 0x53
 80005f4:	74fb      	strb	r3, [r7, #19]
		SPI_SendData(SPI1,&cmd_data, 1);
 80005f6:	f107 0313 	add.w	r3, r7, #19
 80005fa:	2201      	movs	r2, #1
 80005fc:	4619      	mov	r1, r3
 80005fe:	484c      	ldr	r0, [pc, #304]	; (8000730 <main+0x380>)
 8000600:	f000 fc46 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1,  &cmd_r, 1);//dummy read - we are not expecting anything
 8000604:	f107 0312 	add.w	r3, r7, #18
 8000608:	2201      	movs	r2, #1
 800060a:	4619      	mov	r1, r3
 800060c:	4848      	ldr	r0, [pc, #288]	; (8000730 <main+0x380>)
 800060e:	f000 fc90 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000612:	f7ff fe35 	bl	8000280 <delay>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write to receive ack
 8000616:	f107 0317 	add.w	r3, r7, #23
 800061a:	2201      	movs	r2, #1
 800061c:	4619      	mov	r1, r3
 800061e:	4844      	ldr	r0, [pc, #272]	; (8000730 <main+0x380>)
 8000620:	f000 fc36 	bl	8000e90 <SPI_SendData>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 8000624:	f107 0312 	add.w	r3, r7, #18
 8000628:	2201      	movs	r2, #1
 800062a:	4619      	mov	r1, r3
 800062c:	4840      	ldr	r0, [pc, #256]	; (8000730 <main+0x380>)
 800062e:	f000 fc80 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000632:	f7ff fe25 	bl	8000280 <delay>
		printf("ack: %u \n",cmd_r);
 8000636:	7cbb      	ldrb	r3, [r7, #18]
 8000638:	4619      	mov	r1, r3
 800063a:	4841      	ldr	r0, [pc, #260]	; (8000740 <main+0x390>)
 800063c:	f001 f8de 	bl	80017fc <iprintf>
		if(Check_ACK(cmd_r)){
 8000640:	7cbb      	ldrb	r3, [r7, #18]
 8000642:	4618      	mov	r0, r3
 8000644:	f7ff fea4 	bl	8000390 <Check_ACK>
 8000648:	4603      	mov	r3, r0
 800064a:	2b00      	cmp	r3, #0
 800064c:	d015      	beq.n	800067a <main+0x2ca>
			len=strlen((char*)message);
 800064e:	69b8      	ldr	r0, [r7, #24]
 8000650:	f7ff fdbe 	bl	80001d0 <strlen>
 8000654:	4603      	mov	r3, r0
 8000656:	b2db      	uxtb	r3, r3
 8000658:	70fb      	strb	r3, [r7, #3]
			SPI_SendData(SPI1,&len,1);
 800065a:	1cfb      	adds	r3, r7, #3
 800065c:	2201      	movs	r2, #1
 800065e:	4619      	mov	r1, r3
 8000660:	4833      	ldr	r0, [pc, #204]	; (8000730 <main+0x380>)
 8000662:	f000 fc15 	bl	8000e90 <SPI_SendData>
			delay();
 8000666:	f7ff fe0b 	bl	8000280 <delay>
			SPI_SendData(SPI1,(uint8_t*)message,len);
 800066a:	78fb      	ldrb	r3, [r7, #3]
 800066c:	461a      	mov	r2, r3
 800066e:	69b9      	ldr	r1, [r7, #24]
 8000670:	482f      	ldr	r0, [pc, #188]	; (8000730 <main+0x380>)
 8000672:	f000 fc0d 	bl	8000e90 <SPI_SendData>
			delay();
 8000676:	f7ff fe03 	bl	8000280 <delay>
			//SPI_ReceiveData(SPI1, &cmd_dummy_r, 1);
			//delay();
		}
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 800067a:	f107 0312 	add.w	r3, r7, #18
 800067e:	2201      	movs	r2, #1
 8000680:	4619      	mov	r1, r3
 8000682:	482b      	ldr	r0, [pc, #172]	; (8000730 <main+0x380>)
 8000684:	f000 fc55 	bl	8000f32 <SPI_ReceiveData>
		delay();
 8000688:	f7ff fdfa 	bl	8000280 <delay>
		printf("Command ID read\n");
 800068c:	482d      	ldr	r0, [pc, #180]	; (8000744 <main+0x394>)
 800068e:	f001 f93b 	bl	8001908 <puts>
		while(GPIO_ReadFromInputPin(GPIOA,GPIO_PIN_12)){};
 8000692:	bf00      	nop
 8000694:	210c      	movs	r1, #12
 8000696:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800069a:	f000 faf9 	bl	8000c90 <GPIO_ReadFromInputPin>
 800069e:	4603      	mov	r3, r0
 80006a0:	2b00      	cmp	r3, #0
 80006a2:	d1f7      	bne.n	8000694 <main+0x2e4>
		//<--------------------------------COMMAND ID READ  ---------------------------------->//
		SPI_CLR_OVR(SPI1);
 80006a4:	4822      	ldr	r0, [pc, #136]	; (8000730 <main+0x380>)
 80006a6:	f000 fc2d 	bl	8000f04 <SPI_CLR_OVR>
		//delay2();
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 80006aa:	f107 0312 	add.w	r3, r7, #18
 80006ae:	2201      	movs	r2, #1
 80006b0:	4619      	mov	r1, r3
 80006b2:	481f      	ldr	r0, [pc, #124]	; (8000730 <main+0x380>)
 80006b4:	f000 fc3d 	bl	8000f32 <SPI_ReceiveData>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 80006b8:	f107 0312 	add.w	r3, r7, #18
 80006bc:	2201      	movs	r2, #1
 80006be:	4619      	mov	r1, r3
 80006c0:	481b      	ldr	r0, [pc, #108]	; (8000730 <main+0x380>)
 80006c2:	f000 fc36 	bl	8000f32 <SPI_ReceiveData>
		cmd_data=COMMAND_ID_READ;
 80006c6:	2354      	movs	r3, #84	; 0x54
 80006c8:	74fb      	strb	r3, [r7, #19]
		SPI_SendData(SPI1,&cmd_data, 1);
 80006ca:	f107 0313 	add.w	r3, r7, #19
 80006ce:	2201      	movs	r2, #1
 80006d0:	4619      	mov	r1, r3
 80006d2:	4817      	ldr	r0, [pc, #92]	; (8000730 <main+0x380>)
 80006d4:	f000 fbdc 	bl	8000e90 <SPI_SendData>
		delay();
 80006d8:	f7ff fdd2 	bl	8000280 <delay>
		SPI_ReceiveData(SPI1, &cmd_r, 1);//dummy read - we are not expecting anything
 80006dc:	f107 0312 	add.w	r3, r7, #18
 80006e0:	2201      	movs	r2, #1
 80006e2:	4619      	mov	r1, r3
 80006e4:	4812      	ldr	r0, [pc, #72]	; (8000730 <main+0x380>)
 80006e6:	f000 fc24 	bl	8000f32 <SPI_ReceiveData>
		delay();
 80006ea:	f7ff fdc9 	bl	8000280 <delay>
		printf("dummy: %u \n", cmd_r);
 80006ee:	7cbb      	ldrb	r3, [r7, #18]
 80006f0:	4619      	mov	r1, r3
 80006f2:	4815      	ldr	r0, [pc, #84]	; (8000748 <main+0x398>)
 80006f4:	f001 f882 	bl	80017fc <iprintf>
		SPI_SendData(SPI1,&cmd_w, 1);//dummy write to receive ack
 80006f8:	f107 0317 	add.w	r3, r7, #23
 80006fc:	2201      	movs	r2, #1
 80006fe:	4619      	mov	r1, r3
 8000700:	480b      	ldr	r0, [pc, #44]	; (8000730 <main+0x380>)
 8000702:	f000 fbc5 	bl	8000e90 <SPI_SendData>
		delay();
 8000706:	f7ff fdbb 	bl	8000280 <delay>
		SPI_ReceiveData(SPI1, &cmd_r, 1);
 800070a:	f107 0312 	add.w	r3, r7, #18
 800070e:	2201      	movs	r2, #1
 8000710:	4619      	mov	r1, r3
 8000712:	4807      	ldr	r0, [pc, #28]	; (8000730 <main+0x380>)
 8000714:	f000 fc0d 	bl	8000f32 <SPI_ReceiveData>
		printf("ack: %u \n",cmd_r);
 8000718:	7cbb      	ldrb	r3, [r7, #18]
 800071a:	4619      	mov	r1, r3
 800071c:	4808      	ldr	r0, [pc, #32]	; (8000740 <main+0x390>)
 800071e:	f001 f86d 	bl	80017fc <iprintf>
		if(Check_ACK(cmd_r)){
 8000722:	7cbb      	ldrb	r3, [r7, #18]
 8000724:	4618      	mov	r0, r3
 8000726:	f7ff fe33 	bl	8000390 <Check_ACK>
 800072a:	e00f      	b.n	800074c <main+0x39c>
 800072c:	08002500 	.word	0x08002500
 8000730:	40013000 	.word	0x40013000
 8000734:	08002510 	.word	0x08002510
 8000738:	08002520 	.word	0x08002520
 800073c:	08002534 	.word	0x08002534
 8000740:	08002548 	.word	0x08002548
 8000744:	08002554 	.word	0x08002554
 8000748:	08002564 	.word	0x08002564
 800074c:	4603      	mov	r3, r0
 800074e:	2b00      	cmp	r3, #0
 8000750:	d01b      	beq.n	800078a <main+0x3da>
			for(int i=0; i<10;i++){
 8000752:	2300      	movs	r3, #0
 8000754:	61fb      	str	r3, [r7, #28]
 8000756:	e013      	b.n	8000780 <main+0x3d0>
				SPI_SendData(SPI1,&cmd_w, 1);//dummy to receive caracters
 8000758:	f107 0317 	add.w	r3, r7, #23
 800075c:	2201      	movs	r2, #1
 800075e:	4619      	mov	r1, r3
 8000760:	480d      	ldr	r0, [pc, #52]	; (8000798 <main+0x3e8>)
 8000762:	f000 fb95 	bl	8000e90 <SPI_SendData>
				delay();
 8000766:	f7ff fd8b 	bl	8000280 <delay>
				SPI_ReceiveData(SPI1,(uint8_t*)&m10[i], 1);
 800076a:	1d3a      	adds	r2, r7, #4
 800076c:	69fb      	ldr	r3, [r7, #28]
 800076e:	4413      	add	r3, r2
 8000770:	2201      	movs	r2, #1
 8000772:	4619      	mov	r1, r3
 8000774:	4808      	ldr	r0, [pc, #32]	; (8000798 <main+0x3e8>)
 8000776:	f000 fbdc 	bl	8000f32 <SPI_ReceiveData>
			for(int i=0; i<10;i++){
 800077a:	69fb      	ldr	r3, [r7, #28]
 800077c:	3301      	adds	r3, #1
 800077e:	61fb      	str	r3, [r7, #28]
 8000780:	69fb      	ldr	r3, [r7, #28]
 8000782:	2b09      	cmp	r3, #9
 8000784:	dde8      	ble.n	8000758 <main+0x3a8>
			}
			m10[10]='\0';
 8000786:	2300      	movs	r3, #0
 8000788:	73bb      	strb	r3, [r7, #14]
		}
		printf("ID %s\n",m10);
 800078a:	1d3b      	adds	r3, r7, #4
 800078c:	4619      	mov	r1, r3
 800078e:	4803      	ldr	r0, [pc, #12]	; (800079c <main+0x3ec>)
 8000790:	f001 f834 	bl	80017fc <iprintf>
	while (1){
 8000794:	e621      	b.n	80003da <main+0x2a>
 8000796:	bf00      	nop
 8000798:	40013000 	.word	0x40013000
 800079c:	08002570 	.word	0x08002570

080007a0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80007a0:	b580      	push	{r7, lr}
 80007a2:	b086      	sub	sp, #24
 80007a4:	af00      	add	r7, sp, #0
 80007a6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80007a8:	4a14      	ldr	r2, [pc, #80]	; (80007fc <_sbrk+0x5c>)
 80007aa:	4b15      	ldr	r3, [pc, #84]	; (8000800 <_sbrk+0x60>)
 80007ac:	1ad3      	subs	r3, r2, r3
 80007ae:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80007b0:	697b      	ldr	r3, [r7, #20]
 80007b2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80007b4:	4b13      	ldr	r3, [pc, #76]	; (8000804 <_sbrk+0x64>)
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	d102      	bne.n	80007c2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80007bc:	4b11      	ldr	r3, [pc, #68]	; (8000804 <_sbrk+0x64>)
 80007be:	4a12      	ldr	r2, [pc, #72]	; (8000808 <_sbrk+0x68>)
 80007c0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80007c2:	4b10      	ldr	r3, [pc, #64]	; (8000804 <_sbrk+0x64>)
 80007c4:	681a      	ldr	r2, [r3, #0]
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	4413      	add	r3, r2
 80007ca:	693a      	ldr	r2, [r7, #16]
 80007cc:	429a      	cmp	r2, r3
 80007ce:	d207      	bcs.n	80007e0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80007d0:	f000 fe8e 	bl	80014f0 <__errno>
 80007d4:	4603      	mov	r3, r0
 80007d6:	220c      	movs	r2, #12
 80007d8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80007da:	f04f 33ff 	mov.w	r3, #4294967295
 80007de:	e009      	b.n	80007f4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80007e0:	4b08      	ldr	r3, [pc, #32]	; (8000804 <_sbrk+0x64>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80007e6:	4b07      	ldr	r3, [pc, #28]	; (8000804 <_sbrk+0x64>)
 80007e8:	681a      	ldr	r2, [r3, #0]
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	4413      	add	r3, r2
 80007ee:	4a05      	ldr	r2, [pc, #20]	; (8000804 <_sbrk+0x64>)
 80007f0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80007f2:	68fb      	ldr	r3, [r7, #12]
}
 80007f4:	4618      	mov	r0, r3
 80007f6:	3718      	adds	r7, #24
 80007f8:	46bd      	mov	sp, r7
 80007fa:	bd80      	pop	{r7, pc}
 80007fc:	20018000 	.word	0x20018000
 8000800:	00000400 	.word	0x00000400
 8000804:	20000088 	.word	0x20000088
 8000808:	20000150 	.word	0x20000150

0800080c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800080c:	480d      	ldr	r0, [pc, #52]	; (8000844 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800080e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000810:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000814:	480c      	ldr	r0, [pc, #48]	; (8000848 <LoopForever+0x6>)
  ldr r1, =_edata
 8000816:	490d      	ldr	r1, [pc, #52]	; (800084c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000818:	4a0d      	ldr	r2, [pc, #52]	; (8000850 <LoopForever+0xe>)
  movs r3, #0
 800081a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800081c:	e002      	b.n	8000824 <LoopCopyDataInit>

0800081e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800081e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000820:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000822:	3304      	adds	r3, #4

08000824 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000824:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000826:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000828:	d3f9      	bcc.n	800081e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800082a:	4a0a      	ldr	r2, [pc, #40]	; (8000854 <LoopForever+0x12>)
  ldr r4, =_ebss
 800082c:	4c0a      	ldr	r4, [pc, #40]	; (8000858 <LoopForever+0x16>)
  movs r3, #0
 800082e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000830:	e001      	b.n	8000836 <LoopFillZerobss>

08000832 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000832:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000834:	3204      	adds	r2, #4

08000836 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000836:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000838:	d3fb      	bcc.n	8000832 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800083a:	f000 ff55 	bl	80016e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800083e:	f7ff fdb7 	bl	80003b0 <main>

08000842 <LoopForever>:

LoopForever:
    b LoopForever
 8000842:	e7fe      	b.n	8000842 <LoopForever>
  ldr   r0, =_estack
 8000844:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000848:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800084c:	2000006c 	.word	0x2000006c
  ldr r2, =_sidata
 8000850:	08002634 	.word	0x08002634
  ldr r2, =_sbss
 8000854:	2000006c 	.word	0x2000006c
  ldr r4, =_ebss
 8000858:	20000150 	.word	0x20000150

0800085c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800085c:	e7fe      	b.n	800085c <ADC1_2_IRQHandler>
	...

08000860 <GPIO_PeriCloclControl>:
* @Note 		- none
*
*/

void GPIO_PeriCloclControl(GPIO_RegDef_t* pGPIOx,uint8_t EnorDi)
{
 8000860:	b480      	push	{r7}
 8000862:	b083      	sub	sp, #12
 8000864:	af00      	add	r7, sp, #0
 8000866:	6078      	str	r0, [r7, #4]
 8000868:	460b      	mov	r3, r1
 800086a:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE){
 800086c:	78fb      	ldrb	r3, [r7, #3]
 800086e:	2b01      	cmp	r3, #1
 8000870:	d156      	bne.n	8000920 <GPIO_PeriCloclControl+0xc0>
		if(pGPIOx==GPIOA){
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000878:	d106      	bne.n	8000888 <GPIO_PeriCloclControl+0x28>
			GPIOA_PCLK_EN();
 800087a:	4b2c      	ldr	r3, [pc, #176]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 800087c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800087e:	4a2b      	ldr	r2, [pc, #172]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000880:	f043 0301 	orr.w	r3, r3, #1
 8000884:	64d3      	str	r3, [r2, #76]	; 0x4c
		}
		else{
		//Not a port
		}
	}
}
 8000886:	e04b      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOB){
 8000888:	687b      	ldr	r3, [r7, #4]
 800088a:	4a29      	ldr	r2, [pc, #164]	; (8000930 <GPIO_PeriCloclControl+0xd0>)
 800088c:	4293      	cmp	r3, r2
 800088e:	d106      	bne.n	800089e <GPIO_PeriCloclControl+0x3e>
			GPIOB_PCLK_EN();
 8000890:	4b26      	ldr	r3, [pc, #152]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000892:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000894:	4a25      	ldr	r2, [pc, #148]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000896:	f043 0302 	orr.w	r3, r3, #2
 800089a:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800089c:	e040      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOC){
 800089e:	687b      	ldr	r3, [r7, #4]
 80008a0:	4a24      	ldr	r2, [pc, #144]	; (8000934 <GPIO_PeriCloclControl+0xd4>)
 80008a2:	4293      	cmp	r3, r2
 80008a4:	d106      	bne.n	80008b4 <GPIO_PeriCloclControl+0x54>
			GPIOC_PCLK_EN();
 80008a6:	4b21      	ldr	r3, [pc, #132]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80008aa:	4a20      	ldr	r2, [pc, #128]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008ac:	f043 0304 	orr.w	r3, r3, #4
 80008b0:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80008b2:	e035      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOD){
 80008b4:	687b      	ldr	r3, [r7, #4]
 80008b6:	4a20      	ldr	r2, [pc, #128]	; (8000938 <GPIO_PeriCloclControl+0xd8>)
 80008b8:	4293      	cmp	r3, r2
 80008ba:	d106      	bne.n	80008ca <GPIO_PeriCloclControl+0x6a>
			GPIOD_PCLK_EN();
 80008bc:	4b1b      	ldr	r3, [pc, #108]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008be:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80008c0:	4a1a      	ldr	r2, [pc, #104]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008c2:	f043 0308 	orr.w	r3, r3, #8
 80008c6:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80008c8:	e02a      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOE){
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	4a1b      	ldr	r2, [pc, #108]	; (800093c <GPIO_PeriCloclControl+0xdc>)
 80008ce:	4293      	cmp	r3, r2
 80008d0:	d106      	bne.n	80008e0 <GPIO_PeriCloclControl+0x80>
			GPIOE_PCLK_EN();
 80008d2:	4b16      	ldr	r3, [pc, #88]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80008d6:	4a15      	ldr	r2, [pc, #84]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008d8:	f043 0310 	orr.w	r3, r3, #16
 80008dc:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80008de:	e01f      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOF){
 80008e0:	687b      	ldr	r3, [r7, #4]
 80008e2:	4a17      	ldr	r2, [pc, #92]	; (8000940 <GPIO_PeriCloclControl+0xe0>)
 80008e4:	4293      	cmp	r3, r2
 80008e6:	d106      	bne.n	80008f6 <GPIO_PeriCloclControl+0x96>
			GPIOF_PCLK_EN();
 80008e8:	4b10      	ldr	r3, [pc, #64]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008ea:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80008ec:	4a0f      	ldr	r2, [pc, #60]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 80008ee:	f043 0320 	orr.w	r3, r3, #32
 80008f2:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 80008f4:	e014      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOG){
 80008f6:	687b      	ldr	r3, [r7, #4]
 80008f8:	4a12      	ldr	r2, [pc, #72]	; (8000944 <GPIO_PeriCloclControl+0xe4>)
 80008fa:	4293      	cmp	r3, r2
 80008fc:	d106      	bne.n	800090c <GPIO_PeriCloclControl+0xac>
			GPIOG_PCLK_EN();
 80008fe:	4b0b      	ldr	r3, [pc, #44]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000900:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000902:	4a0a      	ldr	r2, [pc, #40]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000904:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000908:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 800090a:	e009      	b.n	8000920 <GPIO_PeriCloclControl+0xc0>
		else if(pGPIOx==GPIOH){
 800090c:	687b      	ldr	r3, [r7, #4]
 800090e:	4a0e      	ldr	r2, [pc, #56]	; (8000948 <GPIO_PeriCloclControl+0xe8>)
 8000910:	4293      	cmp	r3, r2
 8000912:	d105      	bne.n	8000920 <GPIO_PeriCloclControl+0xc0>
			GPIOH_PCLK_EN();
 8000914:	4b05      	ldr	r3, [pc, #20]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 8000916:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000918:	4a04      	ldr	r2, [pc, #16]	; (800092c <GPIO_PeriCloclControl+0xcc>)
 800091a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800091e:	64d3      	str	r3, [r2, #76]	; 0x4c
}
 8000920:	bf00      	nop
 8000922:	370c      	adds	r7, #12
 8000924:	46bd      	mov	sp, r7
 8000926:	bc80      	pop	{r7}
 8000928:	4770      	bx	lr
 800092a:	bf00      	nop
 800092c:	40021000 	.word	0x40021000
 8000930:	48000400 	.word	0x48000400
 8000934:	48000800 	.word	0x48000800
 8000938:	48000c00 	.word	0x48000c00
 800093c:	48001000 	.word	0x48001000
 8000940:	48001400 	.word	0x48001400
 8000944:	48001800 	.word	0x48001800
 8000948:	48001c00 	.word	0x48001c00

0800094c <GPIO_Init>:
* @return 		- none
*
* @Note 		- none
*
*/
void GPIO_Init(GPIO_Handle_t * pGPIO_Handle){
 800094c:	b480      	push	{r7}
 800094e:	b087      	sub	sp, #28
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]

	uint32_t temp=0;
 8000954:	2300      	movs	r3, #0
 8000956:	617b      	str	r3, [r7, #20]

	if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	795b      	ldrb	r3, [r3, #5]
 800095c:	2b03      	cmp	r3, #3
 800095e:	d822      	bhi.n	80009a6 <GPIO_Init+0x5a>
		temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000960:	687b      	ldr	r3, [r7, #4]
 8000962:	795b      	ldrb	r3, [r3, #5]
 8000964:	461a      	mov	r2, r3
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	791b      	ldrb	r3, [r3, #4]
 800096a:	005b      	lsls	r3, r3, #1
 800096c:	fa02 f303 	lsl.w	r3, r2, r3
 8000970:	617b      	str	r3, [r7, #20]
		pGPIO_Handle->pGPIOx->MODER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000972:	687b      	ldr	r3, [r7, #4]
 8000974:	681b      	ldr	r3, [r3, #0]
 8000976:	681a      	ldr	r2, [r3, #0]
 8000978:	687b      	ldr	r3, [r7, #4]
 800097a:	791b      	ldrb	r3, [r3, #4]
 800097c:	005b      	lsls	r3, r3, #1
 800097e:	2103      	movs	r1, #3
 8000980:	fa01 f303 	lsl.w	r3, r1, r3
 8000984:	43db      	mvns	r3, r3
 8000986:	4619      	mov	r1, r3
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	681b      	ldr	r3, [r3, #0]
 800098c:	400a      	ands	r2, r1
 800098e:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER|=temp;
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	681b      	ldr	r3, [r3, #0]
 8000994:	6819      	ldr	r1, [r3, #0]
 8000996:	687b      	ldr	r3, [r7, #4]
 8000998:	681b      	ldr	r3, [r3, #0]
 800099a:	697a      	ldr	r2, [r7, #20]
 800099c:	430a      	orrs	r2, r1
 800099e:	601a      	str	r2, [r3, #0]
		temp=0;
 80009a0:	2300      	movs	r3, #0
 80009a2:	617b      	str	r3, [r7, #20]
 80009a4:	e0d2      	b.n	8000b4c <GPIO_Init+0x200>

	}
	else{

		if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_FT){
 80009a6:	687b      	ldr	r3, [r7, #4]
 80009a8:	795b      	ldrb	r3, [r3, #5]
 80009aa:	2b04      	cmp	r3, #4
 80009ac:	d117      	bne.n	80009de <GPIO_Init+0x92>
			EXTI->FTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 80009ae:	4b4d      	ldr	r3, [pc, #308]	; (8000ae4 <GPIO_Init+0x198>)
 80009b0:	68db      	ldr	r3, [r3, #12]
 80009b2:	687a      	ldr	r2, [r7, #4]
 80009b4:	7912      	ldrb	r2, [r2, #4]
 80009b6:	4611      	mov	r1, r2
 80009b8:	2201      	movs	r2, #1
 80009ba:	408a      	lsls	r2, r1
 80009bc:	4611      	mov	r1, r2
 80009be:	4a49      	ldr	r2, [pc, #292]	; (8000ae4 <GPIO_Init+0x198>)
 80009c0:	430b      	orrs	r3, r1
 80009c2:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1 &= ~(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80009c4:	4b47      	ldr	r3, [pc, #284]	; (8000ae4 <GPIO_Init+0x198>)
 80009c6:	689b      	ldr	r3, [r3, #8]
 80009c8:	687a      	ldr	r2, [r7, #4]
 80009ca:	7912      	ldrb	r2, [r2, #4]
 80009cc:	4611      	mov	r1, r2
 80009ce:	2201      	movs	r2, #1
 80009d0:	408a      	lsls	r2, r1
 80009d2:	43d2      	mvns	r2, r2
 80009d4:	4611      	mov	r1, r2
 80009d6:	4a43      	ldr	r2, [pc, #268]	; (8000ae4 <GPIO_Init+0x198>)
 80009d8:	400b      	ands	r3, r1
 80009da:	6093      	str	r3, [r2, #8]
 80009dc:	e035      	b.n	8000a4a <GPIO_Init+0xfe>


		}
		else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RT){
 80009de:	687b      	ldr	r3, [r7, #4]
 80009e0:	795b      	ldrb	r3, [r3, #5]
 80009e2:	2b05      	cmp	r3, #5
 80009e4:	d117      	bne.n	8000a16 <GPIO_Init+0xca>
			EXTI->RTSR1 |= 1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 80009e6:	4b3f      	ldr	r3, [pc, #252]	; (8000ae4 <GPIO_Init+0x198>)
 80009e8:	689b      	ldr	r3, [r3, #8]
 80009ea:	687a      	ldr	r2, [r7, #4]
 80009ec:	7912      	ldrb	r2, [r2, #4]
 80009ee:	4611      	mov	r1, r2
 80009f0:	2201      	movs	r2, #1
 80009f2:	408a      	lsls	r2, r1
 80009f4:	4611      	mov	r1, r2
 80009f6:	4a3b      	ldr	r2, [pc, #236]	; (8000ae4 <GPIO_Init+0x198>)
 80009f8:	430b      	orrs	r3, r1
 80009fa:	6093      	str	r3, [r2, #8]
			EXTI->FTSR1 &= ~(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 80009fc:	4b39      	ldr	r3, [pc, #228]	; (8000ae4 <GPIO_Init+0x198>)
 80009fe:	68db      	ldr	r3, [r3, #12]
 8000a00:	687a      	ldr	r2, [r7, #4]
 8000a02:	7912      	ldrb	r2, [r2, #4]
 8000a04:	4611      	mov	r1, r2
 8000a06:	2201      	movs	r2, #1
 8000a08:	408a      	lsls	r2, r1
 8000a0a:	43d2      	mvns	r2, r2
 8000a0c:	4611      	mov	r1, r2
 8000a0e:	4a35      	ldr	r2, [pc, #212]	; (8000ae4 <GPIO_Init+0x198>)
 8000a10:	400b      	ands	r3, r1
 8000a12:	60d3      	str	r3, [r2, #12]
 8000a14:	e019      	b.n	8000a4a <GPIO_Init+0xfe>

		}
		else if(pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode==GPIO_MODE_IT_RFT){
 8000a16:	687b      	ldr	r3, [r7, #4]
 8000a18:	795b      	ldrb	r3, [r3, #5]
 8000a1a:	2b06      	cmp	r3, #6
 8000a1c:	d115      	bne.n	8000a4a <GPIO_Init+0xfe>
			EXTI->FTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 8000a1e:	4b31      	ldr	r3, [pc, #196]	; (8000ae4 <GPIO_Init+0x198>)
 8000a20:	68db      	ldr	r3, [r3, #12]
 8000a22:	687a      	ldr	r2, [r7, #4]
 8000a24:	7912      	ldrb	r2, [r2, #4]
 8000a26:	4611      	mov	r1, r2
 8000a28:	2201      	movs	r2, #1
 8000a2a:	408a      	lsls	r2, r1
 8000a2c:	4611      	mov	r1, r2
 8000a2e:	4a2d      	ldr	r2, [pc, #180]	; (8000ae4 <GPIO_Init+0x198>)
 8000a30:	430b      	orrs	r3, r1
 8000a32:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR1|=1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber;
 8000a34:	4b2b      	ldr	r3, [pc, #172]	; (8000ae4 <GPIO_Init+0x198>)
 8000a36:	689b      	ldr	r3, [r3, #8]
 8000a38:	687a      	ldr	r2, [r7, #4]
 8000a3a:	7912      	ldrb	r2, [r2, #4]
 8000a3c:	4611      	mov	r1, r2
 8000a3e:	2201      	movs	r2, #1
 8000a40:	408a      	lsls	r2, r1
 8000a42:	4611      	mov	r1, r2
 8000a44:	4a27      	ldr	r2, [pc, #156]	; (8000ae4 <GPIO_Init+0x198>)
 8000a46:	430b      	orrs	r3, r1
 8000a48:	6093      	str	r3, [r2, #8]
		}
		else{

		}

		temp=(GPIO_MODE_INPUT)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000a4a:	2300      	movs	r3, #0
 8000a4c:	617b      	str	r3, [r7, #20]
		pGPIO_Handle->pGPIOx->MODER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000a4e:	687b      	ldr	r3, [r7, #4]
 8000a50:	681b      	ldr	r3, [r3, #0]
 8000a52:	681a      	ldr	r2, [r3, #0]
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	791b      	ldrb	r3, [r3, #4]
 8000a58:	005b      	lsls	r3, r3, #1
 8000a5a:	2103      	movs	r1, #3
 8000a5c:	fa01 f303 	lsl.w	r3, r1, r3
 8000a60:	43db      	mvns	r3, r3
 8000a62:	4619      	mov	r1, r3
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	681b      	ldr	r3, [r3, #0]
 8000a68:	400a      	ands	r2, r1
 8000a6a:	601a      	str	r2, [r3, #0]
		pGPIO_Handle->pGPIOx->MODER|=temp;
 8000a6c:	687b      	ldr	r3, [r7, #4]
 8000a6e:	681b      	ldr	r3, [r3, #0]
 8000a70:	6819      	ldr	r1, [r3, #0]
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	681b      	ldr	r3, [r3, #0]
 8000a76:	697a      	ldr	r2, [r7, #20]
 8000a78:	430a      	orrs	r2, r1
 8000a7a:	601a      	str	r2, [r3, #0]
		temp=0;
 8000a7c:	2300      	movs	r3, #0
 8000a7e:	617b      	str	r3, [r7, #20]

		uint8_t portcode= GPIOBD_TO_PORT(pGPIO_Handle->pGPIOx);
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8000a88:	d03a      	beq.n	8000b00 <GPIO_Init+0x1b4>
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	681b      	ldr	r3, [r3, #0]
 8000a8e:	4a16      	ldr	r2, [pc, #88]	; (8000ae8 <GPIO_Init+0x19c>)
 8000a90:	4293      	cmp	r3, r2
 8000a92:	d024      	beq.n	8000ade <GPIO_Init+0x192>
 8000a94:	687b      	ldr	r3, [r7, #4]
 8000a96:	681b      	ldr	r3, [r3, #0]
 8000a98:	4a14      	ldr	r2, [pc, #80]	; (8000aec <GPIO_Init+0x1a0>)
 8000a9a:	4293      	cmp	r3, r2
 8000a9c:	d01d      	beq.n	8000ada <GPIO_Init+0x18e>
 8000a9e:	687b      	ldr	r3, [r7, #4]
 8000aa0:	681b      	ldr	r3, [r3, #0]
 8000aa2:	4a13      	ldr	r2, [pc, #76]	; (8000af0 <GPIO_Init+0x1a4>)
 8000aa4:	4293      	cmp	r3, r2
 8000aa6:	d016      	beq.n	8000ad6 <GPIO_Init+0x18a>
 8000aa8:	687b      	ldr	r3, [r7, #4]
 8000aaa:	681b      	ldr	r3, [r3, #0]
 8000aac:	4a11      	ldr	r2, [pc, #68]	; (8000af4 <GPIO_Init+0x1a8>)
 8000aae:	4293      	cmp	r3, r2
 8000ab0:	d00f      	beq.n	8000ad2 <GPIO_Init+0x186>
 8000ab2:	687b      	ldr	r3, [r7, #4]
 8000ab4:	681b      	ldr	r3, [r3, #0]
 8000ab6:	4a10      	ldr	r2, [pc, #64]	; (8000af8 <GPIO_Init+0x1ac>)
 8000ab8:	4293      	cmp	r3, r2
 8000aba:	d008      	beq.n	8000ace <GPIO_Init+0x182>
 8000abc:	687b      	ldr	r3, [r7, #4]
 8000abe:	681b      	ldr	r3, [r3, #0]
 8000ac0:	4a0e      	ldr	r2, [pc, #56]	; (8000afc <GPIO_Init+0x1b0>)
 8000ac2:	4293      	cmp	r3, r2
 8000ac4:	d101      	bne.n	8000aca <GPIO_Init+0x17e>
 8000ac6:	2306      	movs	r3, #6
 8000ac8:	e01b      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000aca:	2307      	movs	r3, #7
 8000acc:	e019      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ace:	2305      	movs	r3, #5
 8000ad0:	e017      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ad2:	2304      	movs	r3, #4
 8000ad4:	e015      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ad6:	2303      	movs	r3, #3
 8000ad8:	e013      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ada:	2302      	movs	r3, #2
 8000adc:	e011      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ade:	2301      	movs	r3, #1
 8000ae0:	e00f      	b.n	8000b02 <GPIO_Init+0x1b6>
 8000ae2:	bf00      	nop
 8000ae4:	40010400 	.word	0x40010400
 8000ae8:	48000400 	.word	0x48000400
 8000aec:	48000800 	.word	0x48000800
 8000af0:	48000c00 	.word	0x48000c00
 8000af4:	48001000 	.word	0x48001000
 8000af8:	48001400 	.word	0x48001400
 8000afc:	48001800 	.word	0x48001800
 8000b00:	2300      	movs	r3, #0
 8000b02:	74fb      	strb	r3, [r7, #19]
		uint8_t index=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/4;
 8000b04:	687b      	ldr	r3, [r7, #4]
 8000b06:	791b      	ldrb	r3, [r3, #4]
 8000b08:	089b      	lsrs	r3, r3, #2
 8000b0a:	74bb      	strb	r3, [r7, #18]
		uint8_t temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)%4;
 8000b0c:	687b      	ldr	r3, [r7, #4]
 8000b0e:	791b      	ldrb	r3, [r3, #4]
 8000b10:	f003 0303 	and.w	r3, r3, #3
 8000b14:	747b      	strb	r3, [r7, #17]

		SYSCFG->EXTICR_1_4[index]=portcode<<(temp*4);
 8000b16:	7cfa      	ldrb	r2, [r7, #19]
 8000b18:	7c7b      	ldrb	r3, [r7, #17]
 8000b1a:	009b      	lsls	r3, r3, #2
 8000b1c:	fa02 f103 	lsl.w	r1, r2, r3
 8000b20:	4a58      	ldr	r2, [pc, #352]	; (8000c84 <GPIO_Init+0x338>)
 8000b22:	7cbb      	ldrb	r3, [r7, #18]
 8000b24:	3302      	adds	r3, #2
 8000b26:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		SYSCFG_PCLK_EN();
 8000b2a:	4b57      	ldr	r3, [pc, #348]	; (8000c88 <GPIO_Init+0x33c>)
 8000b2c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000b2e:	4a56      	ldr	r2, [pc, #344]	; (8000c88 <GPIO_Init+0x33c>)
 8000b30:	f043 0301 	orr.w	r3, r3, #1
 8000b34:	6613      	str	r3, [r2, #96]	; 0x60

		EXTI->IMR1|=(1<<pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber);
 8000b36:	4b55      	ldr	r3, [pc, #340]	; (8000c8c <GPIO_Init+0x340>)
 8000b38:	681b      	ldr	r3, [r3, #0]
 8000b3a:	687a      	ldr	r2, [r7, #4]
 8000b3c:	7912      	ldrb	r2, [r2, #4]
 8000b3e:	4611      	mov	r1, r2
 8000b40:	2201      	movs	r2, #1
 8000b42:	408a      	lsls	r2, r1
 8000b44:	4611      	mov	r1, r2
 8000b46:	4a51      	ldr	r2, [pc, #324]	; (8000c8c <GPIO_Init+0x340>)
 8000b48:	430b      	orrs	r3, r1
 8000b4a:	6013      	str	r3, [r2, #0]



	}

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinSpeed)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000b4c:	687b      	ldr	r3, [r7, #4]
 8000b4e:	799b      	ldrb	r3, [r3, #6]
 8000b50:	461a      	mov	r2, r3
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	791b      	ldrb	r3, [r3, #4]
 8000b56:	005b      	lsls	r3, r3, #1
 8000b58:	fa02 f303 	lsl.w	r3, r2, r3
 8000b5c:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OSPEEDER&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000b5e:	687b      	ldr	r3, [r7, #4]
 8000b60:	681b      	ldr	r3, [r3, #0]
 8000b62:	689a      	ldr	r2, [r3, #8]
 8000b64:	687b      	ldr	r3, [r7, #4]
 8000b66:	791b      	ldrb	r3, [r3, #4]
 8000b68:	005b      	lsls	r3, r3, #1
 8000b6a:	2103      	movs	r1, #3
 8000b6c:	fa01 f303 	lsl.w	r3, r1, r3
 8000b70:	43db      	mvns	r3, r3
 8000b72:	4619      	mov	r1, r3
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	681b      	ldr	r3, [r3, #0]
 8000b78:	400a      	ands	r2, r1
 8000b7a:	609a      	str	r2, [r3, #8]
	pGPIO_Handle->pGPIOx->OSPEEDER|=temp;
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	681b      	ldr	r3, [r3, #0]
 8000b80:	6899      	ldr	r1, [r3, #8]
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	681b      	ldr	r3, [r3, #0]
 8000b86:	697a      	ldr	r2, [r7, #20]
 8000b88:	430a      	orrs	r2, r1
 8000b8a:	609a      	str	r2, [r3, #8]
	temp=0;
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	617b      	str	r3, [r7, #20]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_OPType)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000b90:	687b      	ldr	r3, [r7, #4]
 8000b92:	7a1b      	ldrb	r3, [r3, #8]
 8000b94:	461a      	mov	r2, r3
 8000b96:	687b      	ldr	r3, [r7, #4]
 8000b98:	791b      	ldrb	r3, [r3, #4]
 8000b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8000b9e:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OTYPER&=~((0x1)<<((pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000ba0:	687b      	ldr	r3, [r7, #4]
 8000ba2:	681b      	ldr	r3, [r3, #0]
 8000ba4:	685a      	ldr	r2, [r3, #4]
 8000ba6:	687b      	ldr	r3, [r7, #4]
 8000ba8:	791b      	ldrb	r3, [r3, #4]
 8000baa:	4619      	mov	r1, r3
 8000bac:	2301      	movs	r3, #1
 8000bae:	408b      	lsls	r3, r1
 8000bb0:	43db      	mvns	r3, r3
 8000bb2:	4619      	mov	r1, r3
 8000bb4:	687b      	ldr	r3, [r7, #4]
 8000bb6:	681b      	ldr	r3, [r3, #0]
 8000bb8:	400a      	ands	r2, r1
 8000bba:	605a      	str	r2, [r3, #4]
	pGPIO_Handle->pGPIOx->OTYPER|=temp;
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	6859      	ldr	r1, [r3, #4]
 8000bc2:	687b      	ldr	r3, [r7, #4]
 8000bc4:	681b      	ldr	r3, [r3, #0]
 8000bc6:	697a      	ldr	r2, [r7, #20]
 8000bc8:	430a      	orrs	r2, r1
 8000bca:	605a      	str	r2, [r3, #4]
	temp=0;
 8000bcc:	2300      	movs	r3, #0
 8000bce:	617b      	str	r3, [r7, #20]

	temp=(pGPIO_Handle->GPIO_PinConfig.GPIO_PinPuPdControl)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
 8000bd0:	687b      	ldr	r3, [r7, #4]
 8000bd2:	79db      	ldrb	r3, [r3, #7]
 8000bd4:	461a      	mov	r2, r3
 8000bd6:	687b      	ldr	r3, [r7, #4]
 8000bd8:	791b      	ldrb	r3, [r3, #4]
 8000bda:	005b      	lsls	r3, r3, #1
 8000bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8000be0:	617b      	str	r3, [r7, #20]
	pGPIO_Handle->pGPIOx->OPUPDR&=~((0x3)<<(2*(pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber)));
 8000be2:	687b      	ldr	r3, [r7, #4]
 8000be4:	681b      	ldr	r3, [r3, #0]
 8000be6:	68da      	ldr	r2, [r3, #12]
 8000be8:	687b      	ldr	r3, [r7, #4]
 8000bea:	791b      	ldrb	r3, [r3, #4]
 8000bec:	005b      	lsls	r3, r3, #1
 8000bee:	2103      	movs	r1, #3
 8000bf0:	fa01 f303 	lsl.w	r3, r1, r3
 8000bf4:	43db      	mvns	r3, r3
 8000bf6:	4619      	mov	r1, r3
 8000bf8:	687b      	ldr	r3, [r7, #4]
 8000bfa:	681b      	ldr	r3, [r3, #0]
 8000bfc:	400a      	ands	r2, r1
 8000bfe:	60da      	str	r2, [r3, #12]
	pGPIO_Handle->pGPIOx->OPUPDR|=temp;
 8000c00:	687b      	ldr	r3, [r7, #4]
 8000c02:	681b      	ldr	r3, [r3, #0]
 8000c04:	68d9      	ldr	r1, [r3, #12]
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	681b      	ldr	r3, [r3, #0]
 8000c0a:	697a      	ldr	r2, [r7, #20]
 8000c0c:	430a      	orrs	r2, r1
 8000c0e:	60da      	str	r2, [r3, #12]
	temp=0;
 8000c10:	2300      	movs	r3, #0
 8000c12:	617b      	str	r3, [r7, #20]

	uint8_t temp1=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000c14:	687b      	ldr	r3, [r7, #4]
 8000c16:	791b      	ldrb	r3, [r3, #4]
 8000c18:	08db      	lsrs	r3, r3, #3
 8000c1a:	743b      	strb	r3, [r7, #16]
	uint8_t temp2=pGPIO_Handle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000c1c:	687b      	ldr	r3, [r7, #4]
 8000c1e:	791b      	ldrb	r3, [r3, #4]
 8000c20:	f003 0307 	and.w	r3, r3, #7
 8000c24:	73fb      	strb	r3, [r7, #15]

	pGPIO_Handle->pGPIOx->AFR[temp1]&=~((0xF)<<(4*temp2));
 8000c26:	687b      	ldr	r3, [r7, #4]
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	7c3a      	ldrb	r2, [r7, #16]
 8000c2c:	3208      	adds	r2, #8
 8000c2e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000c32:	7bfb      	ldrb	r3, [r7, #15]
 8000c34:	009b      	lsls	r3, r3, #2
 8000c36:	220f      	movs	r2, #15
 8000c38:	fa02 f303 	lsl.w	r3, r2, r3
 8000c3c:	43db      	mvns	r3, r3
 8000c3e:	4618      	mov	r0, r3
 8000c40:	687b      	ldr	r3, [r7, #4]
 8000c42:	681b      	ldr	r3, [r3, #0]
 8000c44:	7c3a      	ldrb	r2, [r7, #16]
 8000c46:	4001      	ands	r1, r0
 8000c48:	3208      	adds	r2, #8
 8000c4a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	pGPIO_Handle->pGPIOx->AFR[temp1]|=((pGPIO_Handle->GPIO_PinConfig.GPIO_PinAltFuncMode)<<(4*temp2));
 8000c4e:	687b      	ldr	r3, [r7, #4]
 8000c50:	681b      	ldr	r3, [r3, #0]
 8000c52:	7c3a      	ldrb	r2, [r7, #16]
 8000c54:	3208      	adds	r2, #8
 8000c56:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	7a5b      	ldrb	r3, [r3, #9]
 8000c5e:	461a      	mov	r2, r3
 8000c60:	7bfb      	ldrb	r3, [r7, #15]
 8000c62:	009b      	lsls	r3, r3, #2
 8000c64:	fa02 f303 	lsl.w	r3, r2, r3
 8000c68:	4618      	mov	r0, r3
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	7c3a      	ldrb	r2, [r7, #16]
 8000c70:	4301      	orrs	r1, r0
 8000c72:	3208      	adds	r2, #8
 8000c74:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

}
 8000c78:	bf00      	nop
 8000c7a:	371c      	adds	r7, #28
 8000c7c:	46bd      	mov	sp, r7
 8000c7e:	bc80      	pop	{r7}
 8000c80:	4770      	bx	lr
 8000c82:	bf00      	nop
 8000c84:	40010000 	.word	0x40010000
 8000c88:	40021000 	.word	0x40021000
 8000c8c:	40010400 	.word	0x40010400

08000c90 <GPIO_ReadFromInputPin>:
* @return 		- Value of the PinNumber of port
*
* @Note 		- none
*
*/
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t* pGPIOx, uint8_t PinNumber){
 8000c90:	b480      	push	{r7}
 8000c92:	b085      	sub	sp, #20
 8000c94:	af00      	add	r7, sp, #0
 8000c96:	6078      	str	r0, [r7, #4]
 8000c98:	460b      	mov	r3, r1
 8000c9a:	70fb      	strb	r3, [r7, #3]

	uint8_t value;

	value= (uint8_t)((pGPIOx->IDR)>>PinNumber) & 0x00000001;
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	691a      	ldr	r2, [r3, #16]
 8000ca0:	78fb      	ldrb	r3, [r7, #3]
 8000ca2:	fa22 f303 	lsr.w	r3, r2, r3
 8000ca6:	b2db      	uxtb	r3, r3
 8000ca8:	f003 0301 	and.w	r3, r3, #1
 8000cac:	73fb      	strb	r3, [r7, #15]

	return value;
 8000cae:	7bfb      	ldrb	r3, [r7, #15]

}
 8000cb0:	4618      	mov	r0, r3
 8000cb2:	3714      	adds	r7, #20
 8000cb4:	46bd      	mov	sp, r7
 8000cb6:	bc80      	pop	{r7}
 8000cb8:	4770      	bx	lr
	...

08000cbc <SPI_PeriCloclControl>:
 *      Author: franc
 */

#include "stm32l476xx_spi_driver.h"

void SPI_PeriCloclControl(SPI_RegDef_t* pSPIx,uint8_t EnorDi){
 8000cbc:	b480      	push	{r7}
 8000cbe:	b083      	sub	sp, #12
 8000cc0:	af00      	add	r7, sp, #0
 8000cc2:	6078      	str	r0, [r7, #4]
 8000cc4:	460b      	mov	r3, r1
 8000cc6:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE){
 8000cc8:	78fb      	ldrb	r3, [r7, #3]
 8000cca:	2b01      	cmp	r3, #1
 8000ccc:	d11f      	bne.n	8000d0e <SPI_PeriCloclControl+0x52>
			if(pSPIx==SPI1){
 8000cce:	687b      	ldr	r3, [r7, #4]
 8000cd0:	4a11      	ldr	r2, [pc, #68]	; (8000d18 <SPI_PeriCloclControl+0x5c>)
 8000cd2:	4293      	cmp	r3, r2
 8000cd4:	d106      	bne.n	8000ce4 <SPI_PeriCloclControl+0x28>
				SPI1_PLCK_EN();
 8000cd6:	4b11      	ldr	r3, [pc, #68]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000cd8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8000cda:	4a10      	ldr	r2, [pc, #64]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000cdc:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000ce0:	6613      	str	r3, [r2, #96]	; 0x60
			}
			else{
			//Not a port
			}
		}
}
 8000ce2:	e014      	b.n	8000d0e <SPI_PeriCloclControl+0x52>
			else if(pSPIx==SPI2){
 8000ce4:	687b      	ldr	r3, [r7, #4]
 8000ce6:	4a0e      	ldr	r2, [pc, #56]	; (8000d20 <SPI_PeriCloclControl+0x64>)
 8000ce8:	4293      	cmp	r3, r2
 8000cea:	d106      	bne.n	8000cfa <SPI_PeriCloclControl+0x3e>
				SPI2_PCLK_EN();
 8000cec:	4b0b      	ldr	r3, [pc, #44]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000cee:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000cf0:	4a0a      	ldr	r2, [pc, #40]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000cf2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000cf6:	6593      	str	r3, [r2, #88]	; 0x58
}
 8000cf8:	e009      	b.n	8000d0e <SPI_PeriCloclControl+0x52>
			else if(pSPIx==SPI3){
 8000cfa:	687b      	ldr	r3, [r7, #4]
 8000cfc:	4a09      	ldr	r2, [pc, #36]	; (8000d24 <SPI_PeriCloclControl+0x68>)
 8000cfe:	4293      	cmp	r3, r2
 8000d00:	d105      	bne.n	8000d0e <SPI_PeriCloclControl+0x52>
				SPI3_PCLK_EN();
 8000d02:	4b06      	ldr	r3, [pc, #24]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000d04:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000d06:	4a05      	ldr	r2, [pc, #20]	; (8000d1c <SPI_PeriCloclControl+0x60>)
 8000d08:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000d0c:	6593      	str	r3, [r2, #88]	; 0x58
}
 8000d0e:	bf00      	nop
 8000d10:	370c      	adds	r7, #12
 8000d12:	46bd      	mov	sp, r7
 8000d14:	bc80      	pop	{r7}
 8000d16:	4770      	bx	lr
 8000d18:	40013000 	.word	0x40013000
 8000d1c:	40021000 	.word	0x40021000
 8000d20:	40003800 	.word	0x40003800
 8000d24:	40003c00 	.word	0x40003c00

08000d28 <SPI_Init>:
/*Init De-Init*/
void SPI_Init(SPI_Handle_t * pSPI_Handle){
 8000d28:	b480      	push	{r7}
 8000d2a:	b085      	sub	sp, #20
 8000d2c:	af00      	add	r7, sp, #0
 8000d2e:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000d30:	2300      	movs	r3, #0
 8000d32:	60fb      	str	r3, [r7, #12]

	temp|=((pSPI_Handle->SPI_Config.SPI_DeviceMode) << 2);
 8000d34:	687b      	ldr	r3, [r7, #4]
 8000d36:	791b      	ldrb	r3, [r3, #4]
 8000d38:	009b      	lsls	r3, r3, #2
 8000d3a:	461a      	mov	r2, r3
 8000d3c:	68fb      	ldr	r3, [r7, #12]
 8000d3e:	4313      	orrs	r3, r2
 8000d40:	60fb      	str	r3, [r7, #12]

	if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_FD){
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	795b      	ldrb	r3, [r3, #5]
 8000d46:	2b01      	cmp	r3, #1
 8000d48:	d104      	bne.n	8000d54 <SPI_Init+0x2c>
		temp&=~(1<<15);
 8000d4a:	68fb      	ldr	r3, [r7, #12]
 8000d4c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000d50:	60fb      	str	r3, [r7, #12]
 8000d52:	e014      	b.n	8000d7e <SPI_Init+0x56>
	}else if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_HD){
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	795b      	ldrb	r3, [r3, #5]
 8000d58:	2b02      	cmp	r3, #2
 8000d5a:	d104      	bne.n	8000d66 <SPI_Init+0x3e>
		temp|=(1<<15);
 8000d5c:	68fb      	ldr	r3, [r7, #12]
 8000d5e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000d62:	60fb      	str	r3, [r7, #12]
 8000d64:	e00b      	b.n	8000d7e <SPI_Init+0x56>

	}else if(pSPI_Handle->SPI_Config.SPI_BusConfig==SPI_BCONFIG_S_RX){
 8000d66:	687b      	ldr	r3, [r7, #4]
 8000d68:	795b      	ldrb	r3, [r3, #5]
 8000d6a:	2b03      	cmp	r3, #3
 8000d6c:	d107      	bne.n	8000d7e <SPI_Init+0x56>
		temp&=~(1<<15);
 8000d6e:	68fb      	ldr	r3, [r7, #12]
 8000d70:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000d74:	60fb      	str	r3, [r7, #12]
		temp|=(1<<10);
 8000d76:	68fb      	ldr	r3, [r7, #12]
 8000d78:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d7c:	60fb      	str	r3, [r7, #12]
	}
	else{

	}
	temp|=((pSPI_Handle->SPI_Config.SPI_CPHA) << 0);
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	79db      	ldrb	r3, [r3, #7]
 8000d82:	461a      	mov	r2, r3
 8000d84:	68fb      	ldr	r3, [r7, #12]
 8000d86:	4313      	orrs	r3, r2
 8000d88:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_CPOL) << 1);
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	7a1b      	ldrb	r3, [r3, #8]
 8000d8e:	005b      	lsls	r3, r3, #1
 8000d90:	461a      	mov	r2, r3
 8000d92:	68fb      	ldr	r3, [r7, #12]
 8000d94:	4313      	orrs	r3, r2
 8000d96:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_Speed) << 3);
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	7a9b      	ldrb	r3, [r3, #10]
 8000d9c:	00db      	lsls	r3, r3, #3
 8000d9e:	461a      	mov	r2, r3
 8000da0:	68fb      	ldr	r3, [r7, #12]
 8000da2:	4313      	orrs	r3, r2
 8000da4:	60fb      	str	r3, [r7, #12]
	temp|=((pSPI_Handle->SPI_Config.SPI_SSM) << 9);
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	7a5b      	ldrb	r3, [r3, #9]
 8000daa:	025b      	lsls	r3, r3, #9
 8000dac:	461a      	mov	r2, r3
 8000dae:	68fb      	ldr	r3, [r7, #12]
 8000db0:	4313      	orrs	r3, r2
 8000db2:	60fb      	str	r3, [r7, #12]
	pSPI_Handle->pSPIx->CR1&=~(0x7FFF);
 8000db4:	687b      	ldr	r3, [r7, #4]
 8000db6:	681b      	ldr	r3, [r3, #0]
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	687a      	ldr	r2, [r7, #4]
 8000dbc:	6812      	ldr	r2, [r2, #0]
 8000dbe:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8000dc2:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8000dc6:	6013      	str	r3, [r2, #0]
	pSPI_Handle->pSPIx->CR1=temp;
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	68fa      	ldr	r2, [r7, #12]
 8000dce:	601a      	str	r2, [r3, #0]

	pSPI_Handle->pSPIx->CR2&=~(0x7FFF);
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	681b      	ldr	r3, [r3, #0]
 8000dd4:	685b      	ldr	r3, [r3, #4]
 8000dd6:	687a      	ldr	r2, [r7, #4]
 8000dd8:	6812      	ldr	r2, [r2, #0]
 8000dda:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8000dde:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8000de2:	6053      	str	r3, [r2, #4]
	pSPI_Handle->pSPIx->CR2=0x1700;
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	f44f 52b8 	mov.w	r2, #5888	; 0x1700
 8000dec:	605a      	str	r2, [r3, #4]
}
 8000dee:	bf00      	nop
 8000df0:	3714      	adds	r7, #20
 8000df2:	46bd      	mov	sp, r7
 8000df4:	bc80      	pop	{r7}
 8000df6:	4770      	bx	lr

08000df8 <SPI_Control>:

}

/*Enable SPI*/

void SPI_Control(SPI_RegDef_t* pSPIx, uint8_t EnorDi){
 8000df8:	b480      	push	{r7}
 8000dfa:	b083      	sub	sp, #12
 8000dfc:	af00      	add	r7, sp, #0
 8000dfe:	6078      	str	r0, [r7, #4]
 8000e00:	460b      	mov	r3, r1
 8000e02:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE ){
 8000e04:	78fb      	ldrb	r3, [r7, #3]
 8000e06:	2b01      	cmp	r3, #1
 8000e08:	d106      	bne.n	8000e18 <SPI_Control+0x20>
		pSPIx->CR1|=(1<<SPI_BP_SPE);
 8000e0a:	687b      	ldr	r3, [r7, #4]
 8000e0c:	681b      	ldr	r3, [r3, #0]
 8000e0e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	601a      	str	r2, [r3, #0]
	}
	else{
		pSPIx->CR1&=~(1<<SPI_BP_SPE);
	}

}
 8000e16:	e005      	b.n	8000e24 <SPI_Control+0x2c>
		pSPIx->CR1&=~(1<<SPI_BP_SPE);
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	681b      	ldr	r3, [r3, #0]
 8000e1c:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	601a      	str	r2, [r3, #0]
}
 8000e24:	bf00      	nop
 8000e26:	370c      	adds	r7, #12
 8000e28:	46bd      	mov	sp, r7
 8000e2a:	bc80      	pop	{r7}
 8000e2c:	4770      	bx	lr

08000e2e <SPI_SSOE_Control>:
	else{
		pSPIx->CR1&=~(1<<SPI_BP_SSI);
	}

}
void SPI_SSOE_Control(SPI_RegDef_t* pSPIx, uint8_t EnorDi){
 8000e2e:	b480      	push	{r7}
 8000e30:	b083      	sub	sp, #12
 8000e32:	af00      	add	r7, sp, #0
 8000e34:	6078      	str	r0, [r7, #4]
 8000e36:	460b      	mov	r3, r1
 8000e38:	70fb      	strb	r3, [r7, #3]
	if (EnorDi==ENABLE ){
 8000e3a:	78fb      	ldrb	r3, [r7, #3]
 8000e3c:	2b01      	cmp	r3, #1
 8000e3e:	d106      	bne.n	8000e4e <SPI_SSOE_Control+0x20>
			pSPIx->CR2|=(1<<SPI_BP_SSOE);
 8000e40:	687b      	ldr	r3, [r7, #4]
 8000e42:	685b      	ldr	r3, [r3, #4]
 8000e44:	f043 0204 	orr.w	r2, r3, #4
 8000e48:	687b      	ldr	r3, [r7, #4]
 8000e4a:	605a      	str	r2, [r3, #4]
		}
		else{
			pSPIx->CR2&=~(1<<SPI_BP_SSOE);
		}

}
 8000e4c:	e005      	b.n	8000e5a <SPI_SSOE_Control+0x2c>
			pSPIx->CR2&=~(1<<SPI_BP_SSOE);
 8000e4e:	687b      	ldr	r3, [r7, #4]
 8000e50:	685b      	ldr	r3, [r3, #4]
 8000e52:	f023 0204 	bic.w	r2, r3, #4
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	605a      	str	r2, [r3, #4]
}
 8000e5a:	bf00      	nop
 8000e5c:	370c      	adds	r7, #12
 8000e5e:	46bd      	mov	sp, r7
 8000e60:	bc80      	pop	{r7}
 8000e62:	4770      	bx	lr

08000e64 <GetFlagStatus>:

/*Data send and Receive*/

uint8_t GetFlagStatus(SPI_RegDef_t* pSPIx, uint32_t FLAGNAME){
 8000e64:	b480      	push	{r7}
 8000e66:	b083      	sub	sp, #12
 8000e68:	af00      	add	r7, sp, #0
 8000e6a:	6078      	str	r0, [r7, #4]
 8000e6c:	6039      	str	r1, [r7, #0]
	if((pSPIx->SR & (1<<FLAGNAME))>0){
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	689b      	ldr	r3, [r3, #8]
 8000e72:	2101      	movs	r1, #1
 8000e74:	683a      	ldr	r2, [r7, #0]
 8000e76:	fa01 f202 	lsl.w	r2, r1, r2
 8000e7a:	4013      	ands	r3, r2
 8000e7c:	2b00      	cmp	r3, #0
 8000e7e:	d001      	beq.n	8000e84 <GetFlagStatus+0x20>
		return FLAG_SET;
 8000e80:	2301      	movs	r3, #1
 8000e82:	e000      	b.n	8000e86 <GetFlagStatus+0x22>
	}
	else{
		return FLAG_RESET;
 8000e84:	2300      	movs	r3, #0
	}
}
 8000e86:	4618      	mov	r0, r3
 8000e88:	370c      	adds	r7, #12
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bc80      	pop	{r7}
 8000e8e:	4770      	bx	lr

08000e90 <SPI_SendData>:

void SPI_SendData(SPI_RegDef_t* pSPIx, uint8_t* pTXBuffer, uint32_t len){
 8000e90:	b580      	push	{r7, lr}
 8000e92:	b084      	sub	sp, #16
 8000e94:	af00      	add	r7, sp, #0
 8000e96:	60f8      	str	r0, [r7, #12]
 8000e98:	60b9      	str	r1, [r7, #8]
 8000e9a:	607a      	str	r2, [r7, #4]
	while(len>0){
 8000e9c:	e028      	b.n	8000ef0 <SPI_SendData+0x60>
		while(GetFlagStatus(pSPIx,SPI_BP_TXE) == FLAG_RESET);
 8000e9e:	bf00      	nop
 8000ea0:	2101      	movs	r1, #1
 8000ea2:	68f8      	ldr	r0, [r7, #12]
 8000ea4:	f7ff ffde 	bl	8000e64 <GetFlagStatus>
 8000ea8:	4603      	mov	r3, r0
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d0f8      	beq.n	8000ea0 <SPI_SendData+0x10>
		if((pSPIx->CR2 & (0xF<<8))== 0x0F00){
 8000eae:	68fb      	ldr	r3, [r7, #12]
 8000eb0:	685b      	ldr	r3, [r3, #4]
 8000eb2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8000eb6:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8000eba:	d10e      	bne.n	8000eda <SPI_SendData+0x4a>
			pSPIx->DR=*((uint16_t *)pTXBuffer);
 8000ebc:	68bb      	ldr	r3, [r7, #8]
 8000ebe:	881b      	ldrh	r3, [r3, #0]
 8000ec0:	461a      	mov	r2, r3
 8000ec2:	68fb      	ldr	r3, [r7, #12]
 8000ec4:	60da      	str	r2, [r3, #12]
			len--;
 8000ec6:	687b      	ldr	r3, [r7, #4]
 8000ec8:	3b01      	subs	r3, #1
 8000eca:	607b      	str	r3, [r7, #4]
			len--;
 8000ecc:	687b      	ldr	r3, [r7, #4]
 8000ece:	3b01      	subs	r3, #1
 8000ed0:	607b      	str	r3, [r7, #4]
			(uint16_t *)pTXBuffer++;
 8000ed2:	68bb      	ldr	r3, [r7, #8]
 8000ed4:	3301      	adds	r3, #1
 8000ed6:	60bb      	str	r3, [r7, #8]
 8000ed8:	e00a      	b.n	8000ef0 <SPI_SendData+0x60>
		}
		else{
			*((uint8_t *)&(pSPIx->DR))=*((uint8_t *)pTXBuffer);
 8000eda:	68fb      	ldr	r3, [r7, #12]
 8000edc:	330c      	adds	r3, #12
 8000ede:	68ba      	ldr	r2, [r7, #8]
 8000ee0:	7812      	ldrb	r2, [r2, #0]
 8000ee2:	701a      	strb	r2, [r3, #0]
			len--;
 8000ee4:	687b      	ldr	r3, [r7, #4]
 8000ee6:	3b01      	subs	r3, #1
 8000ee8:	607b      	str	r3, [r7, #4]
			pTXBuffer++;
 8000eea:	68bb      	ldr	r3, [r7, #8]
 8000eec:	3301      	adds	r3, #1
 8000eee:	60bb      	str	r3, [r7, #8]
	while(len>0){
 8000ef0:	687b      	ldr	r3, [r7, #4]
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	d1d3      	bne.n	8000e9e <SPI_SendData+0xe>
		}

	}
	SPI_CLR_OVR(pSPIx);
 8000ef6:	68f8      	ldr	r0, [r7, #12]
 8000ef8:	f000 f804 	bl	8000f04 <SPI_CLR_OVR>

}
 8000efc:	bf00      	nop
 8000efe:	3710      	adds	r7, #16
 8000f00:	46bd      	mov	sp, r7
 8000f02:	bd80      	pop	{r7, pc}

08000f04 <SPI_CLR_OVR>:
void SPI_CLR_OVR(SPI_RegDef_t* pSPIx){
 8000f04:	b580      	push	{r7, lr}
 8000f06:	b084      	sub	sp, #16
 8000f08:	af00      	add	r7, sp, #0
 8000f0a:	6078      	str	r0, [r7, #4]
	while(GetFlagStatus(pSPIx,SPI_BP_OVR) == FLAG_SET){
 8000f0c:	e005      	b.n	8000f1a <SPI_CLR_OVR+0x16>
		uint32_t data_register=pSPIx->DR;
 8000f0e:	687b      	ldr	r3, [r7, #4]
 8000f10:	68db      	ldr	r3, [r3, #12]
 8000f12:	60fb      	str	r3, [r7, #12]
		uint32_t status_register=pSPIx->SR;
 8000f14:	687b      	ldr	r3, [r7, #4]
 8000f16:	689b      	ldr	r3, [r3, #8]
 8000f18:	60bb      	str	r3, [r7, #8]
	while(GetFlagStatus(pSPIx,SPI_BP_OVR) == FLAG_SET){
 8000f1a:	2106      	movs	r1, #6
 8000f1c:	6878      	ldr	r0, [r7, #4]
 8000f1e:	f7ff ffa1 	bl	8000e64 <GetFlagStatus>
 8000f22:	4603      	mov	r3, r0
 8000f24:	2b01      	cmp	r3, #1
 8000f26:	d0f2      	beq.n	8000f0e <SPI_CLR_OVR+0xa>
	}

}
 8000f28:	bf00      	nop
 8000f2a:	bf00      	nop
 8000f2c:	3710      	adds	r7, #16
 8000f2e:	46bd      	mov	sp, r7
 8000f30:	bd80      	pop	{r7, pc}

08000f32 <SPI_ReceiveData>:
void SPI_ReceiveData(SPI_RegDef_t* pSPIx, uint8_t* pRXBuffer, uint32_t len){
 8000f32:	b580      	push	{r7, lr}
 8000f34:	b084      	sub	sp, #16
 8000f36:	af00      	add	r7, sp, #0
 8000f38:	60f8      	str	r0, [r7, #12]
 8000f3a:	60b9      	str	r1, [r7, #8]
 8000f3c:	607a      	str	r2, [r7, #4]

	while(len>0){
 8000f3e:	e028      	b.n	8000f92 <SPI_ReceiveData+0x60>
			while(GetFlagStatus(pSPIx,SPI_BP_RXNE) == FLAG_RESET);
 8000f40:	bf00      	nop
 8000f42:	2100      	movs	r1, #0
 8000f44:	68f8      	ldr	r0, [r7, #12]
 8000f46:	f7ff ff8d 	bl	8000e64 <GetFlagStatus>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d0f8      	beq.n	8000f42 <SPI_ReceiveData+0x10>
			if((pSPIx->CR2 & (0xF<<8))== 0x0F00){
 8000f50:	68fb      	ldr	r3, [r7, #12]
 8000f52:	685b      	ldr	r3, [r3, #4]
 8000f54:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8000f58:	f5b3 6f70 	cmp.w	r3, #3840	; 0xf00
 8000f5c:	d10e      	bne.n	8000f7c <SPI_ReceiveData+0x4a>
				*((uint16_t *)pRXBuffer)=pSPIx->DR;
 8000f5e:	68fb      	ldr	r3, [r7, #12]
 8000f60:	68db      	ldr	r3, [r3, #12]
 8000f62:	b29a      	uxth	r2, r3
 8000f64:	68bb      	ldr	r3, [r7, #8]
 8000f66:	801a      	strh	r2, [r3, #0]
				len--;
 8000f68:	687b      	ldr	r3, [r7, #4]
 8000f6a:	3b01      	subs	r3, #1
 8000f6c:	607b      	str	r3, [r7, #4]
				len--;
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	3b01      	subs	r3, #1
 8000f72:	607b      	str	r3, [r7, #4]
				(uint16_t *)pRXBuffer++;
 8000f74:	68bb      	ldr	r3, [r7, #8]
 8000f76:	3301      	adds	r3, #1
 8000f78:	60bb      	str	r3, [r7, #8]
 8000f7a:	e00a      	b.n	8000f92 <SPI_ReceiveData+0x60>
			}
			else{
				*((uint8_t *)pRXBuffer)=*((uint8_t *)&(pSPIx->DR));
 8000f7c:	68fb      	ldr	r3, [r7, #12]
 8000f7e:	330c      	adds	r3, #12
 8000f80:	781a      	ldrb	r2, [r3, #0]
 8000f82:	68bb      	ldr	r3, [r7, #8]
 8000f84:	701a      	strb	r2, [r3, #0]
				len--;
 8000f86:	687b      	ldr	r3, [r7, #4]
 8000f88:	3b01      	subs	r3, #1
 8000f8a:	607b      	str	r3, [r7, #4]
				pRXBuffer++;
 8000f8c:	68bb      	ldr	r3, [r7, #8]
 8000f8e:	3301      	adds	r3, #1
 8000f90:	60bb      	str	r3, [r7, #8]
	while(len>0){
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d1d3      	bne.n	8000f40 <SPI_ReceiveData+0xe>
			}

		}

}
 8000f98:	bf00      	nop
 8000f9a:	bf00      	nop
 8000f9c:	3710      	adds	r7, #16
 8000f9e:	46bd      	mov	sp, r7
 8000fa0:	bd80      	pop	{r7, pc}
	...

08000fa4 <findslot>:
 8000fa4:	4b0a      	ldr	r3, [pc, #40]	; (8000fd0 <findslot+0x2c>)
 8000fa6:	b510      	push	{r4, lr}
 8000fa8:	4604      	mov	r4, r0
 8000faa:	6818      	ldr	r0, [r3, #0]
 8000fac:	b118      	cbz	r0, 8000fb6 <findslot+0x12>
 8000fae:	6983      	ldr	r3, [r0, #24]
 8000fb0:	b90b      	cbnz	r3, 8000fb6 <findslot+0x12>
 8000fb2:	f000 fafb 	bl	80015ac <__sinit>
 8000fb6:	2c13      	cmp	r4, #19
 8000fb8:	d807      	bhi.n	8000fca <findslot+0x26>
 8000fba:	4806      	ldr	r0, [pc, #24]	; (8000fd4 <findslot+0x30>)
 8000fbc:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8000fc0:	3201      	adds	r2, #1
 8000fc2:	d002      	beq.n	8000fca <findslot+0x26>
 8000fc4:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8000fc8:	bd10      	pop	{r4, pc}
 8000fca:	2000      	movs	r0, #0
 8000fcc:	e7fc      	b.n	8000fc8 <findslot+0x24>
 8000fce:	bf00      	nop
 8000fd0:	20000008 	.word	0x20000008
 8000fd4:	20000098 	.word	0x20000098

08000fd8 <checkerror>:
 8000fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fda:	1c43      	adds	r3, r0, #1
 8000fdc:	4604      	mov	r4, r0
 8000fde:	d109      	bne.n	8000ff4 <checkerror+0x1c>
 8000fe0:	f000 fa86 	bl	80014f0 <__errno>
 8000fe4:	2613      	movs	r6, #19
 8000fe6:	4605      	mov	r5, r0
 8000fe8:	2700      	movs	r7, #0
 8000fea:	4630      	mov	r0, r6
 8000fec:	4639      	mov	r1, r7
 8000fee:	beab      	bkpt	0x00ab
 8000ff0:	4606      	mov	r6, r0
 8000ff2:	602e      	str	r6, [r5, #0]
 8000ff4:	4620      	mov	r0, r4
 8000ff6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000ff8 <error>:
 8000ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ffa:	4604      	mov	r4, r0
 8000ffc:	f000 fa78 	bl	80014f0 <__errno>
 8001000:	2613      	movs	r6, #19
 8001002:	4605      	mov	r5, r0
 8001004:	2700      	movs	r7, #0
 8001006:	4630      	mov	r0, r6
 8001008:	4639      	mov	r1, r7
 800100a:	beab      	bkpt	0x00ab
 800100c:	4606      	mov	r6, r0
 800100e:	602e      	str	r6, [r5, #0]
 8001010:	4620      	mov	r0, r4
 8001012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08001014 <_swiread>:
 8001014:	b530      	push	{r4, r5, lr}
 8001016:	b085      	sub	sp, #20
 8001018:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800101c:	9203      	str	r2, [sp, #12]
 800101e:	2406      	movs	r4, #6
 8001020:	ad01      	add	r5, sp, #4
 8001022:	4620      	mov	r0, r4
 8001024:	4629      	mov	r1, r5
 8001026:	beab      	bkpt	0x00ab
 8001028:	4604      	mov	r4, r0
 800102a:	4620      	mov	r0, r4
 800102c:	f7ff ffd4 	bl	8000fd8 <checkerror>
 8001030:	b005      	add	sp, #20
 8001032:	bd30      	pop	{r4, r5, pc}

08001034 <_read>:
 8001034:	b570      	push	{r4, r5, r6, lr}
 8001036:	460e      	mov	r6, r1
 8001038:	4615      	mov	r5, r2
 800103a:	f7ff ffb3 	bl	8000fa4 <findslot>
 800103e:	4604      	mov	r4, r0
 8001040:	b930      	cbnz	r0, 8001050 <_read+0x1c>
 8001042:	f000 fa55 	bl	80014f0 <__errno>
 8001046:	2309      	movs	r3, #9
 8001048:	6003      	str	r3, [r0, #0]
 800104a:	f04f 30ff 	mov.w	r0, #4294967295
 800104e:	bd70      	pop	{r4, r5, r6, pc}
 8001050:	6800      	ldr	r0, [r0, #0]
 8001052:	462a      	mov	r2, r5
 8001054:	4631      	mov	r1, r6
 8001056:	f7ff ffdd 	bl	8001014 <_swiread>
 800105a:	1c43      	adds	r3, r0, #1
 800105c:	bf1f      	itttt	ne
 800105e:	6863      	ldrne	r3, [r4, #4]
 8001060:	1a28      	subne	r0, r5, r0
 8001062:	181b      	addne	r3, r3, r0
 8001064:	6063      	strne	r3, [r4, #4]
 8001066:	e7f2      	b.n	800104e <_read+0x1a>

08001068 <_swilseek>:
 8001068:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800106a:	460c      	mov	r4, r1
 800106c:	4616      	mov	r6, r2
 800106e:	f7ff ff99 	bl	8000fa4 <findslot>
 8001072:	4605      	mov	r5, r0
 8001074:	b940      	cbnz	r0, 8001088 <_swilseek+0x20>
 8001076:	f000 fa3b 	bl	80014f0 <__errno>
 800107a:	2309      	movs	r3, #9
 800107c:	6003      	str	r3, [r0, #0]
 800107e:	f04f 34ff 	mov.w	r4, #4294967295
 8001082:	4620      	mov	r0, r4
 8001084:	b003      	add	sp, #12
 8001086:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001088:	2e02      	cmp	r6, #2
 800108a:	d903      	bls.n	8001094 <_swilseek+0x2c>
 800108c:	f000 fa30 	bl	80014f0 <__errno>
 8001090:	2316      	movs	r3, #22
 8001092:	e7f3      	b.n	800107c <_swilseek+0x14>
 8001094:	2e01      	cmp	r6, #1
 8001096:	d112      	bne.n	80010be <_swilseek+0x56>
 8001098:	6843      	ldr	r3, [r0, #4]
 800109a:	18e4      	adds	r4, r4, r3
 800109c:	d4f6      	bmi.n	800108c <_swilseek+0x24>
 800109e:	682b      	ldr	r3, [r5, #0]
 80010a0:	260a      	movs	r6, #10
 80010a2:	e9cd 3400 	strd	r3, r4, [sp]
 80010a6:	466f      	mov	r7, sp
 80010a8:	4630      	mov	r0, r6
 80010aa:	4639      	mov	r1, r7
 80010ac:	beab      	bkpt	0x00ab
 80010ae:	4606      	mov	r6, r0
 80010b0:	4630      	mov	r0, r6
 80010b2:	f7ff ff91 	bl	8000fd8 <checkerror>
 80010b6:	2800      	cmp	r0, #0
 80010b8:	dbe1      	blt.n	800107e <_swilseek+0x16>
 80010ba:	606c      	str	r4, [r5, #4]
 80010bc:	e7e1      	b.n	8001082 <_swilseek+0x1a>
 80010be:	2e02      	cmp	r6, #2
 80010c0:	d1ed      	bne.n	800109e <_swilseek+0x36>
 80010c2:	6803      	ldr	r3, [r0, #0]
 80010c4:	9300      	str	r3, [sp, #0]
 80010c6:	260c      	movs	r6, #12
 80010c8:	466f      	mov	r7, sp
 80010ca:	4630      	mov	r0, r6
 80010cc:	4639      	mov	r1, r7
 80010ce:	beab      	bkpt	0x00ab
 80010d0:	4606      	mov	r6, r0
 80010d2:	4630      	mov	r0, r6
 80010d4:	f7ff ff80 	bl	8000fd8 <checkerror>
 80010d8:	1c43      	adds	r3, r0, #1
 80010da:	d0d0      	beq.n	800107e <_swilseek+0x16>
 80010dc:	4404      	add	r4, r0
 80010de:	e7de      	b.n	800109e <_swilseek+0x36>

080010e0 <_lseek>:
 80010e0:	f7ff bfc2 	b.w	8001068 <_swilseek>

080010e4 <_swiwrite>:
 80010e4:	b530      	push	{r4, r5, lr}
 80010e6:	b085      	sub	sp, #20
 80010e8:	e9cd 0101 	strd	r0, r1, [sp, #4]
 80010ec:	9203      	str	r2, [sp, #12]
 80010ee:	2405      	movs	r4, #5
 80010f0:	ad01      	add	r5, sp, #4
 80010f2:	4620      	mov	r0, r4
 80010f4:	4629      	mov	r1, r5
 80010f6:	beab      	bkpt	0x00ab
 80010f8:	4604      	mov	r4, r0
 80010fa:	4620      	mov	r0, r4
 80010fc:	f7ff ff6c 	bl	8000fd8 <checkerror>
 8001100:	b005      	add	sp, #20
 8001102:	bd30      	pop	{r4, r5, pc}

08001104 <_write>:
 8001104:	b570      	push	{r4, r5, r6, lr}
 8001106:	460e      	mov	r6, r1
 8001108:	4615      	mov	r5, r2
 800110a:	f7ff ff4b 	bl	8000fa4 <findslot>
 800110e:	4604      	mov	r4, r0
 8001110:	b930      	cbnz	r0, 8001120 <_write+0x1c>
 8001112:	f000 f9ed 	bl	80014f0 <__errno>
 8001116:	2309      	movs	r3, #9
 8001118:	6003      	str	r3, [r0, #0]
 800111a:	f04f 30ff 	mov.w	r0, #4294967295
 800111e:	bd70      	pop	{r4, r5, r6, pc}
 8001120:	6800      	ldr	r0, [r0, #0]
 8001122:	462a      	mov	r2, r5
 8001124:	4631      	mov	r1, r6
 8001126:	f7ff ffdd 	bl	80010e4 <_swiwrite>
 800112a:	1e03      	subs	r3, r0, #0
 800112c:	dbf5      	blt.n	800111a <_write+0x16>
 800112e:	6862      	ldr	r2, [r4, #4]
 8001130:	1ae8      	subs	r0, r5, r3
 8001132:	4402      	add	r2, r0
 8001134:	42ab      	cmp	r3, r5
 8001136:	6062      	str	r2, [r4, #4]
 8001138:	d1f1      	bne.n	800111e <_write+0x1a>
 800113a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800113e:	2000      	movs	r0, #0
 8001140:	f7ff bf5a 	b.w	8000ff8 <error>

08001144 <_swiclose>:
 8001144:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8001146:	2402      	movs	r4, #2
 8001148:	9001      	str	r0, [sp, #4]
 800114a:	ad01      	add	r5, sp, #4
 800114c:	4620      	mov	r0, r4
 800114e:	4629      	mov	r1, r5
 8001150:	beab      	bkpt	0x00ab
 8001152:	4604      	mov	r4, r0
 8001154:	4620      	mov	r0, r4
 8001156:	f7ff ff3f 	bl	8000fd8 <checkerror>
 800115a:	b003      	add	sp, #12
 800115c:	bd30      	pop	{r4, r5, pc}
	...

08001160 <_close>:
 8001160:	b538      	push	{r3, r4, r5, lr}
 8001162:	4605      	mov	r5, r0
 8001164:	f7ff ff1e 	bl	8000fa4 <findslot>
 8001168:	4604      	mov	r4, r0
 800116a:	b930      	cbnz	r0, 800117a <_close+0x1a>
 800116c:	f000 f9c0 	bl	80014f0 <__errno>
 8001170:	2309      	movs	r3, #9
 8001172:	6003      	str	r3, [r0, #0]
 8001174:	f04f 30ff 	mov.w	r0, #4294967295
 8001178:	bd38      	pop	{r3, r4, r5, pc}
 800117a:	3d01      	subs	r5, #1
 800117c:	2d01      	cmp	r5, #1
 800117e:	d809      	bhi.n	8001194 <_close+0x34>
 8001180:	4b09      	ldr	r3, [pc, #36]	; (80011a8 <_close+0x48>)
 8001182:	689a      	ldr	r2, [r3, #8]
 8001184:	691b      	ldr	r3, [r3, #16]
 8001186:	429a      	cmp	r2, r3
 8001188:	d104      	bne.n	8001194 <_close+0x34>
 800118a:	f04f 33ff 	mov.w	r3, #4294967295
 800118e:	6003      	str	r3, [r0, #0]
 8001190:	2000      	movs	r0, #0
 8001192:	e7f1      	b.n	8001178 <_close+0x18>
 8001194:	6820      	ldr	r0, [r4, #0]
 8001196:	f7ff ffd5 	bl	8001144 <_swiclose>
 800119a:	2800      	cmp	r0, #0
 800119c:	d1ec      	bne.n	8001178 <_close+0x18>
 800119e:	f04f 33ff 	mov.w	r3, #4294967295
 80011a2:	6023      	str	r3, [r4, #0]
 80011a4:	e7e8      	b.n	8001178 <_close+0x18>
 80011a6:	bf00      	nop
 80011a8:	20000098 	.word	0x20000098

080011ac <_swistat>:
 80011ac:	b570      	push	{r4, r5, r6, lr}
 80011ae:	460c      	mov	r4, r1
 80011b0:	f7ff fef8 	bl	8000fa4 <findslot>
 80011b4:	4605      	mov	r5, r0
 80011b6:	b930      	cbnz	r0, 80011c6 <_swistat+0x1a>
 80011b8:	f000 f99a 	bl	80014f0 <__errno>
 80011bc:	2309      	movs	r3, #9
 80011be:	6003      	str	r3, [r0, #0]
 80011c0:	f04f 30ff 	mov.w	r0, #4294967295
 80011c4:	bd70      	pop	{r4, r5, r6, pc}
 80011c6:	6863      	ldr	r3, [r4, #4]
 80011c8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80011cc:	6063      	str	r3, [r4, #4]
 80011ce:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80011d2:	64a3      	str	r3, [r4, #72]	; 0x48
 80011d4:	260c      	movs	r6, #12
 80011d6:	4630      	mov	r0, r6
 80011d8:	4629      	mov	r1, r5
 80011da:	beab      	bkpt	0x00ab
 80011dc:	4605      	mov	r5, r0
 80011de:	4628      	mov	r0, r5
 80011e0:	f7ff fefa 	bl	8000fd8 <checkerror>
 80011e4:	1c43      	adds	r3, r0, #1
 80011e6:	bf1c      	itt	ne
 80011e8:	6120      	strne	r0, [r4, #16]
 80011ea:	2000      	movne	r0, #0
 80011ec:	e7ea      	b.n	80011c4 <_swistat+0x18>

080011ee <_fstat>:
 80011ee:	460b      	mov	r3, r1
 80011f0:	b510      	push	{r4, lr}
 80011f2:	2100      	movs	r1, #0
 80011f4:	4604      	mov	r4, r0
 80011f6:	2258      	movs	r2, #88	; 0x58
 80011f8:	4618      	mov	r0, r3
 80011fa:	f000 fa9c 	bl	8001736 <memset>
 80011fe:	4601      	mov	r1, r0
 8001200:	4620      	mov	r0, r4
 8001202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001206:	f7ff bfd1 	b.w	80011ac <_swistat>

0800120a <_stat>:
 800120a:	b538      	push	{r3, r4, r5, lr}
 800120c:	460d      	mov	r5, r1
 800120e:	4604      	mov	r4, r0
 8001210:	2258      	movs	r2, #88	; 0x58
 8001212:	2100      	movs	r1, #0
 8001214:	4628      	mov	r0, r5
 8001216:	f000 fa8e 	bl	8001736 <memset>
 800121a:	4620      	mov	r0, r4
 800121c:	2100      	movs	r1, #0
 800121e:	f000 f811 	bl	8001244 <_swiopen>
 8001222:	1c43      	adds	r3, r0, #1
 8001224:	4604      	mov	r4, r0
 8001226:	d00b      	beq.n	8001240 <_stat+0x36>
 8001228:	686b      	ldr	r3, [r5, #4]
 800122a:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 800122e:	606b      	str	r3, [r5, #4]
 8001230:	4629      	mov	r1, r5
 8001232:	f7ff ffbb 	bl	80011ac <_swistat>
 8001236:	4605      	mov	r5, r0
 8001238:	4620      	mov	r0, r4
 800123a:	f7ff ff91 	bl	8001160 <_close>
 800123e:	462c      	mov	r4, r5
 8001240:	4620      	mov	r0, r4
 8001242:	bd38      	pop	{r3, r4, r5, pc}

08001244 <_swiopen>:
 8001244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001248:	4b2a      	ldr	r3, [pc, #168]	; (80012f4 <_swiopen+0xb0>)
 800124a:	b097      	sub	sp, #92	; 0x5c
 800124c:	4681      	mov	r9, r0
 800124e:	460f      	mov	r7, r1
 8001250:	2500      	movs	r5, #0
 8001252:	461e      	mov	r6, r3
 8001254:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8001258:	1c61      	adds	r1, r4, #1
 800125a:	d037      	beq.n	80012cc <_swiopen+0x88>
 800125c:	3501      	adds	r5, #1
 800125e:	2d14      	cmp	r5, #20
 8001260:	d1f8      	bne.n	8001254 <_swiopen+0x10>
 8001262:	f000 f945 	bl	80014f0 <__errno>
 8001266:	2318      	movs	r3, #24
 8001268:	6003      	str	r3, [r0, #0]
 800126a:	f04f 34ff 	mov.w	r4, #4294967295
 800126e:	e03d      	b.n	80012ec <_swiopen+0xa8>
 8001270:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8001274:	f240 6301 	movw	r3, #1537	; 0x601
 8001278:	07ba      	lsls	r2, r7, #30
 800127a:	bf48      	it	mi
 800127c:	f044 0402 	orrmi.w	r4, r4, #2
 8001280:	421f      	tst	r7, r3
 8001282:	bf18      	it	ne
 8001284:	f044 0404 	orrne.w	r4, r4, #4
 8001288:	073b      	lsls	r3, r7, #28
 800128a:	bf48      	it	mi
 800128c:	f024 0404 	bicmi.w	r4, r4, #4
 8001290:	4648      	mov	r0, r9
 8001292:	bf48      	it	mi
 8001294:	f044 0408 	orrmi.w	r4, r4, #8
 8001298:	f8cd 9000 	str.w	r9, [sp]
 800129c:	f7fe ff98 	bl	80001d0 <strlen>
 80012a0:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80012a4:	2401      	movs	r4, #1
 80012a6:	4620      	mov	r0, r4
 80012a8:	4641      	mov	r1, r8
 80012aa:	beab      	bkpt	0x00ab
 80012ac:	4604      	mov	r4, r0
 80012ae:	2c00      	cmp	r4, #0
 80012b0:	db07      	blt.n	80012c2 <_swiopen+0x7e>
 80012b2:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 80012b6:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 80012ba:	2300      	movs	r3, #0
 80012bc:	6073      	str	r3, [r6, #4]
 80012be:	462c      	mov	r4, r5
 80012c0:	e014      	b.n	80012ec <_swiopen+0xa8>
 80012c2:	4620      	mov	r0, r4
 80012c4:	f7ff fe98 	bl	8000ff8 <error>
 80012c8:	4604      	mov	r4, r0
 80012ca:	e00f      	b.n	80012ec <_swiopen+0xa8>
 80012cc:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 80012d0:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 80012d4:	46e8      	mov	r8, sp
 80012d6:	d1cb      	bne.n	8001270 <_swiopen+0x2c>
 80012d8:	4641      	mov	r1, r8
 80012da:	4648      	mov	r0, r9
 80012dc:	f7ff ff95 	bl	800120a <_stat>
 80012e0:	3001      	adds	r0, #1
 80012e2:	d0c5      	beq.n	8001270 <_swiopen+0x2c>
 80012e4:	f000 f904 	bl	80014f0 <__errno>
 80012e8:	2311      	movs	r3, #17
 80012ea:	6003      	str	r3, [r0, #0]
 80012ec:	4620      	mov	r0, r4
 80012ee:	b017      	add	sp, #92	; 0x5c
 80012f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80012f4:	20000098 	.word	0x20000098

080012f8 <_get_semihosting_exts>:
 80012f8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80012fc:	4606      	mov	r6, r0
 80012fe:	460f      	mov	r7, r1
 8001300:	482a      	ldr	r0, [pc, #168]	; (80013ac <_get_semihosting_exts+0xb4>)
 8001302:	2100      	movs	r1, #0
 8001304:	4615      	mov	r5, r2
 8001306:	f7ff ff9d 	bl	8001244 <_swiopen>
 800130a:	462a      	mov	r2, r5
 800130c:	4604      	mov	r4, r0
 800130e:	2100      	movs	r1, #0
 8001310:	4630      	mov	r0, r6
 8001312:	f000 fa10 	bl	8001736 <memset>
 8001316:	1c63      	adds	r3, r4, #1
 8001318:	d016      	beq.n	8001348 <_get_semihosting_exts+0x50>
 800131a:	4620      	mov	r0, r4
 800131c:	f7ff fe42 	bl	8000fa4 <findslot>
 8001320:	f04f 080c 	mov.w	r8, #12
 8001324:	4681      	mov	r9, r0
 8001326:	4640      	mov	r0, r8
 8001328:	4649      	mov	r1, r9
 800132a:	beab      	bkpt	0x00ab
 800132c:	4680      	mov	r8, r0
 800132e:	4640      	mov	r0, r8
 8001330:	f7ff fe52 	bl	8000fd8 <checkerror>
 8001334:	2803      	cmp	r0, #3
 8001336:	dd02      	ble.n	800133e <_get_semihosting_exts+0x46>
 8001338:	1ec3      	subs	r3, r0, #3
 800133a:	42ab      	cmp	r3, r5
 800133c:	dc08      	bgt.n	8001350 <_get_semihosting_exts+0x58>
 800133e:	4620      	mov	r0, r4
 8001340:	f7ff ff0e 	bl	8001160 <_close>
 8001344:	f04f 34ff 	mov.w	r4, #4294967295
 8001348:	4620      	mov	r0, r4
 800134a:	b003      	add	sp, #12
 800134c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001350:	2204      	movs	r2, #4
 8001352:	eb0d 0102 	add.w	r1, sp, r2
 8001356:	4620      	mov	r0, r4
 8001358:	f7ff fe6c 	bl	8001034 <_read>
 800135c:	2803      	cmp	r0, #3
 800135e:	ddee      	ble.n	800133e <_get_semihosting_exts+0x46>
 8001360:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8001364:	2b53      	cmp	r3, #83	; 0x53
 8001366:	d1ea      	bne.n	800133e <_get_semihosting_exts+0x46>
 8001368:	f89d 3005 	ldrb.w	r3, [sp, #5]
 800136c:	2b48      	cmp	r3, #72	; 0x48
 800136e:	d1e6      	bne.n	800133e <_get_semihosting_exts+0x46>
 8001370:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8001374:	2b46      	cmp	r3, #70	; 0x46
 8001376:	d1e2      	bne.n	800133e <_get_semihosting_exts+0x46>
 8001378:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800137c:	2b42      	cmp	r3, #66	; 0x42
 800137e:	d1de      	bne.n	800133e <_get_semihosting_exts+0x46>
 8001380:	2201      	movs	r2, #1
 8001382:	4639      	mov	r1, r7
 8001384:	4620      	mov	r0, r4
 8001386:	f7ff fe6f 	bl	8001068 <_swilseek>
 800138a:	2800      	cmp	r0, #0
 800138c:	dbd7      	blt.n	800133e <_get_semihosting_exts+0x46>
 800138e:	462a      	mov	r2, r5
 8001390:	4631      	mov	r1, r6
 8001392:	4620      	mov	r0, r4
 8001394:	f7ff fe4e 	bl	8001034 <_read>
 8001398:	4605      	mov	r5, r0
 800139a:	4620      	mov	r0, r4
 800139c:	f7ff fee0 	bl	8001160 <_close>
 80013a0:	4628      	mov	r0, r5
 80013a2:	f7ff fe19 	bl	8000fd8 <checkerror>
 80013a6:	4604      	mov	r4, r0
 80013a8:	e7ce      	b.n	8001348 <_get_semihosting_exts+0x50>
 80013aa:	bf00      	nop
 80013ac:	08002577 	.word	0x08002577

080013b0 <initialise_semihosting_exts>:
 80013b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80013b2:	4d0a      	ldr	r5, [pc, #40]	; (80013dc <initialise_semihosting_exts+0x2c>)
 80013b4:	4c0a      	ldr	r4, [pc, #40]	; (80013e0 <initialise_semihosting_exts+0x30>)
 80013b6:	2100      	movs	r1, #0
 80013b8:	2201      	movs	r2, #1
 80013ba:	a801      	add	r0, sp, #4
 80013bc:	6029      	str	r1, [r5, #0]
 80013be:	6022      	str	r2, [r4, #0]
 80013c0:	f7ff ff9a 	bl	80012f8 <_get_semihosting_exts>
 80013c4:	2800      	cmp	r0, #0
 80013c6:	dd07      	ble.n	80013d8 <initialise_semihosting_exts+0x28>
 80013c8:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80013cc:	f003 0201 	and.w	r2, r3, #1
 80013d0:	f003 0302 	and.w	r3, r3, #2
 80013d4:	602a      	str	r2, [r5, #0]
 80013d6:	6023      	str	r3, [r4, #0]
 80013d8:	b003      	add	sp, #12
 80013da:	bd30      	pop	{r4, r5, pc}
 80013dc:	20000000 	.word	0x20000000
 80013e0:	20000004 	.word	0x20000004

080013e4 <_has_ext_stdout_stderr>:
 80013e4:	b510      	push	{r4, lr}
 80013e6:	4c04      	ldr	r4, [pc, #16]	; (80013f8 <_has_ext_stdout_stderr+0x14>)
 80013e8:	6822      	ldr	r2, [r4, #0]
 80013ea:	2a00      	cmp	r2, #0
 80013ec:	da01      	bge.n	80013f2 <_has_ext_stdout_stderr+0xe>
 80013ee:	f7ff ffdf 	bl	80013b0 <initialise_semihosting_exts>
 80013f2:	6820      	ldr	r0, [r4, #0]
 80013f4:	bd10      	pop	{r4, pc}
 80013f6:	bf00      	nop
 80013f8:	20000004 	.word	0x20000004

080013fc <initialise_monitor_handles>:
 80013fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001400:	b085      	sub	sp, #20
 8001402:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80014b4 <initialise_monitor_handles+0xb8>
 8001406:	f8cd 9004 	str.w	r9, [sp, #4]
 800140a:	2303      	movs	r3, #3
 800140c:	2400      	movs	r4, #0
 800140e:	9303      	str	r3, [sp, #12]
 8001410:	f10d 0804 	add.w	r8, sp, #4
 8001414:	9402      	str	r4, [sp, #8]
 8001416:	2501      	movs	r5, #1
 8001418:	4628      	mov	r0, r5
 800141a:	4641      	mov	r1, r8
 800141c:	beab      	bkpt	0x00ab
 800141e:	4605      	mov	r5, r0
 8001420:	4e20      	ldr	r6, [pc, #128]	; (80014a4 <initialise_monitor_handles+0xa8>)
 8001422:	4a21      	ldr	r2, [pc, #132]	; (80014a8 <initialise_monitor_handles+0xac>)
 8001424:	6035      	str	r5, [r6, #0]
 8001426:	4623      	mov	r3, r4
 8001428:	f04f 31ff 	mov.w	r1, #4294967295
 800142c:	4614      	mov	r4, r2
 800142e:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8001432:	3301      	adds	r3, #1
 8001434:	2b14      	cmp	r3, #20
 8001436:	d1fa      	bne.n	800142e <initialise_monitor_handles+0x32>
 8001438:	f7ff ffd4 	bl	80013e4 <_has_ext_stdout_stderr>
 800143c:	4d1b      	ldr	r5, [pc, #108]	; (80014ac <initialise_monitor_handles+0xb0>)
 800143e:	b1d0      	cbz	r0, 8001476 <initialise_monitor_handles+0x7a>
 8001440:	f04f 0a03 	mov.w	sl, #3
 8001444:	2304      	movs	r3, #4
 8001446:	f8cd 9004 	str.w	r9, [sp, #4]
 800144a:	2701      	movs	r7, #1
 800144c:	f8cd a00c 	str.w	sl, [sp, #12]
 8001450:	9302      	str	r3, [sp, #8]
 8001452:	4638      	mov	r0, r7
 8001454:	4641      	mov	r1, r8
 8001456:	beab      	bkpt	0x00ab
 8001458:	4683      	mov	fp, r0
 800145a:	4b15      	ldr	r3, [pc, #84]	; (80014b0 <initialise_monitor_handles+0xb4>)
 800145c:	f8cd 9004 	str.w	r9, [sp, #4]
 8001460:	f8c3 b000 	str.w	fp, [r3]
 8001464:	2308      	movs	r3, #8
 8001466:	f8cd a00c 	str.w	sl, [sp, #12]
 800146a:	9302      	str	r3, [sp, #8]
 800146c:	4638      	mov	r0, r7
 800146e:	4641      	mov	r1, r8
 8001470:	beab      	bkpt	0x00ab
 8001472:	4607      	mov	r7, r0
 8001474:	602f      	str	r7, [r5, #0]
 8001476:	682b      	ldr	r3, [r5, #0]
 8001478:	3301      	adds	r3, #1
 800147a:	bf02      	ittt	eq
 800147c:	4b0c      	ldreq	r3, [pc, #48]	; (80014b0 <initialise_monitor_handles+0xb4>)
 800147e:	681b      	ldreq	r3, [r3, #0]
 8001480:	602b      	streq	r3, [r5, #0]
 8001482:	6833      	ldr	r3, [r6, #0]
 8001484:	6023      	str	r3, [r4, #0]
 8001486:	2600      	movs	r6, #0
 8001488:	6066      	str	r6, [r4, #4]
 800148a:	f7ff ffab 	bl	80013e4 <_has_ext_stdout_stderr>
 800148e:	b130      	cbz	r0, 800149e <initialise_monitor_handles+0xa2>
 8001490:	4b07      	ldr	r3, [pc, #28]	; (80014b0 <initialise_monitor_handles+0xb4>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8001498:	682b      	ldr	r3, [r5, #0]
 800149a:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800149e:	b005      	add	sp, #20
 80014a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80014a4:	20000090 	.word	0x20000090
 80014a8:	20000098 	.word	0x20000098
 80014ac:	2000008c 	.word	0x2000008c
 80014b0:	20000094 	.word	0x20000094
 80014b4:	0800258d 	.word	0x0800258d

080014b8 <_isatty>:
 80014b8:	b570      	push	{r4, r5, r6, lr}
 80014ba:	f7ff fd73 	bl	8000fa4 <findslot>
 80014be:	2509      	movs	r5, #9
 80014c0:	4604      	mov	r4, r0
 80014c2:	b920      	cbnz	r0, 80014ce <_isatty+0x16>
 80014c4:	f000 f814 	bl	80014f0 <__errno>
 80014c8:	6005      	str	r5, [r0, #0]
 80014ca:	4620      	mov	r0, r4
 80014cc:	bd70      	pop	{r4, r5, r6, pc}
 80014ce:	4628      	mov	r0, r5
 80014d0:	4621      	mov	r1, r4
 80014d2:	beab      	bkpt	0x00ab
 80014d4:	4604      	mov	r4, r0
 80014d6:	2c01      	cmp	r4, #1
 80014d8:	d0f7      	beq.n	80014ca <_isatty+0x12>
 80014da:	f000 f809 	bl	80014f0 <__errno>
 80014de:	2400      	movs	r4, #0
 80014e0:	4605      	mov	r5, r0
 80014e2:	2613      	movs	r6, #19
 80014e4:	4630      	mov	r0, r6
 80014e6:	4621      	mov	r1, r4
 80014e8:	beab      	bkpt	0x00ab
 80014ea:	4606      	mov	r6, r0
 80014ec:	602e      	str	r6, [r5, #0]
 80014ee:	e7ec      	b.n	80014ca <_isatty+0x12>

080014f0 <__errno>:
 80014f0:	4b01      	ldr	r3, [pc, #4]	; (80014f8 <__errno+0x8>)
 80014f2:	6818      	ldr	r0, [r3, #0]
 80014f4:	4770      	bx	lr
 80014f6:	bf00      	nop
 80014f8:	20000008 	.word	0x20000008

080014fc <std>:
 80014fc:	2300      	movs	r3, #0
 80014fe:	b510      	push	{r4, lr}
 8001500:	4604      	mov	r4, r0
 8001502:	e9c0 3300 	strd	r3, r3, [r0]
 8001506:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800150a:	6083      	str	r3, [r0, #8]
 800150c:	8181      	strh	r1, [r0, #12]
 800150e:	6643      	str	r3, [r0, #100]	; 0x64
 8001510:	81c2      	strh	r2, [r0, #14]
 8001512:	6183      	str	r3, [r0, #24]
 8001514:	4619      	mov	r1, r3
 8001516:	2208      	movs	r2, #8
 8001518:	305c      	adds	r0, #92	; 0x5c
 800151a:	f000 f90c 	bl	8001736 <memset>
 800151e:	4b05      	ldr	r3, [pc, #20]	; (8001534 <std+0x38>)
 8001520:	6263      	str	r3, [r4, #36]	; 0x24
 8001522:	4b05      	ldr	r3, [pc, #20]	; (8001538 <std+0x3c>)
 8001524:	62a3      	str	r3, [r4, #40]	; 0x28
 8001526:	4b05      	ldr	r3, [pc, #20]	; (800153c <std+0x40>)
 8001528:	62e3      	str	r3, [r4, #44]	; 0x2c
 800152a:	4b05      	ldr	r3, [pc, #20]	; (8001540 <std+0x44>)
 800152c:	6224      	str	r4, [r4, #32]
 800152e:	6323      	str	r3, [r4, #48]	; 0x30
 8001530:	bd10      	pop	{r4, pc}
 8001532:	bf00      	nop
 8001534:	08001939 	.word	0x08001939
 8001538:	0800195b 	.word	0x0800195b
 800153c:	08001993 	.word	0x08001993
 8001540:	080019b7 	.word	0x080019b7

08001544 <_cleanup_r>:
 8001544:	4901      	ldr	r1, [pc, #4]	; (800154c <_cleanup_r+0x8>)
 8001546:	f000 b8af 	b.w	80016a8 <_fwalk_reent>
 800154a:	bf00      	nop
 800154c:	08001c91 	.word	0x08001c91

08001550 <__sfmoreglue>:
 8001550:	b570      	push	{r4, r5, r6, lr}
 8001552:	1e4a      	subs	r2, r1, #1
 8001554:	2568      	movs	r5, #104	; 0x68
 8001556:	4355      	muls	r5, r2
 8001558:	460e      	mov	r6, r1
 800155a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800155e:	f000 f8f3 	bl	8001748 <_malloc_r>
 8001562:	4604      	mov	r4, r0
 8001564:	b140      	cbz	r0, 8001578 <__sfmoreglue+0x28>
 8001566:	2100      	movs	r1, #0
 8001568:	e9c0 1600 	strd	r1, r6, [r0]
 800156c:	300c      	adds	r0, #12
 800156e:	60a0      	str	r0, [r4, #8]
 8001570:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8001574:	f000 f8df 	bl	8001736 <memset>
 8001578:	4620      	mov	r0, r4
 800157a:	bd70      	pop	{r4, r5, r6, pc}

0800157c <__sfp_lock_acquire>:
 800157c:	4801      	ldr	r0, [pc, #4]	; (8001584 <__sfp_lock_acquire+0x8>)
 800157e:	f000 b8d8 	b.w	8001732 <__retarget_lock_acquire_recursive>
 8001582:	bf00      	nop
 8001584:	20000148 	.word	0x20000148

08001588 <__sfp_lock_release>:
 8001588:	4801      	ldr	r0, [pc, #4]	; (8001590 <__sfp_lock_release+0x8>)
 800158a:	f000 b8d3 	b.w	8001734 <__retarget_lock_release_recursive>
 800158e:	bf00      	nop
 8001590:	20000148 	.word	0x20000148

08001594 <__sinit_lock_acquire>:
 8001594:	4801      	ldr	r0, [pc, #4]	; (800159c <__sinit_lock_acquire+0x8>)
 8001596:	f000 b8cc 	b.w	8001732 <__retarget_lock_acquire_recursive>
 800159a:	bf00      	nop
 800159c:	20000143 	.word	0x20000143

080015a0 <__sinit_lock_release>:
 80015a0:	4801      	ldr	r0, [pc, #4]	; (80015a8 <__sinit_lock_release+0x8>)
 80015a2:	f000 b8c7 	b.w	8001734 <__retarget_lock_release_recursive>
 80015a6:	bf00      	nop
 80015a8:	20000143 	.word	0x20000143

080015ac <__sinit>:
 80015ac:	b510      	push	{r4, lr}
 80015ae:	4604      	mov	r4, r0
 80015b0:	f7ff fff0 	bl	8001594 <__sinit_lock_acquire>
 80015b4:	69a3      	ldr	r3, [r4, #24]
 80015b6:	b11b      	cbz	r3, 80015c0 <__sinit+0x14>
 80015b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015bc:	f7ff bff0 	b.w	80015a0 <__sinit_lock_release>
 80015c0:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80015c4:	6523      	str	r3, [r4, #80]	; 0x50
 80015c6:	4b13      	ldr	r3, [pc, #76]	; (8001614 <__sinit+0x68>)
 80015c8:	4a13      	ldr	r2, [pc, #76]	; (8001618 <__sinit+0x6c>)
 80015ca:	681b      	ldr	r3, [r3, #0]
 80015cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80015ce:	42a3      	cmp	r3, r4
 80015d0:	bf04      	itt	eq
 80015d2:	2301      	moveq	r3, #1
 80015d4:	61a3      	streq	r3, [r4, #24]
 80015d6:	4620      	mov	r0, r4
 80015d8:	f000 f820 	bl	800161c <__sfp>
 80015dc:	6060      	str	r0, [r4, #4]
 80015de:	4620      	mov	r0, r4
 80015e0:	f000 f81c 	bl	800161c <__sfp>
 80015e4:	60a0      	str	r0, [r4, #8]
 80015e6:	4620      	mov	r0, r4
 80015e8:	f000 f818 	bl	800161c <__sfp>
 80015ec:	2200      	movs	r2, #0
 80015ee:	60e0      	str	r0, [r4, #12]
 80015f0:	2104      	movs	r1, #4
 80015f2:	6860      	ldr	r0, [r4, #4]
 80015f4:	f7ff ff82 	bl	80014fc <std>
 80015f8:	68a0      	ldr	r0, [r4, #8]
 80015fa:	2201      	movs	r2, #1
 80015fc:	2109      	movs	r1, #9
 80015fe:	f7ff ff7d 	bl	80014fc <std>
 8001602:	68e0      	ldr	r0, [r4, #12]
 8001604:	2202      	movs	r2, #2
 8001606:	2112      	movs	r1, #18
 8001608:	f7ff ff78 	bl	80014fc <std>
 800160c:	2301      	movs	r3, #1
 800160e:	61a3      	str	r3, [r4, #24]
 8001610:	e7d2      	b.n	80015b8 <__sinit+0xc>
 8001612:	bf00      	nop
 8001614:	080025f4 	.word	0x080025f4
 8001618:	08001545 	.word	0x08001545

0800161c <__sfp>:
 800161c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800161e:	4607      	mov	r7, r0
 8001620:	f7ff ffac 	bl	800157c <__sfp_lock_acquire>
 8001624:	4b1e      	ldr	r3, [pc, #120]	; (80016a0 <__sfp+0x84>)
 8001626:	681e      	ldr	r6, [r3, #0]
 8001628:	69b3      	ldr	r3, [r6, #24]
 800162a:	b913      	cbnz	r3, 8001632 <__sfp+0x16>
 800162c:	4630      	mov	r0, r6
 800162e:	f7ff ffbd 	bl	80015ac <__sinit>
 8001632:	3648      	adds	r6, #72	; 0x48
 8001634:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8001638:	3b01      	subs	r3, #1
 800163a:	d503      	bpl.n	8001644 <__sfp+0x28>
 800163c:	6833      	ldr	r3, [r6, #0]
 800163e:	b30b      	cbz	r3, 8001684 <__sfp+0x68>
 8001640:	6836      	ldr	r6, [r6, #0]
 8001642:	e7f7      	b.n	8001634 <__sfp+0x18>
 8001644:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8001648:	b9d5      	cbnz	r5, 8001680 <__sfp+0x64>
 800164a:	4b16      	ldr	r3, [pc, #88]	; (80016a4 <__sfp+0x88>)
 800164c:	60e3      	str	r3, [r4, #12]
 800164e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001652:	6665      	str	r5, [r4, #100]	; 0x64
 8001654:	f000 f86c 	bl	8001730 <__retarget_lock_init_recursive>
 8001658:	f7ff ff96 	bl	8001588 <__sfp_lock_release>
 800165c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8001660:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8001664:	6025      	str	r5, [r4, #0]
 8001666:	61a5      	str	r5, [r4, #24]
 8001668:	2208      	movs	r2, #8
 800166a:	4629      	mov	r1, r5
 800166c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8001670:	f000 f861 	bl	8001736 <memset>
 8001674:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8001678:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800167c:	4620      	mov	r0, r4
 800167e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001680:	3468      	adds	r4, #104	; 0x68
 8001682:	e7d9      	b.n	8001638 <__sfp+0x1c>
 8001684:	2104      	movs	r1, #4
 8001686:	4638      	mov	r0, r7
 8001688:	f7ff ff62 	bl	8001550 <__sfmoreglue>
 800168c:	4604      	mov	r4, r0
 800168e:	6030      	str	r0, [r6, #0]
 8001690:	2800      	cmp	r0, #0
 8001692:	d1d5      	bne.n	8001640 <__sfp+0x24>
 8001694:	f7ff ff78 	bl	8001588 <__sfp_lock_release>
 8001698:	230c      	movs	r3, #12
 800169a:	603b      	str	r3, [r7, #0]
 800169c:	e7ee      	b.n	800167c <__sfp+0x60>
 800169e:	bf00      	nop
 80016a0:	080025f4 	.word	0x080025f4
 80016a4:	ffff0001 	.word	0xffff0001

080016a8 <_fwalk_reent>:
 80016a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80016ac:	4606      	mov	r6, r0
 80016ae:	4688      	mov	r8, r1
 80016b0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80016b4:	2700      	movs	r7, #0
 80016b6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80016ba:	f1b9 0901 	subs.w	r9, r9, #1
 80016be:	d505      	bpl.n	80016cc <_fwalk_reent+0x24>
 80016c0:	6824      	ldr	r4, [r4, #0]
 80016c2:	2c00      	cmp	r4, #0
 80016c4:	d1f7      	bne.n	80016b6 <_fwalk_reent+0xe>
 80016c6:	4638      	mov	r0, r7
 80016c8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80016cc:	89ab      	ldrh	r3, [r5, #12]
 80016ce:	2b01      	cmp	r3, #1
 80016d0:	d907      	bls.n	80016e2 <_fwalk_reent+0x3a>
 80016d2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80016d6:	3301      	adds	r3, #1
 80016d8:	d003      	beq.n	80016e2 <_fwalk_reent+0x3a>
 80016da:	4629      	mov	r1, r5
 80016dc:	4630      	mov	r0, r6
 80016de:	47c0      	blx	r8
 80016e0:	4307      	orrs	r7, r0
 80016e2:	3568      	adds	r5, #104	; 0x68
 80016e4:	e7e9      	b.n	80016ba <_fwalk_reent+0x12>
	...

080016e8 <__libc_init_array>:
 80016e8:	b570      	push	{r4, r5, r6, lr}
 80016ea:	4d0d      	ldr	r5, [pc, #52]	; (8001720 <__libc_init_array+0x38>)
 80016ec:	4c0d      	ldr	r4, [pc, #52]	; (8001724 <__libc_init_array+0x3c>)
 80016ee:	1b64      	subs	r4, r4, r5
 80016f0:	10a4      	asrs	r4, r4, #2
 80016f2:	2600      	movs	r6, #0
 80016f4:	42a6      	cmp	r6, r4
 80016f6:	d109      	bne.n	800170c <__libc_init_array+0x24>
 80016f8:	4d0b      	ldr	r5, [pc, #44]	; (8001728 <__libc_init_array+0x40>)
 80016fa:	4c0c      	ldr	r4, [pc, #48]	; (800172c <__libc_init_array+0x44>)
 80016fc:	f000 fef4 	bl	80024e8 <_init>
 8001700:	1b64      	subs	r4, r4, r5
 8001702:	10a4      	asrs	r4, r4, #2
 8001704:	2600      	movs	r6, #0
 8001706:	42a6      	cmp	r6, r4
 8001708:	d105      	bne.n	8001716 <__libc_init_array+0x2e>
 800170a:	bd70      	pop	{r4, r5, r6, pc}
 800170c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001710:	4798      	blx	r3
 8001712:	3601      	adds	r6, #1
 8001714:	e7ee      	b.n	80016f4 <__libc_init_array+0xc>
 8001716:	f855 3b04 	ldr.w	r3, [r5], #4
 800171a:	4798      	blx	r3
 800171c:	3601      	adds	r6, #1
 800171e:	e7f2      	b.n	8001706 <__libc_init_array+0x1e>
 8001720:	0800262c 	.word	0x0800262c
 8001724:	0800262c 	.word	0x0800262c
 8001728:	0800262c 	.word	0x0800262c
 800172c:	08002630 	.word	0x08002630

08001730 <__retarget_lock_init_recursive>:
 8001730:	4770      	bx	lr

08001732 <__retarget_lock_acquire_recursive>:
 8001732:	4770      	bx	lr

08001734 <__retarget_lock_release_recursive>:
 8001734:	4770      	bx	lr

08001736 <memset>:
 8001736:	4402      	add	r2, r0
 8001738:	4603      	mov	r3, r0
 800173a:	4293      	cmp	r3, r2
 800173c:	d100      	bne.n	8001740 <memset+0xa>
 800173e:	4770      	bx	lr
 8001740:	f803 1b01 	strb.w	r1, [r3], #1
 8001744:	e7f9      	b.n	800173a <memset+0x4>
	...

08001748 <_malloc_r>:
 8001748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800174a:	1ccd      	adds	r5, r1, #3
 800174c:	f025 0503 	bic.w	r5, r5, #3
 8001750:	3508      	adds	r5, #8
 8001752:	2d0c      	cmp	r5, #12
 8001754:	bf38      	it	cc
 8001756:	250c      	movcc	r5, #12
 8001758:	2d00      	cmp	r5, #0
 800175a:	4606      	mov	r6, r0
 800175c:	db01      	blt.n	8001762 <_malloc_r+0x1a>
 800175e:	42a9      	cmp	r1, r5
 8001760:	d903      	bls.n	800176a <_malloc_r+0x22>
 8001762:	230c      	movs	r3, #12
 8001764:	6033      	str	r3, [r6, #0]
 8001766:	2000      	movs	r0, #0
 8001768:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800176a:	f000 fb43 	bl	8001df4 <__malloc_lock>
 800176e:	4921      	ldr	r1, [pc, #132]	; (80017f4 <_malloc_r+0xac>)
 8001770:	680a      	ldr	r2, [r1, #0]
 8001772:	4614      	mov	r4, r2
 8001774:	b99c      	cbnz	r4, 800179e <_malloc_r+0x56>
 8001776:	4f20      	ldr	r7, [pc, #128]	; (80017f8 <_malloc_r+0xb0>)
 8001778:	683b      	ldr	r3, [r7, #0]
 800177a:	b923      	cbnz	r3, 8001786 <_malloc_r+0x3e>
 800177c:	4621      	mov	r1, r4
 800177e:	4630      	mov	r0, r6
 8001780:	f000 f8ca 	bl	8001918 <_sbrk_r>
 8001784:	6038      	str	r0, [r7, #0]
 8001786:	4629      	mov	r1, r5
 8001788:	4630      	mov	r0, r6
 800178a:	f000 f8c5 	bl	8001918 <_sbrk_r>
 800178e:	1c43      	adds	r3, r0, #1
 8001790:	d123      	bne.n	80017da <_malloc_r+0x92>
 8001792:	230c      	movs	r3, #12
 8001794:	6033      	str	r3, [r6, #0]
 8001796:	4630      	mov	r0, r6
 8001798:	f000 fb32 	bl	8001e00 <__malloc_unlock>
 800179c:	e7e3      	b.n	8001766 <_malloc_r+0x1e>
 800179e:	6823      	ldr	r3, [r4, #0]
 80017a0:	1b5b      	subs	r3, r3, r5
 80017a2:	d417      	bmi.n	80017d4 <_malloc_r+0x8c>
 80017a4:	2b0b      	cmp	r3, #11
 80017a6:	d903      	bls.n	80017b0 <_malloc_r+0x68>
 80017a8:	6023      	str	r3, [r4, #0]
 80017aa:	441c      	add	r4, r3
 80017ac:	6025      	str	r5, [r4, #0]
 80017ae:	e004      	b.n	80017ba <_malloc_r+0x72>
 80017b0:	6863      	ldr	r3, [r4, #4]
 80017b2:	42a2      	cmp	r2, r4
 80017b4:	bf0c      	ite	eq
 80017b6:	600b      	streq	r3, [r1, #0]
 80017b8:	6053      	strne	r3, [r2, #4]
 80017ba:	4630      	mov	r0, r6
 80017bc:	f000 fb20 	bl	8001e00 <__malloc_unlock>
 80017c0:	f104 000b 	add.w	r0, r4, #11
 80017c4:	1d23      	adds	r3, r4, #4
 80017c6:	f020 0007 	bic.w	r0, r0, #7
 80017ca:	1ac2      	subs	r2, r0, r3
 80017cc:	d0cc      	beq.n	8001768 <_malloc_r+0x20>
 80017ce:	1a1b      	subs	r3, r3, r0
 80017d0:	50a3      	str	r3, [r4, r2]
 80017d2:	e7c9      	b.n	8001768 <_malloc_r+0x20>
 80017d4:	4622      	mov	r2, r4
 80017d6:	6864      	ldr	r4, [r4, #4]
 80017d8:	e7cc      	b.n	8001774 <_malloc_r+0x2c>
 80017da:	1cc4      	adds	r4, r0, #3
 80017dc:	f024 0403 	bic.w	r4, r4, #3
 80017e0:	42a0      	cmp	r0, r4
 80017e2:	d0e3      	beq.n	80017ac <_malloc_r+0x64>
 80017e4:	1a21      	subs	r1, r4, r0
 80017e6:	4630      	mov	r0, r6
 80017e8:	f000 f896 	bl	8001918 <_sbrk_r>
 80017ec:	3001      	adds	r0, #1
 80017ee:	d1dd      	bne.n	80017ac <_malloc_r+0x64>
 80017f0:	e7cf      	b.n	8001792 <_malloc_r+0x4a>
 80017f2:	bf00      	nop
 80017f4:	20000138 	.word	0x20000138
 80017f8:	2000013c 	.word	0x2000013c

080017fc <iprintf>:
 80017fc:	b40f      	push	{r0, r1, r2, r3}
 80017fe:	4b0a      	ldr	r3, [pc, #40]	; (8001828 <iprintf+0x2c>)
 8001800:	b513      	push	{r0, r1, r4, lr}
 8001802:	681c      	ldr	r4, [r3, #0]
 8001804:	b124      	cbz	r4, 8001810 <iprintf+0x14>
 8001806:	69a3      	ldr	r3, [r4, #24]
 8001808:	b913      	cbnz	r3, 8001810 <iprintf+0x14>
 800180a:	4620      	mov	r0, r4
 800180c:	f7ff fece 	bl	80015ac <__sinit>
 8001810:	ab05      	add	r3, sp, #20
 8001812:	9a04      	ldr	r2, [sp, #16]
 8001814:	68a1      	ldr	r1, [r4, #8]
 8001816:	9301      	str	r3, [sp, #4]
 8001818:	4620      	mov	r0, r4
 800181a:	f000 fb6d 	bl	8001ef8 <_vfiprintf_r>
 800181e:	b002      	add	sp, #8
 8001820:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001824:	b004      	add	sp, #16
 8001826:	4770      	bx	lr
 8001828:	20000008 	.word	0x20000008

0800182c <_puts_r>:
 800182c:	b570      	push	{r4, r5, r6, lr}
 800182e:	460e      	mov	r6, r1
 8001830:	4605      	mov	r5, r0
 8001832:	b118      	cbz	r0, 800183c <_puts_r+0x10>
 8001834:	6983      	ldr	r3, [r0, #24]
 8001836:	b90b      	cbnz	r3, 800183c <_puts_r+0x10>
 8001838:	f7ff feb8 	bl	80015ac <__sinit>
 800183c:	69ab      	ldr	r3, [r5, #24]
 800183e:	68ac      	ldr	r4, [r5, #8]
 8001840:	b913      	cbnz	r3, 8001848 <_puts_r+0x1c>
 8001842:	4628      	mov	r0, r5
 8001844:	f7ff feb2 	bl	80015ac <__sinit>
 8001848:	4b2c      	ldr	r3, [pc, #176]	; (80018fc <_puts_r+0xd0>)
 800184a:	429c      	cmp	r4, r3
 800184c:	d120      	bne.n	8001890 <_puts_r+0x64>
 800184e:	686c      	ldr	r4, [r5, #4]
 8001850:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001852:	07db      	lsls	r3, r3, #31
 8001854:	d405      	bmi.n	8001862 <_puts_r+0x36>
 8001856:	89a3      	ldrh	r3, [r4, #12]
 8001858:	0598      	lsls	r0, r3, #22
 800185a:	d402      	bmi.n	8001862 <_puts_r+0x36>
 800185c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800185e:	f7ff ff68 	bl	8001732 <__retarget_lock_acquire_recursive>
 8001862:	89a3      	ldrh	r3, [r4, #12]
 8001864:	0719      	lsls	r1, r3, #28
 8001866:	d51d      	bpl.n	80018a4 <_puts_r+0x78>
 8001868:	6923      	ldr	r3, [r4, #16]
 800186a:	b1db      	cbz	r3, 80018a4 <_puts_r+0x78>
 800186c:	3e01      	subs	r6, #1
 800186e:	68a3      	ldr	r3, [r4, #8]
 8001870:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001874:	3b01      	subs	r3, #1
 8001876:	60a3      	str	r3, [r4, #8]
 8001878:	bb39      	cbnz	r1, 80018ca <_puts_r+0x9e>
 800187a:	2b00      	cmp	r3, #0
 800187c:	da38      	bge.n	80018f0 <_puts_r+0xc4>
 800187e:	4622      	mov	r2, r4
 8001880:	210a      	movs	r1, #10
 8001882:	4628      	mov	r0, r5
 8001884:	f000 f89c 	bl	80019c0 <__swbuf_r>
 8001888:	3001      	adds	r0, #1
 800188a:	d011      	beq.n	80018b0 <_puts_r+0x84>
 800188c:	250a      	movs	r5, #10
 800188e:	e011      	b.n	80018b4 <_puts_r+0x88>
 8001890:	4b1b      	ldr	r3, [pc, #108]	; (8001900 <_puts_r+0xd4>)
 8001892:	429c      	cmp	r4, r3
 8001894:	d101      	bne.n	800189a <_puts_r+0x6e>
 8001896:	68ac      	ldr	r4, [r5, #8]
 8001898:	e7da      	b.n	8001850 <_puts_r+0x24>
 800189a:	4b1a      	ldr	r3, [pc, #104]	; (8001904 <_puts_r+0xd8>)
 800189c:	429c      	cmp	r4, r3
 800189e:	bf08      	it	eq
 80018a0:	68ec      	ldreq	r4, [r5, #12]
 80018a2:	e7d5      	b.n	8001850 <_puts_r+0x24>
 80018a4:	4621      	mov	r1, r4
 80018a6:	4628      	mov	r0, r5
 80018a8:	f000 f8ee 	bl	8001a88 <__swsetup_r>
 80018ac:	2800      	cmp	r0, #0
 80018ae:	d0dd      	beq.n	800186c <_puts_r+0x40>
 80018b0:	f04f 35ff 	mov.w	r5, #4294967295
 80018b4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80018b6:	07da      	lsls	r2, r3, #31
 80018b8:	d405      	bmi.n	80018c6 <_puts_r+0x9a>
 80018ba:	89a3      	ldrh	r3, [r4, #12]
 80018bc:	059b      	lsls	r3, r3, #22
 80018be:	d402      	bmi.n	80018c6 <_puts_r+0x9a>
 80018c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80018c2:	f7ff ff37 	bl	8001734 <__retarget_lock_release_recursive>
 80018c6:	4628      	mov	r0, r5
 80018c8:	bd70      	pop	{r4, r5, r6, pc}
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	da04      	bge.n	80018d8 <_puts_r+0xac>
 80018ce:	69a2      	ldr	r2, [r4, #24]
 80018d0:	429a      	cmp	r2, r3
 80018d2:	dc06      	bgt.n	80018e2 <_puts_r+0xb6>
 80018d4:	290a      	cmp	r1, #10
 80018d6:	d004      	beq.n	80018e2 <_puts_r+0xb6>
 80018d8:	6823      	ldr	r3, [r4, #0]
 80018da:	1c5a      	adds	r2, r3, #1
 80018dc:	6022      	str	r2, [r4, #0]
 80018de:	7019      	strb	r1, [r3, #0]
 80018e0:	e7c5      	b.n	800186e <_puts_r+0x42>
 80018e2:	4622      	mov	r2, r4
 80018e4:	4628      	mov	r0, r5
 80018e6:	f000 f86b 	bl	80019c0 <__swbuf_r>
 80018ea:	3001      	adds	r0, #1
 80018ec:	d1bf      	bne.n	800186e <_puts_r+0x42>
 80018ee:	e7df      	b.n	80018b0 <_puts_r+0x84>
 80018f0:	6823      	ldr	r3, [r4, #0]
 80018f2:	250a      	movs	r5, #10
 80018f4:	1c5a      	adds	r2, r3, #1
 80018f6:	6022      	str	r2, [r4, #0]
 80018f8:	701d      	strb	r5, [r3, #0]
 80018fa:	e7db      	b.n	80018b4 <_puts_r+0x88>
 80018fc:	080025b4 	.word	0x080025b4
 8001900:	080025d4 	.word	0x080025d4
 8001904:	08002594 	.word	0x08002594

08001908 <puts>:
 8001908:	4b02      	ldr	r3, [pc, #8]	; (8001914 <puts+0xc>)
 800190a:	4601      	mov	r1, r0
 800190c:	6818      	ldr	r0, [r3, #0]
 800190e:	f7ff bf8d 	b.w	800182c <_puts_r>
 8001912:	bf00      	nop
 8001914:	20000008 	.word	0x20000008

08001918 <_sbrk_r>:
 8001918:	b538      	push	{r3, r4, r5, lr}
 800191a:	4d06      	ldr	r5, [pc, #24]	; (8001934 <_sbrk_r+0x1c>)
 800191c:	2300      	movs	r3, #0
 800191e:	4604      	mov	r4, r0
 8001920:	4608      	mov	r0, r1
 8001922:	602b      	str	r3, [r5, #0]
 8001924:	f7fe ff3c 	bl	80007a0 <_sbrk>
 8001928:	1c43      	adds	r3, r0, #1
 800192a:	d102      	bne.n	8001932 <_sbrk_r+0x1a>
 800192c:	682b      	ldr	r3, [r5, #0]
 800192e:	b103      	cbz	r3, 8001932 <_sbrk_r+0x1a>
 8001930:	6023      	str	r3, [r4, #0]
 8001932:	bd38      	pop	{r3, r4, r5, pc}
 8001934:	2000014c 	.word	0x2000014c

08001938 <__sread>:
 8001938:	b510      	push	{r4, lr}
 800193a:	460c      	mov	r4, r1
 800193c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001940:	f000 fd9e 	bl	8002480 <_read_r>
 8001944:	2800      	cmp	r0, #0
 8001946:	bfab      	itete	ge
 8001948:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800194a:	89a3      	ldrhlt	r3, [r4, #12]
 800194c:	181b      	addge	r3, r3, r0
 800194e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001952:	bfac      	ite	ge
 8001954:	6563      	strge	r3, [r4, #84]	; 0x54
 8001956:	81a3      	strhlt	r3, [r4, #12]
 8001958:	bd10      	pop	{r4, pc}

0800195a <__swrite>:
 800195a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800195e:	461f      	mov	r7, r3
 8001960:	898b      	ldrh	r3, [r1, #12]
 8001962:	05db      	lsls	r3, r3, #23
 8001964:	4605      	mov	r5, r0
 8001966:	460c      	mov	r4, r1
 8001968:	4616      	mov	r6, r2
 800196a:	d505      	bpl.n	8001978 <__swrite+0x1e>
 800196c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001970:	2302      	movs	r3, #2
 8001972:	2200      	movs	r2, #0
 8001974:	f000 f9c8 	bl	8001d08 <_lseek_r>
 8001978:	89a3      	ldrh	r3, [r4, #12]
 800197a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800197e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001982:	81a3      	strh	r3, [r4, #12]
 8001984:	4632      	mov	r2, r6
 8001986:	463b      	mov	r3, r7
 8001988:	4628      	mov	r0, r5
 800198a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800198e:	f000 b869 	b.w	8001a64 <_write_r>

08001992 <__sseek>:
 8001992:	b510      	push	{r4, lr}
 8001994:	460c      	mov	r4, r1
 8001996:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800199a:	f000 f9b5 	bl	8001d08 <_lseek_r>
 800199e:	1c43      	adds	r3, r0, #1
 80019a0:	89a3      	ldrh	r3, [r4, #12]
 80019a2:	bf15      	itete	ne
 80019a4:	6560      	strne	r0, [r4, #84]	; 0x54
 80019a6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80019aa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80019ae:	81a3      	strheq	r3, [r4, #12]
 80019b0:	bf18      	it	ne
 80019b2:	81a3      	strhne	r3, [r4, #12]
 80019b4:	bd10      	pop	{r4, pc}

080019b6 <__sclose>:
 80019b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80019ba:	f000 b8d3 	b.w	8001b64 <_close_r>
	...

080019c0 <__swbuf_r>:
 80019c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019c2:	460e      	mov	r6, r1
 80019c4:	4614      	mov	r4, r2
 80019c6:	4605      	mov	r5, r0
 80019c8:	b118      	cbz	r0, 80019d2 <__swbuf_r+0x12>
 80019ca:	6983      	ldr	r3, [r0, #24]
 80019cc:	b90b      	cbnz	r3, 80019d2 <__swbuf_r+0x12>
 80019ce:	f7ff fded 	bl	80015ac <__sinit>
 80019d2:	4b21      	ldr	r3, [pc, #132]	; (8001a58 <__swbuf_r+0x98>)
 80019d4:	429c      	cmp	r4, r3
 80019d6:	d12b      	bne.n	8001a30 <__swbuf_r+0x70>
 80019d8:	686c      	ldr	r4, [r5, #4]
 80019da:	69a3      	ldr	r3, [r4, #24]
 80019dc:	60a3      	str	r3, [r4, #8]
 80019de:	89a3      	ldrh	r3, [r4, #12]
 80019e0:	071a      	lsls	r2, r3, #28
 80019e2:	d52f      	bpl.n	8001a44 <__swbuf_r+0x84>
 80019e4:	6923      	ldr	r3, [r4, #16]
 80019e6:	b36b      	cbz	r3, 8001a44 <__swbuf_r+0x84>
 80019e8:	6923      	ldr	r3, [r4, #16]
 80019ea:	6820      	ldr	r0, [r4, #0]
 80019ec:	1ac0      	subs	r0, r0, r3
 80019ee:	6963      	ldr	r3, [r4, #20]
 80019f0:	b2f6      	uxtb	r6, r6
 80019f2:	4283      	cmp	r3, r0
 80019f4:	4637      	mov	r7, r6
 80019f6:	dc04      	bgt.n	8001a02 <__swbuf_r+0x42>
 80019f8:	4621      	mov	r1, r4
 80019fa:	4628      	mov	r0, r5
 80019fc:	f000 f948 	bl	8001c90 <_fflush_r>
 8001a00:	bb30      	cbnz	r0, 8001a50 <__swbuf_r+0x90>
 8001a02:	68a3      	ldr	r3, [r4, #8]
 8001a04:	3b01      	subs	r3, #1
 8001a06:	60a3      	str	r3, [r4, #8]
 8001a08:	6823      	ldr	r3, [r4, #0]
 8001a0a:	1c5a      	adds	r2, r3, #1
 8001a0c:	6022      	str	r2, [r4, #0]
 8001a0e:	701e      	strb	r6, [r3, #0]
 8001a10:	6963      	ldr	r3, [r4, #20]
 8001a12:	3001      	adds	r0, #1
 8001a14:	4283      	cmp	r3, r0
 8001a16:	d004      	beq.n	8001a22 <__swbuf_r+0x62>
 8001a18:	89a3      	ldrh	r3, [r4, #12]
 8001a1a:	07db      	lsls	r3, r3, #31
 8001a1c:	d506      	bpl.n	8001a2c <__swbuf_r+0x6c>
 8001a1e:	2e0a      	cmp	r6, #10
 8001a20:	d104      	bne.n	8001a2c <__swbuf_r+0x6c>
 8001a22:	4621      	mov	r1, r4
 8001a24:	4628      	mov	r0, r5
 8001a26:	f000 f933 	bl	8001c90 <_fflush_r>
 8001a2a:	b988      	cbnz	r0, 8001a50 <__swbuf_r+0x90>
 8001a2c:	4638      	mov	r0, r7
 8001a2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001a30:	4b0a      	ldr	r3, [pc, #40]	; (8001a5c <__swbuf_r+0x9c>)
 8001a32:	429c      	cmp	r4, r3
 8001a34:	d101      	bne.n	8001a3a <__swbuf_r+0x7a>
 8001a36:	68ac      	ldr	r4, [r5, #8]
 8001a38:	e7cf      	b.n	80019da <__swbuf_r+0x1a>
 8001a3a:	4b09      	ldr	r3, [pc, #36]	; (8001a60 <__swbuf_r+0xa0>)
 8001a3c:	429c      	cmp	r4, r3
 8001a3e:	bf08      	it	eq
 8001a40:	68ec      	ldreq	r4, [r5, #12]
 8001a42:	e7ca      	b.n	80019da <__swbuf_r+0x1a>
 8001a44:	4621      	mov	r1, r4
 8001a46:	4628      	mov	r0, r5
 8001a48:	f000 f81e 	bl	8001a88 <__swsetup_r>
 8001a4c:	2800      	cmp	r0, #0
 8001a4e:	d0cb      	beq.n	80019e8 <__swbuf_r+0x28>
 8001a50:	f04f 37ff 	mov.w	r7, #4294967295
 8001a54:	e7ea      	b.n	8001a2c <__swbuf_r+0x6c>
 8001a56:	bf00      	nop
 8001a58:	080025b4 	.word	0x080025b4
 8001a5c:	080025d4 	.word	0x080025d4
 8001a60:	08002594 	.word	0x08002594

08001a64 <_write_r>:
 8001a64:	b538      	push	{r3, r4, r5, lr}
 8001a66:	4d07      	ldr	r5, [pc, #28]	; (8001a84 <_write_r+0x20>)
 8001a68:	4604      	mov	r4, r0
 8001a6a:	4608      	mov	r0, r1
 8001a6c:	4611      	mov	r1, r2
 8001a6e:	2200      	movs	r2, #0
 8001a70:	602a      	str	r2, [r5, #0]
 8001a72:	461a      	mov	r2, r3
 8001a74:	f7ff fb46 	bl	8001104 <_write>
 8001a78:	1c43      	adds	r3, r0, #1
 8001a7a:	d102      	bne.n	8001a82 <_write_r+0x1e>
 8001a7c:	682b      	ldr	r3, [r5, #0]
 8001a7e:	b103      	cbz	r3, 8001a82 <_write_r+0x1e>
 8001a80:	6023      	str	r3, [r4, #0]
 8001a82:	bd38      	pop	{r3, r4, r5, pc}
 8001a84:	2000014c 	.word	0x2000014c

08001a88 <__swsetup_r>:
 8001a88:	4b32      	ldr	r3, [pc, #200]	; (8001b54 <__swsetup_r+0xcc>)
 8001a8a:	b570      	push	{r4, r5, r6, lr}
 8001a8c:	681d      	ldr	r5, [r3, #0]
 8001a8e:	4606      	mov	r6, r0
 8001a90:	460c      	mov	r4, r1
 8001a92:	b125      	cbz	r5, 8001a9e <__swsetup_r+0x16>
 8001a94:	69ab      	ldr	r3, [r5, #24]
 8001a96:	b913      	cbnz	r3, 8001a9e <__swsetup_r+0x16>
 8001a98:	4628      	mov	r0, r5
 8001a9a:	f7ff fd87 	bl	80015ac <__sinit>
 8001a9e:	4b2e      	ldr	r3, [pc, #184]	; (8001b58 <__swsetup_r+0xd0>)
 8001aa0:	429c      	cmp	r4, r3
 8001aa2:	d10f      	bne.n	8001ac4 <__swsetup_r+0x3c>
 8001aa4:	686c      	ldr	r4, [r5, #4]
 8001aa6:	89a3      	ldrh	r3, [r4, #12]
 8001aa8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001aac:	0719      	lsls	r1, r3, #28
 8001aae:	d42c      	bmi.n	8001b0a <__swsetup_r+0x82>
 8001ab0:	06dd      	lsls	r5, r3, #27
 8001ab2:	d411      	bmi.n	8001ad8 <__swsetup_r+0x50>
 8001ab4:	2309      	movs	r3, #9
 8001ab6:	6033      	str	r3, [r6, #0]
 8001ab8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001abc:	81a3      	strh	r3, [r4, #12]
 8001abe:	f04f 30ff 	mov.w	r0, #4294967295
 8001ac2:	e03e      	b.n	8001b42 <__swsetup_r+0xba>
 8001ac4:	4b25      	ldr	r3, [pc, #148]	; (8001b5c <__swsetup_r+0xd4>)
 8001ac6:	429c      	cmp	r4, r3
 8001ac8:	d101      	bne.n	8001ace <__swsetup_r+0x46>
 8001aca:	68ac      	ldr	r4, [r5, #8]
 8001acc:	e7eb      	b.n	8001aa6 <__swsetup_r+0x1e>
 8001ace:	4b24      	ldr	r3, [pc, #144]	; (8001b60 <__swsetup_r+0xd8>)
 8001ad0:	429c      	cmp	r4, r3
 8001ad2:	bf08      	it	eq
 8001ad4:	68ec      	ldreq	r4, [r5, #12]
 8001ad6:	e7e6      	b.n	8001aa6 <__swsetup_r+0x1e>
 8001ad8:	0758      	lsls	r0, r3, #29
 8001ada:	d512      	bpl.n	8001b02 <__swsetup_r+0x7a>
 8001adc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001ade:	b141      	cbz	r1, 8001af2 <__swsetup_r+0x6a>
 8001ae0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001ae4:	4299      	cmp	r1, r3
 8001ae6:	d002      	beq.n	8001aee <__swsetup_r+0x66>
 8001ae8:	4630      	mov	r0, r6
 8001aea:	f000 f98f 	bl	8001e0c <_free_r>
 8001aee:	2300      	movs	r3, #0
 8001af0:	6363      	str	r3, [r4, #52]	; 0x34
 8001af2:	89a3      	ldrh	r3, [r4, #12]
 8001af4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001af8:	81a3      	strh	r3, [r4, #12]
 8001afa:	2300      	movs	r3, #0
 8001afc:	6063      	str	r3, [r4, #4]
 8001afe:	6923      	ldr	r3, [r4, #16]
 8001b00:	6023      	str	r3, [r4, #0]
 8001b02:	89a3      	ldrh	r3, [r4, #12]
 8001b04:	f043 0308 	orr.w	r3, r3, #8
 8001b08:	81a3      	strh	r3, [r4, #12]
 8001b0a:	6923      	ldr	r3, [r4, #16]
 8001b0c:	b94b      	cbnz	r3, 8001b22 <__swsetup_r+0x9a>
 8001b0e:	89a3      	ldrh	r3, [r4, #12]
 8001b10:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001b14:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001b18:	d003      	beq.n	8001b22 <__swsetup_r+0x9a>
 8001b1a:	4621      	mov	r1, r4
 8001b1c:	4630      	mov	r0, r6
 8001b1e:	f000 f929 	bl	8001d74 <__smakebuf_r>
 8001b22:	89a0      	ldrh	r0, [r4, #12]
 8001b24:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001b28:	f010 0301 	ands.w	r3, r0, #1
 8001b2c:	d00a      	beq.n	8001b44 <__swsetup_r+0xbc>
 8001b2e:	2300      	movs	r3, #0
 8001b30:	60a3      	str	r3, [r4, #8]
 8001b32:	6963      	ldr	r3, [r4, #20]
 8001b34:	425b      	negs	r3, r3
 8001b36:	61a3      	str	r3, [r4, #24]
 8001b38:	6923      	ldr	r3, [r4, #16]
 8001b3a:	b943      	cbnz	r3, 8001b4e <__swsetup_r+0xc6>
 8001b3c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001b40:	d1ba      	bne.n	8001ab8 <__swsetup_r+0x30>
 8001b42:	bd70      	pop	{r4, r5, r6, pc}
 8001b44:	0781      	lsls	r1, r0, #30
 8001b46:	bf58      	it	pl
 8001b48:	6963      	ldrpl	r3, [r4, #20]
 8001b4a:	60a3      	str	r3, [r4, #8]
 8001b4c:	e7f4      	b.n	8001b38 <__swsetup_r+0xb0>
 8001b4e:	2000      	movs	r0, #0
 8001b50:	e7f7      	b.n	8001b42 <__swsetup_r+0xba>
 8001b52:	bf00      	nop
 8001b54:	20000008 	.word	0x20000008
 8001b58:	080025b4 	.word	0x080025b4
 8001b5c:	080025d4 	.word	0x080025d4
 8001b60:	08002594 	.word	0x08002594

08001b64 <_close_r>:
 8001b64:	b538      	push	{r3, r4, r5, lr}
 8001b66:	4d06      	ldr	r5, [pc, #24]	; (8001b80 <_close_r+0x1c>)
 8001b68:	2300      	movs	r3, #0
 8001b6a:	4604      	mov	r4, r0
 8001b6c:	4608      	mov	r0, r1
 8001b6e:	602b      	str	r3, [r5, #0]
 8001b70:	f7ff faf6 	bl	8001160 <_close>
 8001b74:	1c43      	adds	r3, r0, #1
 8001b76:	d102      	bne.n	8001b7e <_close_r+0x1a>
 8001b78:	682b      	ldr	r3, [r5, #0]
 8001b7a:	b103      	cbz	r3, 8001b7e <_close_r+0x1a>
 8001b7c:	6023      	str	r3, [r4, #0]
 8001b7e:	bd38      	pop	{r3, r4, r5, pc}
 8001b80:	2000014c 	.word	0x2000014c

08001b84 <__sflush_r>:
 8001b84:	898a      	ldrh	r2, [r1, #12]
 8001b86:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b8a:	4605      	mov	r5, r0
 8001b8c:	0710      	lsls	r0, r2, #28
 8001b8e:	460c      	mov	r4, r1
 8001b90:	d458      	bmi.n	8001c44 <__sflush_r+0xc0>
 8001b92:	684b      	ldr	r3, [r1, #4]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	dc05      	bgt.n	8001ba4 <__sflush_r+0x20>
 8001b98:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001b9a:	2b00      	cmp	r3, #0
 8001b9c:	dc02      	bgt.n	8001ba4 <__sflush_r+0x20>
 8001b9e:	2000      	movs	r0, #0
 8001ba0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ba4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001ba6:	2e00      	cmp	r6, #0
 8001ba8:	d0f9      	beq.n	8001b9e <__sflush_r+0x1a>
 8001baa:	2300      	movs	r3, #0
 8001bac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001bb0:	682f      	ldr	r7, [r5, #0]
 8001bb2:	602b      	str	r3, [r5, #0]
 8001bb4:	d032      	beq.n	8001c1c <__sflush_r+0x98>
 8001bb6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001bb8:	89a3      	ldrh	r3, [r4, #12]
 8001bba:	075a      	lsls	r2, r3, #29
 8001bbc:	d505      	bpl.n	8001bca <__sflush_r+0x46>
 8001bbe:	6863      	ldr	r3, [r4, #4]
 8001bc0:	1ac0      	subs	r0, r0, r3
 8001bc2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001bc4:	b10b      	cbz	r3, 8001bca <__sflush_r+0x46>
 8001bc6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bc8:	1ac0      	subs	r0, r0, r3
 8001bca:	2300      	movs	r3, #0
 8001bcc:	4602      	mov	r2, r0
 8001bce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001bd0:	6a21      	ldr	r1, [r4, #32]
 8001bd2:	4628      	mov	r0, r5
 8001bd4:	47b0      	blx	r6
 8001bd6:	1c43      	adds	r3, r0, #1
 8001bd8:	89a3      	ldrh	r3, [r4, #12]
 8001bda:	d106      	bne.n	8001bea <__sflush_r+0x66>
 8001bdc:	6829      	ldr	r1, [r5, #0]
 8001bde:	291d      	cmp	r1, #29
 8001be0:	d82c      	bhi.n	8001c3c <__sflush_r+0xb8>
 8001be2:	4a2a      	ldr	r2, [pc, #168]	; (8001c8c <__sflush_r+0x108>)
 8001be4:	40ca      	lsrs	r2, r1
 8001be6:	07d6      	lsls	r6, r2, #31
 8001be8:	d528      	bpl.n	8001c3c <__sflush_r+0xb8>
 8001bea:	2200      	movs	r2, #0
 8001bec:	6062      	str	r2, [r4, #4]
 8001bee:	04d9      	lsls	r1, r3, #19
 8001bf0:	6922      	ldr	r2, [r4, #16]
 8001bf2:	6022      	str	r2, [r4, #0]
 8001bf4:	d504      	bpl.n	8001c00 <__sflush_r+0x7c>
 8001bf6:	1c42      	adds	r2, r0, #1
 8001bf8:	d101      	bne.n	8001bfe <__sflush_r+0x7a>
 8001bfa:	682b      	ldr	r3, [r5, #0]
 8001bfc:	b903      	cbnz	r3, 8001c00 <__sflush_r+0x7c>
 8001bfe:	6560      	str	r0, [r4, #84]	; 0x54
 8001c00:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001c02:	602f      	str	r7, [r5, #0]
 8001c04:	2900      	cmp	r1, #0
 8001c06:	d0ca      	beq.n	8001b9e <__sflush_r+0x1a>
 8001c08:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001c0c:	4299      	cmp	r1, r3
 8001c0e:	d002      	beq.n	8001c16 <__sflush_r+0x92>
 8001c10:	4628      	mov	r0, r5
 8001c12:	f000 f8fb 	bl	8001e0c <_free_r>
 8001c16:	2000      	movs	r0, #0
 8001c18:	6360      	str	r0, [r4, #52]	; 0x34
 8001c1a:	e7c1      	b.n	8001ba0 <__sflush_r+0x1c>
 8001c1c:	6a21      	ldr	r1, [r4, #32]
 8001c1e:	2301      	movs	r3, #1
 8001c20:	4628      	mov	r0, r5
 8001c22:	47b0      	blx	r6
 8001c24:	1c41      	adds	r1, r0, #1
 8001c26:	d1c7      	bne.n	8001bb8 <__sflush_r+0x34>
 8001c28:	682b      	ldr	r3, [r5, #0]
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d0c4      	beq.n	8001bb8 <__sflush_r+0x34>
 8001c2e:	2b1d      	cmp	r3, #29
 8001c30:	d001      	beq.n	8001c36 <__sflush_r+0xb2>
 8001c32:	2b16      	cmp	r3, #22
 8001c34:	d101      	bne.n	8001c3a <__sflush_r+0xb6>
 8001c36:	602f      	str	r7, [r5, #0]
 8001c38:	e7b1      	b.n	8001b9e <__sflush_r+0x1a>
 8001c3a:	89a3      	ldrh	r3, [r4, #12]
 8001c3c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c40:	81a3      	strh	r3, [r4, #12]
 8001c42:	e7ad      	b.n	8001ba0 <__sflush_r+0x1c>
 8001c44:	690f      	ldr	r7, [r1, #16]
 8001c46:	2f00      	cmp	r7, #0
 8001c48:	d0a9      	beq.n	8001b9e <__sflush_r+0x1a>
 8001c4a:	0793      	lsls	r3, r2, #30
 8001c4c:	680e      	ldr	r6, [r1, #0]
 8001c4e:	bf08      	it	eq
 8001c50:	694b      	ldreq	r3, [r1, #20]
 8001c52:	600f      	str	r7, [r1, #0]
 8001c54:	bf18      	it	ne
 8001c56:	2300      	movne	r3, #0
 8001c58:	eba6 0807 	sub.w	r8, r6, r7
 8001c5c:	608b      	str	r3, [r1, #8]
 8001c5e:	f1b8 0f00 	cmp.w	r8, #0
 8001c62:	dd9c      	ble.n	8001b9e <__sflush_r+0x1a>
 8001c64:	6a21      	ldr	r1, [r4, #32]
 8001c66:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001c68:	4643      	mov	r3, r8
 8001c6a:	463a      	mov	r2, r7
 8001c6c:	4628      	mov	r0, r5
 8001c6e:	47b0      	blx	r6
 8001c70:	2800      	cmp	r0, #0
 8001c72:	dc06      	bgt.n	8001c82 <__sflush_r+0xfe>
 8001c74:	89a3      	ldrh	r3, [r4, #12]
 8001c76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001c7a:	81a3      	strh	r3, [r4, #12]
 8001c7c:	f04f 30ff 	mov.w	r0, #4294967295
 8001c80:	e78e      	b.n	8001ba0 <__sflush_r+0x1c>
 8001c82:	4407      	add	r7, r0
 8001c84:	eba8 0800 	sub.w	r8, r8, r0
 8001c88:	e7e9      	b.n	8001c5e <__sflush_r+0xda>
 8001c8a:	bf00      	nop
 8001c8c:	20400001 	.word	0x20400001

08001c90 <_fflush_r>:
 8001c90:	b538      	push	{r3, r4, r5, lr}
 8001c92:	690b      	ldr	r3, [r1, #16]
 8001c94:	4605      	mov	r5, r0
 8001c96:	460c      	mov	r4, r1
 8001c98:	b913      	cbnz	r3, 8001ca0 <_fflush_r+0x10>
 8001c9a:	2500      	movs	r5, #0
 8001c9c:	4628      	mov	r0, r5
 8001c9e:	bd38      	pop	{r3, r4, r5, pc}
 8001ca0:	b118      	cbz	r0, 8001caa <_fflush_r+0x1a>
 8001ca2:	6983      	ldr	r3, [r0, #24]
 8001ca4:	b90b      	cbnz	r3, 8001caa <_fflush_r+0x1a>
 8001ca6:	f7ff fc81 	bl	80015ac <__sinit>
 8001caa:	4b14      	ldr	r3, [pc, #80]	; (8001cfc <_fflush_r+0x6c>)
 8001cac:	429c      	cmp	r4, r3
 8001cae:	d11b      	bne.n	8001ce8 <_fflush_r+0x58>
 8001cb0:	686c      	ldr	r4, [r5, #4]
 8001cb2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d0ef      	beq.n	8001c9a <_fflush_r+0xa>
 8001cba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001cbc:	07d0      	lsls	r0, r2, #31
 8001cbe:	d404      	bmi.n	8001cca <_fflush_r+0x3a>
 8001cc0:	0599      	lsls	r1, r3, #22
 8001cc2:	d402      	bmi.n	8001cca <_fflush_r+0x3a>
 8001cc4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001cc6:	f7ff fd34 	bl	8001732 <__retarget_lock_acquire_recursive>
 8001cca:	4628      	mov	r0, r5
 8001ccc:	4621      	mov	r1, r4
 8001cce:	f7ff ff59 	bl	8001b84 <__sflush_r>
 8001cd2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001cd4:	07da      	lsls	r2, r3, #31
 8001cd6:	4605      	mov	r5, r0
 8001cd8:	d4e0      	bmi.n	8001c9c <_fflush_r+0xc>
 8001cda:	89a3      	ldrh	r3, [r4, #12]
 8001cdc:	059b      	lsls	r3, r3, #22
 8001cde:	d4dd      	bmi.n	8001c9c <_fflush_r+0xc>
 8001ce0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001ce2:	f7ff fd27 	bl	8001734 <__retarget_lock_release_recursive>
 8001ce6:	e7d9      	b.n	8001c9c <_fflush_r+0xc>
 8001ce8:	4b05      	ldr	r3, [pc, #20]	; (8001d00 <_fflush_r+0x70>)
 8001cea:	429c      	cmp	r4, r3
 8001cec:	d101      	bne.n	8001cf2 <_fflush_r+0x62>
 8001cee:	68ac      	ldr	r4, [r5, #8]
 8001cf0:	e7df      	b.n	8001cb2 <_fflush_r+0x22>
 8001cf2:	4b04      	ldr	r3, [pc, #16]	; (8001d04 <_fflush_r+0x74>)
 8001cf4:	429c      	cmp	r4, r3
 8001cf6:	bf08      	it	eq
 8001cf8:	68ec      	ldreq	r4, [r5, #12]
 8001cfa:	e7da      	b.n	8001cb2 <_fflush_r+0x22>
 8001cfc:	080025b4 	.word	0x080025b4
 8001d00:	080025d4 	.word	0x080025d4
 8001d04:	08002594 	.word	0x08002594

08001d08 <_lseek_r>:
 8001d08:	b538      	push	{r3, r4, r5, lr}
 8001d0a:	4d07      	ldr	r5, [pc, #28]	; (8001d28 <_lseek_r+0x20>)
 8001d0c:	4604      	mov	r4, r0
 8001d0e:	4608      	mov	r0, r1
 8001d10:	4611      	mov	r1, r2
 8001d12:	2200      	movs	r2, #0
 8001d14:	602a      	str	r2, [r5, #0]
 8001d16:	461a      	mov	r2, r3
 8001d18:	f7ff f9e2 	bl	80010e0 <_lseek>
 8001d1c:	1c43      	adds	r3, r0, #1
 8001d1e:	d102      	bne.n	8001d26 <_lseek_r+0x1e>
 8001d20:	682b      	ldr	r3, [r5, #0]
 8001d22:	b103      	cbz	r3, 8001d26 <_lseek_r+0x1e>
 8001d24:	6023      	str	r3, [r4, #0]
 8001d26:	bd38      	pop	{r3, r4, r5, pc}
 8001d28:	2000014c 	.word	0x2000014c

08001d2c <__swhatbuf_r>:
 8001d2c:	b570      	push	{r4, r5, r6, lr}
 8001d2e:	460e      	mov	r6, r1
 8001d30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001d34:	2900      	cmp	r1, #0
 8001d36:	b096      	sub	sp, #88	; 0x58
 8001d38:	4614      	mov	r4, r2
 8001d3a:	461d      	mov	r5, r3
 8001d3c:	da07      	bge.n	8001d4e <__swhatbuf_r+0x22>
 8001d3e:	2300      	movs	r3, #0
 8001d40:	602b      	str	r3, [r5, #0]
 8001d42:	89b3      	ldrh	r3, [r6, #12]
 8001d44:	061a      	lsls	r2, r3, #24
 8001d46:	d410      	bmi.n	8001d6a <__swhatbuf_r+0x3e>
 8001d48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001d4c:	e00e      	b.n	8001d6c <__swhatbuf_r+0x40>
 8001d4e:	466a      	mov	r2, sp
 8001d50:	f000 fba8 	bl	80024a4 <_fstat_r>
 8001d54:	2800      	cmp	r0, #0
 8001d56:	dbf2      	blt.n	8001d3e <__swhatbuf_r+0x12>
 8001d58:	9a01      	ldr	r2, [sp, #4]
 8001d5a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001d5e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001d62:	425a      	negs	r2, r3
 8001d64:	415a      	adcs	r2, r3
 8001d66:	602a      	str	r2, [r5, #0]
 8001d68:	e7ee      	b.n	8001d48 <__swhatbuf_r+0x1c>
 8001d6a:	2340      	movs	r3, #64	; 0x40
 8001d6c:	2000      	movs	r0, #0
 8001d6e:	6023      	str	r3, [r4, #0]
 8001d70:	b016      	add	sp, #88	; 0x58
 8001d72:	bd70      	pop	{r4, r5, r6, pc}

08001d74 <__smakebuf_r>:
 8001d74:	898b      	ldrh	r3, [r1, #12]
 8001d76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001d78:	079d      	lsls	r5, r3, #30
 8001d7a:	4606      	mov	r6, r0
 8001d7c:	460c      	mov	r4, r1
 8001d7e:	d507      	bpl.n	8001d90 <__smakebuf_r+0x1c>
 8001d80:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001d84:	6023      	str	r3, [r4, #0]
 8001d86:	6123      	str	r3, [r4, #16]
 8001d88:	2301      	movs	r3, #1
 8001d8a:	6163      	str	r3, [r4, #20]
 8001d8c:	b002      	add	sp, #8
 8001d8e:	bd70      	pop	{r4, r5, r6, pc}
 8001d90:	ab01      	add	r3, sp, #4
 8001d92:	466a      	mov	r2, sp
 8001d94:	f7ff ffca 	bl	8001d2c <__swhatbuf_r>
 8001d98:	9900      	ldr	r1, [sp, #0]
 8001d9a:	4605      	mov	r5, r0
 8001d9c:	4630      	mov	r0, r6
 8001d9e:	f7ff fcd3 	bl	8001748 <_malloc_r>
 8001da2:	b948      	cbnz	r0, 8001db8 <__smakebuf_r+0x44>
 8001da4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001da8:	059a      	lsls	r2, r3, #22
 8001daa:	d4ef      	bmi.n	8001d8c <__smakebuf_r+0x18>
 8001dac:	f023 0303 	bic.w	r3, r3, #3
 8001db0:	f043 0302 	orr.w	r3, r3, #2
 8001db4:	81a3      	strh	r3, [r4, #12]
 8001db6:	e7e3      	b.n	8001d80 <__smakebuf_r+0xc>
 8001db8:	4b0d      	ldr	r3, [pc, #52]	; (8001df0 <__smakebuf_r+0x7c>)
 8001dba:	62b3      	str	r3, [r6, #40]	; 0x28
 8001dbc:	89a3      	ldrh	r3, [r4, #12]
 8001dbe:	6020      	str	r0, [r4, #0]
 8001dc0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001dc4:	81a3      	strh	r3, [r4, #12]
 8001dc6:	9b00      	ldr	r3, [sp, #0]
 8001dc8:	6163      	str	r3, [r4, #20]
 8001dca:	9b01      	ldr	r3, [sp, #4]
 8001dcc:	6120      	str	r0, [r4, #16]
 8001dce:	b15b      	cbz	r3, 8001de8 <__smakebuf_r+0x74>
 8001dd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001dd4:	4630      	mov	r0, r6
 8001dd6:	f000 fb77 	bl	80024c8 <_isatty_r>
 8001dda:	b128      	cbz	r0, 8001de8 <__smakebuf_r+0x74>
 8001ddc:	89a3      	ldrh	r3, [r4, #12]
 8001dde:	f023 0303 	bic.w	r3, r3, #3
 8001de2:	f043 0301 	orr.w	r3, r3, #1
 8001de6:	81a3      	strh	r3, [r4, #12]
 8001de8:	89a0      	ldrh	r0, [r4, #12]
 8001dea:	4305      	orrs	r5, r0
 8001dec:	81a5      	strh	r5, [r4, #12]
 8001dee:	e7cd      	b.n	8001d8c <__smakebuf_r+0x18>
 8001df0:	08001545 	.word	0x08001545

08001df4 <__malloc_lock>:
 8001df4:	4801      	ldr	r0, [pc, #4]	; (8001dfc <__malloc_lock+0x8>)
 8001df6:	f7ff bc9c 	b.w	8001732 <__retarget_lock_acquire_recursive>
 8001dfa:	bf00      	nop
 8001dfc:	20000144 	.word	0x20000144

08001e00 <__malloc_unlock>:
 8001e00:	4801      	ldr	r0, [pc, #4]	; (8001e08 <__malloc_unlock+0x8>)
 8001e02:	f7ff bc97 	b.w	8001734 <__retarget_lock_release_recursive>
 8001e06:	bf00      	nop
 8001e08:	20000144 	.word	0x20000144

08001e0c <_free_r>:
 8001e0c:	b538      	push	{r3, r4, r5, lr}
 8001e0e:	4605      	mov	r5, r0
 8001e10:	2900      	cmp	r1, #0
 8001e12:	d045      	beq.n	8001ea0 <_free_r+0x94>
 8001e14:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001e18:	1f0c      	subs	r4, r1, #4
 8001e1a:	2b00      	cmp	r3, #0
 8001e1c:	bfb8      	it	lt
 8001e1e:	18e4      	addlt	r4, r4, r3
 8001e20:	f7ff ffe8 	bl	8001df4 <__malloc_lock>
 8001e24:	4a1f      	ldr	r2, [pc, #124]	; (8001ea4 <_free_r+0x98>)
 8001e26:	6813      	ldr	r3, [r2, #0]
 8001e28:	4610      	mov	r0, r2
 8001e2a:	b933      	cbnz	r3, 8001e3a <_free_r+0x2e>
 8001e2c:	6063      	str	r3, [r4, #4]
 8001e2e:	6014      	str	r4, [r2, #0]
 8001e30:	4628      	mov	r0, r5
 8001e32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001e36:	f7ff bfe3 	b.w	8001e00 <__malloc_unlock>
 8001e3a:	42a3      	cmp	r3, r4
 8001e3c:	d90b      	bls.n	8001e56 <_free_r+0x4a>
 8001e3e:	6821      	ldr	r1, [r4, #0]
 8001e40:	1862      	adds	r2, r4, r1
 8001e42:	4293      	cmp	r3, r2
 8001e44:	bf04      	itt	eq
 8001e46:	681a      	ldreq	r2, [r3, #0]
 8001e48:	685b      	ldreq	r3, [r3, #4]
 8001e4a:	6063      	str	r3, [r4, #4]
 8001e4c:	bf04      	itt	eq
 8001e4e:	1852      	addeq	r2, r2, r1
 8001e50:	6022      	streq	r2, [r4, #0]
 8001e52:	6004      	str	r4, [r0, #0]
 8001e54:	e7ec      	b.n	8001e30 <_free_r+0x24>
 8001e56:	461a      	mov	r2, r3
 8001e58:	685b      	ldr	r3, [r3, #4]
 8001e5a:	b10b      	cbz	r3, 8001e60 <_free_r+0x54>
 8001e5c:	42a3      	cmp	r3, r4
 8001e5e:	d9fa      	bls.n	8001e56 <_free_r+0x4a>
 8001e60:	6811      	ldr	r1, [r2, #0]
 8001e62:	1850      	adds	r0, r2, r1
 8001e64:	42a0      	cmp	r0, r4
 8001e66:	d10b      	bne.n	8001e80 <_free_r+0x74>
 8001e68:	6820      	ldr	r0, [r4, #0]
 8001e6a:	4401      	add	r1, r0
 8001e6c:	1850      	adds	r0, r2, r1
 8001e6e:	4283      	cmp	r3, r0
 8001e70:	6011      	str	r1, [r2, #0]
 8001e72:	d1dd      	bne.n	8001e30 <_free_r+0x24>
 8001e74:	6818      	ldr	r0, [r3, #0]
 8001e76:	685b      	ldr	r3, [r3, #4]
 8001e78:	6053      	str	r3, [r2, #4]
 8001e7a:	4401      	add	r1, r0
 8001e7c:	6011      	str	r1, [r2, #0]
 8001e7e:	e7d7      	b.n	8001e30 <_free_r+0x24>
 8001e80:	d902      	bls.n	8001e88 <_free_r+0x7c>
 8001e82:	230c      	movs	r3, #12
 8001e84:	602b      	str	r3, [r5, #0]
 8001e86:	e7d3      	b.n	8001e30 <_free_r+0x24>
 8001e88:	6820      	ldr	r0, [r4, #0]
 8001e8a:	1821      	adds	r1, r4, r0
 8001e8c:	428b      	cmp	r3, r1
 8001e8e:	bf04      	itt	eq
 8001e90:	6819      	ldreq	r1, [r3, #0]
 8001e92:	685b      	ldreq	r3, [r3, #4]
 8001e94:	6063      	str	r3, [r4, #4]
 8001e96:	bf04      	itt	eq
 8001e98:	1809      	addeq	r1, r1, r0
 8001e9a:	6021      	streq	r1, [r4, #0]
 8001e9c:	6054      	str	r4, [r2, #4]
 8001e9e:	e7c7      	b.n	8001e30 <_free_r+0x24>
 8001ea0:	bd38      	pop	{r3, r4, r5, pc}
 8001ea2:	bf00      	nop
 8001ea4:	20000138 	.word	0x20000138

08001ea8 <__sfputc_r>:
 8001ea8:	6893      	ldr	r3, [r2, #8]
 8001eaa:	3b01      	subs	r3, #1
 8001eac:	2b00      	cmp	r3, #0
 8001eae:	b410      	push	{r4}
 8001eb0:	6093      	str	r3, [r2, #8]
 8001eb2:	da07      	bge.n	8001ec4 <__sfputc_r+0x1c>
 8001eb4:	6994      	ldr	r4, [r2, #24]
 8001eb6:	42a3      	cmp	r3, r4
 8001eb8:	db01      	blt.n	8001ebe <__sfputc_r+0x16>
 8001eba:	290a      	cmp	r1, #10
 8001ebc:	d102      	bne.n	8001ec4 <__sfputc_r+0x1c>
 8001ebe:	bc10      	pop	{r4}
 8001ec0:	f7ff bd7e 	b.w	80019c0 <__swbuf_r>
 8001ec4:	6813      	ldr	r3, [r2, #0]
 8001ec6:	1c58      	adds	r0, r3, #1
 8001ec8:	6010      	str	r0, [r2, #0]
 8001eca:	7019      	strb	r1, [r3, #0]
 8001ecc:	4608      	mov	r0, r1
 8001ece:	bc10      	pop	{r4}
 8001ed0:	4770      	bx	lr

08001ed2 <__sfputs_r>:
 8001ed2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ed4:	4606      	mov	r6, r0
 8001ed6:	460f      	mov	r7, r1
 8001ed8:	4614      	mov	r4, r2
 8001eda:	18d5      	adds	r5, r2, r3
 8001edc:	42ac      	cmp	r4, r5
 8001ede:	d101      	bne.n	8001ee4 <__sfputs_r+0x12>
 8001ee0:	2000      	movs	r0, #0
 8001ee2:	e007      	b.n	8001ef4 <__sfputs_r+0x22>
 8001ee4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001ee8:	463a      	mov	r2, r7
 8001eea:	4630      	mov	r0, r6
 8001eec:	f7ff ffdc 	bl	8001ea8 <__sfputc_r>
 8001ef0:	1c43      	adds	r3, r0, #1
 8001ef2:	d1f3      	bne.n	8001edc <__sfputs_r+0xa>
 8001ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001ef8 <_vfiprintf_r>:
 8001ef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001efc:	460d      	mov	r5, r1
 8001efe:	b09d      	sub	sp, #116	; 0x74
 8001f00:	4614      	mov	r4, r2
 8001f02:	4698      	mov	r8, r3
 8001f04:	4606      	mov	r6, r0
 8001f06:	b118      	cbz	r0, 8001f10 <_vfiprintf_r+0x18>
 8001f08:	6983      	ldr	r3, [r0, #24]
 8001f0a:	b90b      	cbnz	r3, 8001f10 <_vfiprintf_r+0x18>
 8001f0c:	f7ff fb4e 	bl	80015ac <__sinit>
 8001f10:	4b89      	ldr	r3, [pc, #548]	; (8002138 <_vfiprintf_r+0x240>)
 8001f12:	429d      	cmp	r5, r3
 8001f14:	d11b      	bne.n	8001f4e <_vfiprintf_r+0x56>
 8001f16:	6875      	ldr	r5, [r6, #4]
 8001f18:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001f1a:	07d9      	lsls	r1, r3, #31
 8001f1c:	d405      	bmi.n	8001f2a <_vfiprintf_r+0x32>
 8001f1e:	89ab      	ldrh	r3, [r5, #12]
 8001f20:	059a      	lsls	r2, r3, #22
 8001f22:	d402      	bmi.n	8001f2a <_vfiprintf_r+0x32>
 8001f24:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001f26:	f7ff fc04 	bl	8001732 <__retarget_lock_acquire_recursive>
 8001f2a:	89ab      	ldrh	r3, [r5, #12]
 8001f2c:	071b      	lsls	r3, r3, #28
 8001f2e:	d501      	bpl.n	8001f34 <_vfiprintf_r+0x3c>
 8001f30:	692b      	ldr	r3, [r5, #16]
 8001f32:	b9eb      	cbnz	r3, 8001f70 <_vfiprintf_r+0x78>
 8001f34:	4629      	mov	r1, r5
 8001f36:	4630      	mov	r0, r6
 8001f38:	f7ff fda6 	bl	8001a88 <__swsetup_r>
 8001f3c:	b1c0      	cbz	r0, 8001f70 <_vfiprintf_r+0x78>
 8001f3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001f40:	07dc      	lsls	r4, r3, #31
 8001f42:	d50e      	bpl.n	8001f62 <_vfiprintf_r+0x6a>
 8001f44:	f04f 30ff 	mov.w	r0, #4294967295
 8001f48:	b01d      	add	sp, #116	; 0x74
 8001f4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001f4e:	4b7b      	ldr	r3, [pc, #492]	; (800213c <_vfiprintf_r+0x244>)
 8001f50:	429d      	cmp	r5, r3
 8001f52:	d101      	bne.n	8001f58 <_vfiprintf_r+0x60>
 8001f54:	68b5      	ldr	r5, [r6, #8]
 8001f56:	e7df      	b.n	8001f18 <_vfiprintf_r+0x20>
 8001f58:	4b79      	ldr	r3, [pc, #484]	; (8002140 <_vfiprintf_r+0x248>)
 8001f5a:	429d      	cmp	r5, r3
 8001f5c:	bf08      	it	eq
 8001f5e:	68f5      	ldreq	r5, [r6, #12]
 8001f60:	e7da      	b.n	8001f18 <_vfiprintf_r+0x20>
 8001f62:	89ab      	ldrh	r3, [r5, #12]
 8001f64:	0598      	lsls	r0, r3, #22
 8001f66:	d4ed      	bmi.n	8001f44 <_vfiprintf_r+0x4c>
 8001f68:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001f6a:	f7ff fbe3 	bl	8001734 <__retarget_lock_release_recursive>
 8001f6e:	e7e9      	b.n	8001f44 <_vfiprintf_r+0x4c>
 8001f70:	2300      	movs	r3, #0
 8001f72:	9309      	str	r3, [sp, #36]	; 0x24
 8001f74:	2320      	movs	r3, #32
 8001f76:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8001f7a:	f8cd 800c 	str.w	r8, [sp, #12]
 8001f7e:	2330      	movs	r3, #48	; 0x30
 8001f80:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8002144 <_vfiprintf_r+0x24c>
 8001f84:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8001f88:	f04f 0901 	mov.w	r9, #1
 8001f8c:	4623      	mov	r3, r4
 8001f8e:	469a      	mov	sl, r3
 8001f90:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001f94:	b10a      	cbz	r2, 8001f9a <_vfiprintf_r+0xa2>
 8001f96:	2a25      	cmp	r2, #37	; 0x25
 8001f98:	d1f9      	bne.n	8001f8e <_vfiprintf_r+0x96>
 8001f9a:	ebba 0b04 	subs.w	fp, sl, r4
 8001f9e:	d00b      	beq.n	8001fb8 <_vfiprintf_r+0xc0>
 8001fa0:	465b      	mov	r3, fp
 8001fa2:	4622      	mov	r2, r4
 8001fa4:	4629      	mov	r1, r5
 8001fa6:	4630      	mov	r0, r6
 8001fa8:	f7ff ff93 	bl	8001ed2 <__sfputs_r>
 8001fac:	3001      	adds	r0, #1
 8001fae:	f000 80aa 	beq.w	8002106 <_vfiprintf_r+0x20e>
 8001fb2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001fb4:	445a      	add	r2, fp
 8001fb6:	9209      	str	r2, [sp, #36]	; 0x24
 8001fb8:	f89a 3000 	ldrb.w	r3, [sl]
 8001fbc:	2b00      	cmp	r3, #0
 8001fbe:	f000 80a2 	beq.w	8002106 <_vfiprintf_r+0x20e>
 8001fc2:	2300      	movs	r3, #0
 8001fc4:	f04f 32ff 	mov.w	r2, #4294967295
 8001fc8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8001fcc:	f10a 0a01 	add.w	sl, sl, #1
 8001fd0:	9304      	str	r3, [sp, #16]
 8001fd2:	9307      	str	r3, [sp, #28]
 8001fd4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8001fd8:	931a      	str	r3, [sp, #104]	; 0x68
 8001fda:	4654      	mov	r4, sl
 8001fdc:	2205      	movs	r2, #5
 8001fde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001fe2:	4858      	ldr	r0, [pc, #352]	; (8002144 <_vfiprintf_r+0x24c>)
 8001fe4:	f7fe f8fc 	bl	80001e0 <memchr>
 8001fe8:	9a04      	ldr	r2, [sp, #16]
 8001fea:	b9d8      	cbnz	r0, 8002024 <_vfiprintf_r+0x12c>
 8001fec:	06d1      	lsls	r1, r2, #27
 8001fee:	bf44      	itt	mi
 8001ff0:	2320      	movmi	r3, #32
 8001ff2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8001ff6:	0713      	lsls	r3, r2, #28
 8001ff8:	bf44      	itt	mi
 8001ffa:	232b      	movmi	r3, #43	; 0x2b
 8001ffc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8002000:	f89a 3000 	ldrb.w	r3, [sl]
 8002004:	2b2a      	cmp	r3, #42	; 0x2a
 8002006:	d015      	beq.n	8002034 <_vfiprintf_r+0x13c>
 8002008:	9a07      	ldr	r2, [sp, #28]
 800200a:	4654      	mov	r4, sl
 800200c:	2000      	movs	r0, #0
 800200e:	f04f 0c0a 	mov.w	ip, #10
 8002012:	4621      	mov	r1, r4
 8002014:	f811 3b01 	ldrb.w	r3, [r1], #1
 8002018:	3b30      	subs	r3, #48	; 0x30
 800201a:	2b09      	cmp	r3, #9
 800201c:	d94e      	bls.n	80020bc <_vfiprintf_r+0x1c4>
 800201e:	b1b0      	cbz	r0, 800204e <_vfiprintf_r+0x156>
 8002020:	9207      	str	r2, [sp, #28]
 8002022:	e014      	b.n	800204e <_vfiprintf_r+0x156>
 8002024:	eba0 0308 	sub.w	r3, r0, r8
 8002028:	fa09 f303 	lsl.w	r3, r9, r3
 800202c:	4313      	orrs	r3, r2
 800202e:	9304      	str	r3, [sp, #16]
 8002030:	46a2      	mov	sl, r4
 8002032:	e7d2      	b.n	8001fda <_vfiprintf_r+0xe2>
 8002034:	9b03      	ldr	r3, [sp, #12]
 8002036:	1d19      	adds	r1, r3, #4
 8002038:	681b      	ldr	r3, [r3, #0]
 800203a:	9103      	str	r1, [sp, #12]
 800203c:	2b00      	cmp	r3, #0
 800203e:	bfbb      	ittet	lt
 8002040:	425b      	neglt	r3, r3
 8002042:	f042 0202 	orrlt.w	r2, r2, #2
 8002046:	9307      	strge	r3, [sp, #28]
 8002048:	9307      	strlt	r3, [sp, #28]
 800204a:	bfb8      	it	lt
 800204c:	9204      	strlt	r2, [sp, #16]
 800204e:	7823      	ldrb	r3, [r4, #0]
 8002050:	2b2e      	cmp	r3, #46	; 0x2e
 8002052:	d10c      	bne.n	800206e <_vfiprintf_r+0x176>
 8002054:	7863      	ldrb	r3, [r4, #1]
 8002056:	2b2a      	cmp	r3, #42	; 0x2a
 8002058:	d135      	bne.n	80020c6 <_vfiprintf_r+0x1ce>
 800205a:	9b03      	ldr	r3, [sp, #12]
 800205c:	1d1a      	adds	r2, r3, #4
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	9203      	str	r2, [sp, #12]
 8002062:	2b00      	cmp	r3, #0
 8002064:	bfb8      	it	lt
 8002066:	f04f 33ff 	movlt.w	r3, #4294967295
 800206a:	3402      	adds	r4, #2
 800206c:	9305      	str	r3, [sp, #20]
 800206e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8002154 <_vfiprintf_r+0x25c>
 8002072:	7821      	ldrb	r1, [r4, #0]
 8002074:	2203      	movs	r2, #3
 8002076:	4650      	mov	r0, sl
 8002078:	f7fe f8b2 	bl	80001e0 <memchr>
 800207c:	b140      	cbz	r0, 8002090 <_vfiprintf_r+0x198>
 800207e:	2340      	movs	r3, #64	; 0x40
 8002080:	eba0 000a 	sub.w	r0, r0, sl
 8002084:	fa03 f000 	lsl.w	r0, r3, r0
 8002088:	9b04      	ldr	r3, [sp, #16]
 800208a:	4303      	orrs	r3, r0
 800208c:	3401      	adds	r4, #1
 800208e:	9304      	str	r3, [sp, #16]
 8002090:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002094:	482c      	ldr	r0, [pc, #176]	; (8002148 <_vfiprintf_r+0x250>)
 8002096:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800209a:	2206      	movs	r2, #6
 800209c:	f7fe f8a0 	bl	80001e0 <memchr>
 80020a0:	2800      	cmp	r0, #0
 80020a2:	d03f      	beq.n	8002124 <_vfiprintf_r+0x22c>
 80020a4:	4b29      	ldr	r3, [pc, #164]	; (800214c <_vfiprintf_r+0x254>)
 80020a6:	bb1b      	cbnz	r3, 80020f0 <_vfiprintf_r+0x1f8>
 80020a8:	9b03      	ldr	r3, [sp, #12]
 80020aa:	3307      	adds	r3, #7
 80020ac:	f023 0307 	bic.w	r3, r3, #7
 80020b0:	3308      	adds	r3, #8
 80020b2:	9303      	str	r3, [sp, #12]
 80020b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80020b6:	443b      	add	r3, r7
 80020b8:	9309      	str	r3, [sp, #36]	; 0x24
 80020ba:	e767      	b.n	8001f8c <_vfiprintf_r+0x94>
 80020bc:	fb0c 3202 	mla	r2, ip, r2, r3
 80020c0:	460c      	mov	r4, r1
 80020c2:	2001      	movs	r0, #1
 80020c4:	e7a5      	b.n	8002012 <_vfiprintf_r+0x11a>
 80020c6:	2300      	movs	r3, #0
 80020c8:	3401      	adds	r4, #1
 80020ca:	9305      	str	r3, [sp, #20]
 80020cc:	4619      	mov	r1, r3
 80020ce:	f04f 0c0a 	mov.w	ip, #10
 80020d2:	4620      	mov	r0, r4
 80020d4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80020d8:	3a30      	subs	r2, #48	; 0x30
 80020da:	2a09      	cmp	r2, #9
 80020dc:	d903      	bls.n	80020e6 <_vfiprintf_r+0x1ee>
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d0c5      	beq.n	800206e <_vfiprintf_r+0x176>
 80020e2:	9105      	str	r1, [sp, #20]
 80020e4:	e7c3      	b.n	800206e <_vfiprintf_r+0x176>
 80020e6:	fb0c 2101 	mla	r1, ip, r1, r2
 80020ea:	4604      	mov	r4, r0
 80020ec:	2301      	movs	r3, #1
 80020ee:	e7f0      	b.n	80020d2 <_vfiprintf_r+0x1da>
 80020f0:	ab03      	add	r3, sp, #12
 80020f2:	9300      	str	r3, [sp, #0]
 80020f4:	462a      	mov	r2, r5
 80020f6:	4b16      	ldr	r3, [pc, #88]	; (8002150 <_vfiprintf_r+0x258>)
 80020f8:	a904      	add	r1, sp, #16
 80020fa:	4630      	mov	r0, r6
 80020fc:	f3af 8000 	nop.w
 8002100:	4607      	mov	r7, r0
 8002102:	1c78      	adds	r0, r7, #1
 8002104:	d1d6      	bne.n	80020b4 <_vfiprintf_r+0x1bc>
 8002106:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8002108:	07d9      	lsls	r1, r3, #31
 800210a:	d405      	bmi.n	8002118 <_vfiprintf_r+0x220>
 800210c:	89ab      	ldrh	r3, [r5, #12]
 800210e:	059a      	lsls	r2, r3, #22
 8002110:	d402      	bmi.n	8002118 <_vfiprintf_r+0x220>
 8002112:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002114:	f7ff fb0e 	bl	8001734 <__retarget_lock_release_recursive>
 8002118:	89ab      	ldrh	r3, [r5, #12]
 800211a:	065b      	lsls	r3, r3, #25
 800211c:	f53f af12 	bmi.w	8001f44 <_vfiprintf_r+0x4c>
 8002120:	9809      	ldr	r0, [sp, #36]	; 0x24
 8002122:	e711      	b.n	8001f48 <_vfiprintf_r+0x50>
 8002124:	ab03      	add	r3, sp, #12
 8002126:	9300      	str	r3, [sp, #0]
 8002128:	462a      	mov	r2, r5
 800212a:	4b09      	ldr	r3, [pc, #36]	; (8002150 <_vfiprintf_r+0x258>)
 800212c:	a904      	add	r1, sp, #16
 800212e:	4630      	mov	r0, r6
 8002130:	f000 f880 	bl	8002234 <_printf_i>
 8002134:	e7e4      	b.n	8002100 <_vfiprintf_r+0x208>
 8002136:	bf00      	nop
 8002138:	080025b4 	.word	0x080025b4
 800213c:	080025d4 	.word	0x080025d4
 8002140:	08002594 	.word	0x08002594
 8002144:	080025f8 	.word	0x080025f8
 8002148:	08002602 	.word	0x08002602
 800214c:	00000000 	.word	0x00000000
 8002150:	08001ed3 	.word	0x08001ed3
 8002154:	080025fe 	.word	0x080025fe

08002158 <_printf_common>:
 8002158:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800215c:	4616      	mov	r6, r2
 800215e:	4699      	mov	r9, r3
 8002160:	688a      	ldr	r2, [r1, #8]
 8002162:	690b      	ldr	r3, [r1, #16]
 8002164:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002168:	4293      	cmp	r3, r2
 800216a:	bfb8      	it	lt
 800216c:	4613      	movlt	r3, r2
 800216e:	6033      	str	r3, [r6, #0]
 8002170:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002174:	4607      	mov	r7, r0
 8002176:	460c      	mov	r4, r1
 8002178:	b10a      	cbz	r2, 800217e <_printf_common+0x26>
 800217a:	3301      	adds	r3, #1
 800217c:	6033      	str	r3, [r6, #0]
 800217e:	6823      	ldr	r3, [r4, #0]
 8002180:	0699      	lsls	r1, r3, #26
 8002182:	bf42      	ittt	mi
 8002184:	6833      	ldrmi	r3, [r6, #0]
 8002186:	3302      	addmi	r3, #2
 8002188:	6033      	strmi	r3, [r6, #0]
 800218a:	6825      	ldr	r5, [r4, #0]
 800218c:	f015 0506 	ands.w	r5, r5, #6
 8002190:	d106      	bne.n	80021a0 <_printf_common+0x48>
 8002192:	f104 0a19 	add.w	sl, r4, #25
 8002196:	68e3      	ldr	r3, [r4, #12]
 8002198:	6832      	ldr	r2, [r6, #0]
 800219a:	1a9b      	subs	r3, r3, r2
 800219c:	42ab      	cmp	r3, r5
 800219e:	dc26      	bgt.n	80021ee <_printf_common+0x96>
 80021a0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80021a4:	1e13      	subs	r3, r2, #0
 80021a6:	6822      	ldr	r2, [r4, #0]
 80021a8:	bf18      	it	ne
 80021aa:	2301      	movne	r3, #1
 80021ac:	0692      	lsls	r2, r2, #26
 80021ae:	d42b      	bmi.n	8002208 <_printf_common+0xb0>
 80021b0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80021b4:	4649      	mov	r1, r9
 80021b6:	4638      	mov	r0, r7
 80021b8:	47c0      	blx	r8
 80021ba:	3001      	adds	r0, #1
 80021bc:	d01e      	beq.n	80021fc <_printf_common+0xa4>
 80021be:	6823      	ldr	r3, [r4, #0]
 80021c0:	68e5      	ldr	r5, [r4, #12]
 80021c2:	6832      	ldr	r2, [r6, #0]
 80021c4:	f003 0306 	and.w	r3, r3, #6
 80021c8:	2b04      	cmp	r3, #4
 80021ca:	bf08      	it	eq
 80021cc:	1aad      	subeq	r5, r5, r2
 80021ce:	68a3      	ldr	r3, [r4, #8]
 80021d0:	6922      	ldr	r2, [r4, #16]
 80021d2:	bf0c      	ite	eq
 80021d4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80021d8:	2500      	movne	r5, #0
 80021da:	4293      	cmp	r3, r2
 80021dc:	bfc4      	itt	gt
 80021de:	1a9b      	subgt	r3, r3, r2
 80021e0:	18ed      	addgt	r5, r5, r3
 80021e2:	2600      	movs	r6, #0
 80021e4:	341a      	adds	r4, #26
 80021e6:	42b5      	cmp	r5, r6
 80021e8:	d11a      	bne.n	8002220 <_printf_common+0xc8>
 80021ea:	2000      	movs	r0, #0
 80021ec:	e008      	b.n	8002200 <_printf_common+0xa8>
 80021ee:	2301      	movs	r3, #1
 80021f0:	4652      	mov	r2, sl
 80021f2:	4649      	mov	r1, r9
 80021f4:	4638      	mov	r0, r7
 80021f6:	47c0      	blx	r8
 80021f8:	3001      	adds	r0, #1
 80021fa:	d103      	bne.n	8002204 <_printf_common+0xac>
 80021fc:	f04f 30ff 	mov.w	r0, #4294967295
 8002200:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002204:	3501      	adds	r5, #1
 8002206:	e7c6      	b.n	8002196 <_printf_common+0x3e>
 8002208:	18e1      	adds	r1, r4, r3
 800220a:	1c5a      	adds	r2, r3, #1
 800220c:	2030      	movs	r0, #48	; 0x30
 800220e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002212:	4422      	add	r2, r4
 8002214:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002218:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800221c:	3302      	adds	r3, #2
 800221e:	e7c7      	b.n	80021b0 <_printf_common+0x58>
 8002220:	2301      	movs	r3, #1
 8002222:	4622      	mov	r2, r4
 8002224:	4649      	mov	r1, r9
 8002226:	4638      	mov	r0, r7
 8002228:	47c0      	blx	r8
 800222a:	3001      	adds	r0, #1
 800222c:	d0e6      	beq.n	80021fc <_printf_common+0xa4>
 800222e:	3601      	adds	r6, #1
 8002230:	e7d9      	b.n	80021e6 <_printf_common+0x8e>
	...

08002234 <_printf_i>:
 8002234:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8002238:	460c      	mov	r4, r1
 800223a:	4691      	mov	r9, r2
 800223c:	7e27      	ldrb	r7, [r4, #24]
 800223e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8002240:	2f78      	cmp	r7, #120	; 0x78
 8002242:	4680      	mov	r8, r0
 8002244:	469a      	mov	sl, r3
 8002246:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800224a:	d807      	bhi.n	800225c <_printf_i+0x28>
 800224c:	2f62      	cmp	r7, #98	; 0x62
 800224e:	d80a      	bhi.n	8002266 <_printf_i+0x32>
 8002250:	2f00      	cmp	r7, #0
 8002252:	f000 80d8 	beq.w	8002406 <_printf_i+0x1d2>
 8002256:	2f58      	cmp	r7, #88	; 0x58
 8002258:	f000 80a3 	beq.w	80023a2 <_printf_i+0x16e>
 800225c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8002260:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002264:	e03a      	b.n	80022dc <_printf_i+0xa8>
 8002266:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800226a:	2b15      	cmp	r3, #21
 800226c:	d8f6      	bhi.n	800225c <_printf_i+0x28>
 800226e:	a001      	add	r0, pc, #4	; (adr r0, 8002274 <_printf_i+0x40>)
 8002270:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8002274:	080022cd 	.word	0x080022cd
 8002278:	080022e1 	.word	0x080022e1
 800227c:	0800225d 	.word	0x0800225d
 8002280:	0800225d 	.word	0x0800225d
 8002284:	0800225d 	.word	0x0800225d
 8002288:	0800225d 	.word	0x0800225d
 800228c:	080022e1 	.word	0x080022e1
 8002290:	0800225d 	.word	0x0800225d
 8002294:	0800225d 	.word	0x0800225d
 8002298:	0800225d 	.word	0x0800225d
 800229c:	0800225d 	.word	0x0800225d
 80022a0:	080023ed 	.word	0x080023ed
 80022a4:	08002311 	.word	0x08002311
 80022a8:	080023cf 	.word	0x080023cf
 80022ac:	0800225d 	.word	0x0800225d
 80022b0:	0800225d 	.word	0x0800225d
 80022b4:	0800240f 	.word	0x0800240f
 80022b8:	0800225d 	.word	0x0800225d
 80022bc:	08002311 	.word	0x08002311
 80022c0:	0800225d 	.word	0x0800225d
 80022c4:	0800225d 	.word	0x0800225d
 80022c8:	080023d7 	.word	0x080023d7
 80022cc:	680b      	ldr	r3, [r1, #0]
 80022ce:	1d1a      	adds	r2, r3, #4
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	600a      	str	r2, [r1, #0]
 80022d4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80022d8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80022dc:	2301      	movs	r3, #1
 80022de:	e0a3      	b.n	8002428 <_printf_i+0x1f4>
 80022e0:	6825      	ldr	r5, [r4, #0]
 80022e2:	6808      	ldr	r0, [r1, #0]
 80022e4:	062e      	lsls	r6, r5, #24
 80022e6:	f100 0304 	add.w	r3, r0, #4
 80022ea:	d50a      	bpl.n	8002302 <_printf_i+0xce>
 80022ec:	6805      	ldr	r5, [r0, #0]
 80022ee:	600b      	str	r3, [r1, #0]
 80022f0:	2d00      	cmp	r5, #0
 80022f2:	da03      	bge.n	80022fc <_printf_i+0xc8>
 80022f4:	232d      	movs	r3, #45	; 0x2d
 80022f6:	426d      	negs	r5, r5
 80022f8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80022fc:	485e      	ldr	r0, [pc, #376]	; (8002478 <_printf_i+0x244>)
 80022fe:	230a      	movs	r3, #10
 8002300:	e019      	b.n	8002336 <_printf_i+0x102>
 8002302:	f015 0f40 	tst.w	r5, #64	; 0x40
 8002306:	6805      	ldr	r5, [r0, #0]
 8002308:	600b      	str	r3, [r1, #0]
 800230a:	bf18      	it	ne
 800230c:	b22d      	sxthne	r5, r5
 800230e:	e7ef      	b.n	80022f0 <_printf_i+0xbc>
 8002310:	680b      	ldr	r3, [r1, #0]
 8002312:	6825      	ldr	r5, [r4, #0]
 8002314:	1d18      	adds	r0, r3, #4
 8002316:	6008      	str	r0, [r1, #0]
 8002318:	0628      	lsls	r0, r5, #24
 800231a:	d501      	bpl.n	8002320 <_printf_i+0xec>
 800231c:	681d      	ldr	r5, [r3, #0]
 800231e:	e002      	b.n	8002326 <_printf_i+0xf2>
 8002320:	0669      	lsls	r1, r5, #25
 8002322:	d5fb      	bpl.n	800231c <_printf_i+0xe8>
 8002324:	881d      	ldrh	r5, [r3, #0]
 8002326:	4854      	ldr	r0, [pc, #336]	; (8002478 <_printf_i+0x244>)
 8002328:	2f6f      	cmp	r7, #111	; 0x6f
 800232a:	bf0c      	ite	eq
 800232c:	2308      	moveq	r3, #8
 800232e:	230a      	movne	r3, #10
 8002330:	2100      	movs	r1, #0
 8002332:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002336:	6866      	ldr	r6, [r4, #4]
 8002338:	60a6      	str	r6, [r4, #8]
 800233a:	2e00      	cmp	r6, #0
 800233c:	bfa2      	ittt	ge
 800233e:	6821      	ldrge	r1, [r4, #0]
 8002340:	f021 0104 	bicge.w	r1, r1, #4
 8002344:	6021      	strge	r1, [r4, #0]
 8002346:	b90d      	cbnz	r5, 800234c <_printf_i+0x118>
 8002348:	2e00      	cmp	r6, #0
 800234a:	d04d      	beq.n	80023e8 <_printf_i+0x1b4>
 800234c:	4616      	mov	r6, r2
 800234e:	fbb5 f1f3 	udiv	r1, r5, r3
 8002352:	fb03 5711 	mls	r7, r3, r1, r5
 8002356:	5dc7      	ldrb	r7, [r0, r7]
 8002358:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800235c:	462f      	mov	r7, r5
 800235e:	42bb      	cmp	r3, r7
 8002360:	460d      	mov	r5, r1
 8002362:	d9f4      	bls.n	800234e <_printf_i+0x11a>
 8002364:	2b08      	cmp	r3, #8
 8002366:	d10b      	bne.n	8002380 <_printf_i+0x14c>
 8002368:	6823      	ldr	r3, [r4, #0]
 800236a:	07df      	lsls	r7, r3, #31
 800236c:	d508      	bpl.n	8002380 <_printf_i+0x14c>
 800236e:	6923      	ldr	r3, [r4, #16]
 8002370:	6861      	ldr	r1, [r4, #4]
 8002372:	4299      	cmp	r1, r3
 8002374:	bfde      	ittt	le
 8002376:	2330      	movle	r3, #48	; 0x30
 8002378:	f806 3c01 	strble.w	r3, [r6, #-1]
 800237c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002380:	1b92      	subs	r2, r2, r6
 8002382:	6122      	str	r2, [r4, #16]
 8002384:	f8cd a000 	str.w	sl, [sp]
 8002388:	464b      	mov	r3, r9
 800238a:	aa03      	add	r2, sp, #12
 800238c:	4621      	mov	r1, r4
 800238e:	4640      	mov	r0, r8
 8002390:	f7ff fee2 	bl	8002158 <_printf_common>
 8002394:	3001      	adds	r0, #1
 8002396:	d14c      	bne.n	8002432 <_printf_i+0x1fe>
 8002398:	f04f 30ff 	mov.w	r0, #4294967295
 800239c:	b004      	add	sp, #16
 800239e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023a2:	4835      	ldr	r0, [pc, #212]	; (8002478 <_printf_i+0x244>)
 80023a4:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80023a8:	6823      	ldr	r3, [r4, #0]
 80023aa:	680e      	ldr	r6, [r1, #0]
 80023ac:	061f      	lsls	r7, r3, #24
 80023ae:	f856 5b04 	ldr.w	r5, [r6], #4
 80023b2:	600e      	str	r6, [r1, #0]
 80023b4:	d514      	bpl.n	80023e0 <_printf_i+0x1ac>
 80023b6:	07d9      	lsls	r1, r3, #31
 80023b8:	bf44      	itt	mi
 80023ba:	f043 0320 	orrmi.w	r3, r3, #32
 80023be:	6023      	strmi	r3, [r4, #0]
 80023c0:	b91d      	cbnz	r5, 80023ca <_printf_i+0x196>
 80023c2:	6823      	ldr	r3, [r4, #0]
 80023c4:	f023 0320 	bic.w	r3, r3, #32
 80023c8:	6023      	str	r3, [r4, #0]
 80023ca:	2310      	movs	r3, #16
 80023cc:	e7b0      	b.n	8002330 <_printf_i+0xfc>
 80023ce:	6823      	ldr	r3, [r4, #0]
 80023d0:	f043 0320 	orr.w	r3, r3, #32
 80023d4:	6023      	str	r3, [r4, #0]
 80023d6:	2378      	movs	r3, #120	; 0x78
 80023d8:	4828      	ldr	r0, [pc, #160]	; (800247c <_printf_i+0x248>)
 80023da:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80023de:	e7e3      	b.n	80023a8 <_printf_i+0x174>
 80023e0:	065e      	lsls	r6, r3, #25
 80023e2:	bf48      	it	mi
 80023e4:	b2ad      	uxthmi	r5, r5
 80023e6:	e7e6      	b.n	80023b6 <_printf_i+0x182>
 80023e8:	4616      	mov	r6, r2
 80023ea:	e7bb      	b.n	8002364 <_printf_i+0x130>
 80023ec:	680b      	ldr	r3, [r1, #0]
 80023ee:	6826      	ldr	r6, [r4, #0]
 80023f0:	6960      	ldr	r0, [r4, #20]
 80023f2:	1d1d      	adds	r5, r3, #4
 80023f4:	600d      	str	r5, [r1, #0]
 80023f6:	0635      	lsls	r5, r6, #24
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	d501      	bpl.n	8002400 <_printf_i+0x1cc>
 80023fc:	6018      	str	r0, [r3, #0]
 80023fe:	e002      	b.n	8002406 <_printf_i+0x1d2>
 8002400:	0671      	lsls	r1, r6, #25
 8002402:	d5fb      	bpl.n	80023fc <_printf_i+0x1c8>
 8002404:	8018      	strh	r0, [r3, #0]
 8002406:	2300      	movs	r3, #0
 8002408:	6123      	str	r3, [r4, #16]
 800240a:	4616      	mov	r6, r2
 800240c:	e7ba      	b.n	8002384 <_printf_i+0x150>
 800240e:	680b      	ldr	r3, [r1, #0]
 8002410:	1d1a      	adds	r2, r3, #4
 8002412:	600a      	str	r2, [r1, #0]
 8002414:	681e      	ldr	r6, [r3, #0]
 8002416:	6862      	ldr	r2, [r4, #4]
 8002418:	2100      	movs	r1, #0
 800241a:	4630      	mov	r0, r6
 800241c:	f7fd fee0 	bl	80001e0 <memchr>
 8002420:	b108      	cbz	r0, 8002426 <_printf_i+0x1f2>
 8002422:	1b80      	subs	r0, r0, r6
 8002424:	6060      	str	r0, [r4, #4]
 8002426:	6863      	ldr	r3, [r4, #4]
 8002428:	6123      	str	r3, [r4, #16]
 800242a:	2300      	movs	r3, #0
 800242c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002430:	e7a8      	b.n	8002384 <_printf_i+0x150>
 8002432:	6923      	ldr	r3, [r4, #16]
 8002434:	4632      	mov	r2, r6
 8002436:	4649      	mov	r1, r9
 8002438:	4640      	mov	r0, r8
 800243a:	47d0      	blx	sl
 800243c:	3001      	adds	r0, #1
 800243e:	d0ab      	beq.n	8002398 <_printf_i+0x164>
 8002440:	6823      	ldr	r3, [r4, #0]
 8002442:	079b      	lsls	r3, r3, #30
 8002444:	d413      	bmi.n	800246e <_printf_i+0x23a>
 8002446:	68e0      	ldr	r0, [r4, #12]
 8002448:	9b03      	ldr	r3, [sp, #12]
 800244a:	4298      	cmp	r0, r3
 800244c:	bfb8      	it	lt
 800244e:	4618      	movlt	r0, r3
 8002450:	e7a4      	b.n	800239c <_printf_i+0x168>
 8002452:	2301      	movs	r3, #1
 8002454:	4632      	mov	r2, r6
 8002456:	4649      	mov	r1, r9
 8002458:	4640      	mov	r0, r8
 800245a:	47d0      	blx	sl
 800245c:	3001      	adds	r0, #1
 800245e:	d09b      	beq.n	8002398 <_printf_i+0x164>
 8002460:	3501      	adds	r5, #1
 8002462:	68e3      	ldr	r3, [r4, #12]
 8002464:	9903      	ldr	r1, [sp, #12]
 8002466:	1a5b      	subs	r3, r3, r1
 8002468:	42ab      	cmp	r3, r5
 800246a:	dcf2      	bgt.n	8002452 <_printf_i+0x21e>
 800246c:	e7eb      	b.n	8002446 <_printf_i+0x212>
 800246e:	2500      	movs	r5, #0
 8002470:	f104 0619 	add.w	r6, r4, #25
 8002474:	e7f5      	b.n	8002462 <_printf_i+0x22e>
 8002476:	bf00      	nop
 8002478:	08002609 	.word	0x08002609
 800247c:	0800261a 	.word	0x0800261a

08002480 <_read_r>:
 8002480:	b538      	push	{r3, r4, r5, lr}
 8002482:	4d07      	ldr	r5, [pc, #28]	; (80024a0 <_read_r+0x20>)
 8002484:	4604      	mov	r4, r0
 8002486:	4608      	mov	r0, r1
 8002488:	4611      	mov	r1, r2
 800248a:	2200      	movs	r2, #0
 800248c:	602a      	str	r2, [r5, #0]
 800248e:	461a      	mov	r2, r3
 8002490:	f7fe fdd0 	bl	8001034 <_read>
 8002494:	1c43      	adds	r3, r0, #1
 8002496:	d102      	bne.n	800249e <_read_r+0x1e>
 8002498:	682b      	ldr	r3, [r5, #0]
 800249a:	b103      	cbz	r3, 800249e <_read_r+0x1e>
 800249c:	6023      	str	r3, [r4, #0]
 800249e:	bd38      	pop	{r3, r4, r5, pc}
 80024a0:	2000014c 	.word	0x2000014c

080024a4 <_fstat_r>:
 80024a4:	b538      	push	{r3, r4, r5, lr}
 80024a6:	4d07      	ldr	r5, [pc, #28]	; (80024c4 <_fstat_r+0x20>)
 80024a8:	2300      	movs	r3, #0
 80024aa:	4604      	mov	r4, r0
 80024ac:	4608      	mov	r0, r1
 80024ae:	4611      	mov	r1, r2
 80024b0:	602b      	str	r3, [r5, #0]
 80024b2:	f7fe fe9c 	bl	80011ee <_fstat>
 80024b6:	1c43      	adds	r3, r0, #1
 80024b8:	d102      	bne.n	80024c0 <_fstat_r+0x1c>
 80024ba:	682b      	ldr	r3, [r5, #0]
 80024bc:	b103      	cbz	r3, 80024c0 <_fstat_r+0x1c>
 80024be:	6023      	str	r3, [r4, #0]
 80024c0:	bd38      	pop	{r3, r4, r5, pc}
 80024c2:	bf00      	nop
 80024c4:	2000014c 	.word	0x2000014c

080024c8 <_isatty_r>:
 80024c8:	b538      	push	{r3, r4, r5, lr}
 80024ca:	4d06      	ldr	r5, [pc, #24]	; (80024e4 <_isatty_r+0x1c>)
 80024cc:	2300      	movs	r3, #0
 80024ce:	4604      	mov	r4, r0
 80024d0:	4608      	mov	r0, r1
 80024d2:	602b      	str	r3, [r5, #0]
 80024d4:	f7fe fff0 	bl	80014b8 <_isatty>
 80024d8:	1c43      	adds	r3, r0, #1
 80024da:	d102      	bne.n	80024e2 <_isatty_r+0x1a>
 80024dc:	682b      	ldr	r3, [r5, #0]
 80024de:	b103      	cbz	r3, 80024e2 <_isatty_r+0x1a>
 80024e0:	6023      	str	r3, [r4, #0]
 80024e2:	bd38      	pop	{r3, r4, r5, pc}
 80024e4:	2000014c 	.word	0x2000014c

080024e8 <_init>:
 80024e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024ea:	bf00      	nop
 80024ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80024ee:	bc08      	pop	{r3}
 80024f0:	469e      	mov	lr, r3
 80024f2:	4770      	bx	lr

080024f4 <_fini>:
 80024f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024f6:	bf00      	nop
 80024f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80024fa:	bc08      	pop	{r3}
 80024fc:	469e      	mov	lr, r3
 80024fe:	4770      	bx	lr
